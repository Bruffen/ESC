 Percent |	Source code & Disassembly of sort for cycles
------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0000000000400830 <sort1>:
    0.02 :	  400830:       push   %r15
    0.02 :	  400832:       mov    %edx,%eax
    0.00 :	  400834:       mov    %esi,%r9d
    0.00 :	  400837:       push   %r14
    0.05 :	  400839:       sub    $0x1,%eax
    0.00 :	  40083c:       push   %r13
    0.00 :	  40083e:       push   %r12
    0.02 :	  400840:       push   %rbp
    0.00 :	  400841:       push   %rbx
    0.01 :	  400842:       mov    %rdi,%rbx
    0.00 :	  400845:       sub    $0x68,%rsp
    0.00 :	  400849:       mov    %rdi,(%rsp)
    0.06 :	  40084d:       mov    %edx,0x10(%rsp)
    0.01 :	  400851:       mov    %eax,0x54(%rsp)
    0.00 :	  400855:       mov    0x10(%rsp),%eax
    0.01 :	  400859:       mov    %rbx,%r10
    0.01 :	  40085c:       add    %r9d,%eax
    0.04 :	  40085f:       mov    %eax,%edx
    0.00 :	  400861:       shr    $0x1f,%edx
    0.03 :	  400864:       add    %edx,%eax
    0.02 :	  400866:       mov    %r9d,%edx
    0.01 :	  400869:       sar    %eax
    0.03 :	  40086b:       cltq   
    0.02 :	  40086d:       mov    (%rbx,%rax,4),%ecx
    0.18 :	  400870:       mov    0x54(%rsp),%eax
    0.02 :	  400874:       cmp    %eax,%edx
    0.00 :	  400876:       jg     400909 <sort1+0xd9>
    0.01 :	  40087c:       movslq %edx,%rsi
    0.03 :	  40087f:       shl    $0x2,%rsi
    0.17 :	  400883:       lea    (%r10,%rsi,1),%rbx
    0.03 :	  400887:       mov    (%rbx),%r11d
    0.18 :	  40088a:       cmp    0x10(%rsp),%edx
    0.00 :	  40088e:       jge    40092c <sort1+0xfc>
    0.01 :	  400894:       cmp    %r11d,%ecx
    0.21 :	  400897:       lea    0x4(%r10,%rsi,1),%rsi
    0.01 :	  40089c:       setg   %dil
    0.15 :	  4008a0:       test   %dil,%dil
    0.00 :	  4008a3:       jne    4008b6 <sort1+0x86>
    0.33 :	  4008a5:       jmpq   40092c <sort1+0xfc>
    0.00 :	  4008aa:       nopw   0x0(%rax,%rax,1)
    0.22 :	  4008b0:       cmp    0x10(%rsp),%edx
    0.00 :	  4008b4:       jge    4008c8 <sort1+0x98>
    1.16 :	  4008b6:       mov    (%rsi),%r11d
    0.44 :	  4008b9:       mov    %rsi,%rbx
    0.00 :	  4008bc:       add    $0x1,%edx
    0.02 :	  4008bf:       add    $0x4,%rsi
    0.40 :	  4008c3:       cmp    %r11d,%ecx
    0.00 :	  4008c6:       jg     4008b0 <sort1+0x80>
    0.37 :	  4008c8:       movslq %eax,%rsi
    0.26 :	  4008cb:       shl    $0x2,%rsi
    0.06 :	  4008cf:       lea    (%r10,%rsi,1),%r8
    0.06 :	  4008d3:       mov    (%r8),%edi
    0.39 :	  4008d6:       cmp    %eax,%r9d
    0.00 :	  4008d9:       jge    400a40 <sort1+0x210>
    0.00 :	  4008df:       cmp    %edi,%ecx
    0.00 :	  4008e1:       jge    400a40 <sort1+0x210>
    0.25 :	  4008e7:       lea    -0x4(%r10,%rsi,1),%rsi
    0.17 :	  4008ec:       jmp    4008f4 <sort1+0xc4>
    0.00 :	  4008ee:       xchg   %ax,%ax
    0.01 :	  4008f0:       cmp    %edi,%ecx
    0.00 :	  4008f2:       jge    400905 <sort1+0xd5>
    0.38 :	  4008f4:       sub    $0x1,%eax
    0.16 :	  4008f7:       mov    %rsi,%r8
    0.03 :	  4008fa:       mov    (%rsi),%edi
    0.41 :	  4008fc:       sub    $0x4,%rsi
    0.04 :	  400900:       cmp    %eax,%r9d
    0.00 :	  400903:       jl     4008f0 <sort1+0xc0>
    0.49 :	  400905:       cmp    %edx,%eax
    0.00 :	  400907:       jge    400943 <sort1+0x113>
    0.10 :	  400909:       mov    %edx,0x14(%rsp)
    0.24 :	  40090d:       mov    %eax,0x18(%rsp)
    0.08 :	  400911:       cmp    %eax,%r9d
    0.00 :	  400914:       jl     400962 <sort1+0x132>
    0.01 :	  400916:       mov    0x14(%rsp),%ebx
    0.07 :	  40091a:       cmp    %ebx,0x10(%rsp)
    0.00 :	  40091e:       jle    400953 <sort1+0x123>
    0.04 :	  400920:       mov    %ebx,%r9d
    0.01 :	  400923:       mov    (%rsp),%rbx
    0.02 :	  400927:       jmpq   400855 <sort1+0x25>
    0.16 :	  40092c:       movslq %eax,%rsi
    0.04 :	  40092f:       shl    $0x2,%rsi
    0.06 :	  400933:       lea    (%r10,%rsi,1),%r8
    0.09 :	  400937:       mov    (%r8),%edi
    0.19 :	  40093a:       cmp    %edi,%ecx
    0.00 :	  40093c:       jge    400943 <sort1+0x113>
    0.18 :	  40093e:       cmp    %eax,%r9d
    0.00 :	  400941:       jl     4008e7 <sort1+0xb7>
    0.54 :	  400943:       mov    %edi,(%rbx)
    0.60 :	  400945:       add    $0x1,%edx
    0.02 :	  400948:       sub    $0x1,%eax
    0.00 :	  40094b:       mov    %r11d,(%r8)
    0.35 :	  40094e:       jmpq   400874 <sort1+0x44>
    0.03 :	  400953:       add    $0x68,%rsp
    0.00 :	  400957:       pop    %rbx
    0.01 :	  400958:       pop    %rbp
    0.01 :	  400959:       pop    %r12
    0.01 :	  40095b:       pop    %r13
    0.00 :	  40095d:       pop    %r14
    0.00 :	  40095f:       pop    %r15
    0.01 :	  400961:       retq   
    0.00 :	  400962:       add    $0x1,%eax
    0.02 :	  400965:       mov    %eax,0x8(%rsp)
    0.02 :	  400969:       add    %r9d,%eax
    0.02 :	  40096c:       mov    (%rsp),%rbx
    0.02 :	  400970:       mov    %eax,%edx
    0.01 :	  400972:       shr    $0x1f,%edx
    0.01 :	  400975:       add    %edx,%eax
    0.01 :	  400977:       mov    %r9d,%edx
    0.01 :	  40097a:       sar    %eax
    0.01 :	  40097c:       mov    %rbx,%r10
    0.00 :	  40097f:       cltq   
    0.02 :	  400981:       mov    (%rbx,%rax,4),%ecx
    0.14 :	  400984:       mov    0x18(%rsp),%eax
    0.03 :	  400988:       cmp    %eax,%edx
    0.00 :	  40098a:       jg     400a19 <sort1+0x1e9>
    0.01 :	  400990:       movslq %edx,%rsi
    0.05 :	  400993:       shl    $0x2,%rsi
    0.20 :	  400997:       lea    (%r10,%rsi,1),%rbx
    0.03 :	  40099b:       mov    (%rbx),%r11d
    0.24 :	  40099e:       cmp    %r11d,%ecx
    0.00 :	  4009a1:       jle    400a4d <sort1+0x21d>
    0.54 :	  4009a7:       cmp    %edx,0x8(%rsp)
    0.51 :	  4009ab:       lea    0x4(%r10,%rsi,1),%rsi
    0.00 :	  4009b0:       setg   %dil
    0.06 :	  4009b4:       test   %dil,%dil
    0.00 :	  4009b7:       jne    4009c5 <sort1+0x195>
    0.00 :	  4009b9:       jmpq   400a4d <sort1+0x21d>
    0.00 :	  4009be:       xchg   %ax,%ax
    0.36 :	  4009c0:       cmp    %r11d,%ecx
    0.00 :	  4009c3:       jle    4009d8 <sort1+0x1a8>
    0.47 :	  4009c5:       mov    %rsi,%rbx
    0.16 :	  4009c8:       mov    (%rsi),%r11d
    0.20 :	  4009cb:       add    $0x1,%edx
    0.10 :	  4009ce:       add    $0x4,%rsi
    0.19 :	  4009d2:       cmp    %edx,0x8(%rsp)
    0.00 :	  4009d6:       jg     4009c0 <sort1+0x190>
    0.70 :	  4009d8:       movslq %eax,%rsi
    0.50 :	  4009db:       shl    $0x2,%rsi
    0.15 :	  4009df:       lea    (%r10,%rsi,1),%r8
    0.08 :	  4009e3:       mov    (%r8),%edi
    0.57 :	  4009e6:       cmp    %edi,%ecx
    0.00 :	  4009e8:       jge    400b50 <sort1+0x320>
    0.27 :	  4009ee:       cmp    %eax,%r9d
    0.00 :	  4009f1:       jge    400b50 <sort1+0x320>
    0.25 :	  4009f7:       lea    -0x4(%r10,%rsi,1),%rsi
    0.13 :	  4009fc:       jmp    400a05 <sort1+0x1d5>
    0.00 :	  4009fe:       xchg   %ax,%ax
    0.48 :	  400a00:       cmp    %eax,%r9d
    0.00 :	  400a03:       jge    400a15 <sort1+0x1e5>
    0.23 :	  400a05:       mov    (%rsi),%edi
    0.79 :	  400a07:       mov    %rsi,%r8
    0.00 :	  400a0a:       sub    $0x1,%eax
    0.05 :	  400a0d:       sub    $0x4,%rsi
    0.04 :	  400a11:       cmp    %edi,%ecx
    0.00 :	  400a13:       jl     400a00 <sort1+0x1d0>
    0.75 :	  400a15:       cmp    %edx,%eax
    0.00 :	  400a17:       jge    400a64 <sort1+0x234>
    0.12 :	  400a19:       mov    %edx,0x1c(%rsp)
    0.21 :	  400a1d:       mov    %eax,0x20(%rsp)
    0.08 :	  400a21:       cmp    %eax,%r9d
    0.00 :	  400a24:       jl     400a74 <sort1+0x244>
    0.03 :	  400a26:       mov    0x1c(%rsp),%ebx
    0.07 :	  400a2a:       cmp    %ebx,0x8(%rsp)
    0.00 :	  400a2e:       jle    400916 <sort1+0xe6>
    0.02 :	  400a34:       mov    %ebx,%r9d
    0.01 :	  400a37:       mov    0x8(%rsp),%eax
    0.02 :	  400a3b:       jmpq   400969 <sort1+0x139>
    0.12 :	  400a40:       cmp    %eax,%edx
    0.00 :	  400a42:       jg     400909 <sort1+0xd9>
    0.08 :	  400a48:       jmpq   400943 <sort1+0x113>
    0.49 :	  400a4d:       movslq %eax,%rsi
    0.26 :	  400a50:       shl    $0x2,%rsi
    0.08 :	  400a54:       lea    (%r10,%rsi,1),%r8
    0.03 :	  400a58:       mov    (%r8),%edi
    0.36 :	  400a5b:       cmp    %edi,%ecx
    0.00 :	  400a5d:       jge    400a64 <sort1+0x234>
    0.25 :	  400a5f:       cmp    %eax,%r9d
    0.00 :	  400a62:       jl     4009f7 <sort1+0x1c7>
    0.71 :	  400a64:       mov    %edi,(%rbx)
    0.98 :	  400a66:       add    $0x1,%edx
    0.00 :	  400a69:       sub    $0x1,%eax
    0.02 :	  400a6c:       mov    %r11d,(%r8)
    0.60 :	  400a6f:       jmpq   400988 <sort1+0x158>
    0.00 :	  400a74:       add    $0x1,%eax
    0.02 :	  400a77:       mov    %eax,0xc(%rsp)
    0.04 :	  400a7b:       add    %r9d,%eax
    0.02 :	  400a7e:       mov    (%rsp),%rbx
    0.01 :	  400a82:       mov    %eax,%edx
    0.00 :	  400a84:       shr    $0x1f,%edx
    0.01 :	  400a87:       add    %edx,%eax
    0.02 :	  400a89:       mov    %r9d,%edx
    0.00 :	  400a8c:       sar    %eax
    0.02 :	  400a8e:       mov    %rbx,%r10
    0.01 :	  400a91:       cltq   
    0.02 :	  400a93:       mov    (%rbx,%rax,4),%ecx
    0.13 :	  400a96:       mov    0x20(%rsp),%eax
    0.01 :	  400a9a:       cmp    %eax,%edx
    0.00 :	  400a9c:       jg     400b29 <sort1+0x2f9>
    0.02 :	  400aa2:       movslq %edx,%rsi
    0.08 :	  400aa5:       shl    $0x2,%rsi
    0.20 :	  400aa9:       lea    (%r10,%rsi,1),%rbx
    0.01 :	  400aad:       mov    (%rbx),%r11d
    0.34 :	  400ab0:       cmp    %r11d,%ecx
    0.00 :	  400ab3:       jle    4011db <sort1+0x9ab>
    0.62 :	  400ab9:       cmp    %edx,0xc(%rsp)
    0.71 :	  400abd:       lea    0x4(%r10,%rsi,1),%rsi
    0.00 :	  400ac2:       setg   %dil
    0.05 :	  400ac6:       test   %dil,%dil
    0.00 :	  400ac9:       jne    400ad5 <sort1+0x2a5>
    0.00 :	  400acb:       jmpq   4011db <sort1+0x9ab>
    0.62 :	  400ad0:       cmp    %r11d,%ecx
    0.00 :	  400ad3:       jle    400ae8 <sort1+0x2b8>
    0.47 :	  400ad5:       mov    %rsi,%rbx
    0.21 :	  400ad8:       mov    (%rsi),%r11d
    0.23 :	  400adb:       add    $0x1,%edx
    0.17 :	  400ade:       add    $0x4,%rsi
    0.10 :	  400ae2:       cmp    %edx,0xc(%rsp)
    0.00 :	  400ae6:       jg     400ad0 <sort1+0x2a0>
    0.45 :	  400ae8:       movslq %eax,%rsi
    0.32 :	  400aeb:       shl    $0x2,%rsi
    0.09 :	  400aef:       lea    (%r10,%rsi,1),%r8
    0.06 :	  400af3:       mov    (%r8),%edi
    0.49 :	  400af6:       cmp    %eax,%r9d
    0.00 :	  400af9:       jge    400b5d <sort1+0x32d>
    0.00 :	  400afb:       cmp    %edi,%ecx
    0.00 :	  400afd:       jge    400b5d <sort1+0x32d>
    0.28 :	  400aff:       lea    -0x4(%r10,%rsi,1),%rsi
    0.25 :	  400b04:       jmp    400b15 <sort1+0x2e5>
    0.00 :	  400b06:       nopw   %cs:0x0(%rax,%rax,1)
    0.61 :	  400b10:       cmp    %eax,%r9d
    0.00 :	  400b13:       jge    400b25 <sort1+0x2f5>
    0.30 :	  400b15:       mov    (%rsi),%edi
    1.00 :	  400b17:       mov    %rsi,%r8
    0.00 :	  400b1a:       sub    $0x1,%eax
    0.07 :	  400b1d:       sub    $0x4,%rsi
    0.01 :	  400b21:       cmp    %edi,%ecx
    0.00 :	  400b23:       jl     400b10 <sort1+0x2e0>
    0.87 :	  400b25:       cmp    %edx,%eax
    0.00 :	  400b27:       jge    400b61 <sort1+0x331>
    0.11 :	  400b29:       mov    %edx,0x24(%rsp)
    0.24 :	  400b2d:       mov    %eax,0x2c(%rsp)
    0.07 :	  400b31:       cmp    %eax,%r9d
    0.00 :	  400b34:       jl     400b71 <sort1+0x341>
    0.01 :	  400b36:       mov    0x24(%rsp),%ebx
    0.05 :	  400b3a:       cmp    %ebx,0xc(%rsp)
    0.00 :	  400b3e:       jle    400a26 <sort1+0x1f6>
    0.03 :	  400b44:       mov    %ebx,%r9d
    0.02 :	  400b47:       mov    0xc(%rsp),%eax
    0.01 :	  400b4b:       jmpq   400a7b <sort1+0x24b>
    0.15 :	  400b50:       cmp    %eax,%edx
    0.00 :	  400b52:       jg     400a19 <sort1+0x1e9>
    0.09 :	  400b58:       jmpq   400a64 <sort1+0x234>
    0.24 :	  400b5d:       cmp    %eax,%edx
    0.00 :	  400b5f:       jg     400b29 <sort1+0x2f9>
    0.90 :	  400b61:       mov    %edi,(%rbx)
    1.16 :	  400b63:       add    $0x1,%edx
    0.00 :	  400b66:       sub    $0x1,%eax
    0.05 :	  400b69:       mov    %r11d,(%r8)
    0.61 :	  400b6c:       jmpq   400a9a <sort1+0x26a>
    0.00 :	  400b71:       add    $0x1,%eax
    0.01 :	  400b74:       mov    %eax,0x28(%rsp)
    0.02 :	  400b78:       mov    %eax,%ebp
    0.01 :	  400b7a:       mov    %ebp,%eax
    0.01 :	  400b7c:       mov    (%rsp),%rbx
    0.02 :	  400b80:       add    %r9d,%eax
    0.01 :	  400b83:       mov    %eax,%edx
    0.01 :	  400b85:       shr    $0x1f,%edx
    0.01 :	  400b88:       add    %edx,%eax
    0.01 :	  400b8a:       mov    %rbx,%r11
    0.00 :	  400b8d:       mov    %r9d,%edx
    0.01 :	  400b90:       sar    %eax
    0.02 :	  400b92:       cltq   
    0.02 :	  400b94:       mov    (%rbx,%rax,4),%ecx
    0.13 :	  400b97:       mov    0x2c(%rsp),%eax
    0.02 :	  400b9b:       cmp    %eax,%edx
    0.00 :	  400b9d:       jg     400c1d <sort1+0x3ed>
    0.01 :	  400b9f:       movslq %edx,%rsi
    0.07 :	  400ba2:       shl    $0x2,%rsi
    0.16 :	  400ba6:       lea    (%r11,%rsi,1),%rbx
    0.01 :	  400baa:       mov    (%rbx),%r8d
    0.09 :	  400bad:       cmp    %r8d,%ecx
    0.00 :	  400bb0:       jle    400c58 <sort1+0x428>
    0.42 :	  400bb6:       lea    0x4(%r11,%rsi,1),%rsi
    0.35 :	  400bbb:       cmp    %edx,%ebp
    0.01 :	  400bbd:       setg   %dil
    0.00 :	  400bc1:       test   %dil,%dil
    0.00 :	  400bc4:       jne    400bd5 <sort1+0x3a5>
    0.00 :	  400bc6:       jmpq   400c58 <sort1+0x428>
    0.00 :	  400bcb:       nopl   0x0(%rax,%rax,1)
    0.00 :	  400bd0:       cmp    %r8d,%ecx
    0.00 :	  400bd3:       jle    400be6 <sort1+0x3b6>
    0.67 :	  400bd5:       add    $0x1,%edx
    0.14 :	  400bd8:       mov    %rsi,%rbx
    0.04 :	  400bdb:       mov    (%rsi),%r8d
    0.56 :	  400bde:       add    $0x4,%rsi
    0.06 :	  400be2:       cmp    %edx,%ebp
    0.00 :	  400be4:       jg     400bd0 <sort1+0x3a0>
    0.70 :	  400be6:       movslq %eax,%rdi
    0.39 :	  400be9:       shl    $0x2,%rdi
    0.13 :	  400bed:       lea    (%r11,%rdi,1),%r10
    0.13 :	  400bf1:       mov    (%r10),%esi
    0.47 :	  400bf4:       cmp    %esi,%ecx
    0.00 :	  400bf6:       jge    400c44 <sort1+0x414>
    0.19 :	  400bf8:       cmp    %eax,%r9d
    0.00 :	  400bfb:       jge    400c44 <sort1+0x414>
    0.22 :	  400bfd:       lea    -0x4(%r11,%rdi,1),%rdi
    0.10 :	  400c02:       jmp    400c08 <sort1+0x3d8>
    0.00 :	  400c04:       cmp    %esi,%ecx
    0.00 :	  400c06:       jge    400c19 <sort1+0x3e9>
    0.65 :	  400c08:       sub    $0x1,%eax
    0.24 :	  400c0b:       mov    %rdi,%r10
    0.03 :	  400c0e:       mov    (%rdi),%esi
    0.60 :	  400c10:       sub    $0x4,%rdi
    0.04 :	  400c14:       cmp    %eax,%r9d
    0.00 :	  400c17:       jl     400c04 <sort1+0x3d4>
    0.65 :	  400c19:       cmp    %edx,%eax
    0.00 :	  400c1b:       jge    400c48 <sort1+0x418>
    0.10 :	  400c1d:       mov    %edx,0x30(%rsp)
    0.25 :	  400c21:       mov    %eax,0x34(%rsp)
    0.06 :	  400c25:       cmp    %eax,%r9d
    0.00 :	  400c28:       jl     400c71 <sort1+0x441>
    0.03 :	  400c2a:       mov    0x30(%rsp),%ebx
    0.05 :	  400c2e:       cmp    %ebx,0x28(%rsp)
    0.00 :	  400c32:       jle    400b36 <sort1+0x306>
    0.05 :	  400c38:       mov    %ebx,%r9d
    0.00 :	  400c3b:       mov    0x28(%rsp),%ebp
    0.02 :	  400c3f:       jmpq   400b7a <sort1+0x34a>
    0.16 :	  400c44:       cmp    %eax,%edx
    0.00 :	  400c46:       jg     400c1d <sort1+0x3ed>
    0.67 :	  400c48:       mov    %esi,(%rbx)
    0.79 :	  400c4a:       add    $0x1,%edx
    0.00 :	  400c4d:       sub    $0x1,%eax
    0.06 :	  400c50:       mov    %r8d,(%r10)
    0.41 :	  400c53:       jmpq   400b9b <sort1+0x36b>
    0.41 :	  400c58:       movslq %eax,%rdi
    0.20 :	  400c5b:       shl    $0x2,%rdi
    0.06 :	  400c5f:       lea    (%r11,%rdi,1),%r10
    0.04 :	  400c63:       mov    (%r10),%esi
    0.30 :	  400c66:       cmp    %esi,%ecx
    0.00 :	  400c68:       jge    400c48 <sort1+0x418>
    0.22 :	  400c6a:       cmp    %eax,%r9d
    0.00 :	  400c6d:       jl     400bfd <sort1+0x3cd>
    0.00 :	  400c6f:       jmp    400c48 <sort1+0x418>
    0.01 :	  400c71:       add    $0x1,%eax
    0.01 :	  400c74:       mov    %eax,0x38(%rsp)
    0.02 :	  400c78:       mov    %eax,%ebx
    0.01 :	  400c7a:       mov    %ebx,%eax
    0.01 :	  400c7c:       mov    (%rsp),%rdi
    0.01 :	  400c80:       mov    %r9d,%esi
    0.02 :	  400c83:       add    %r9d,%eax
    0.00 :	  400c86:       mov    %eax,%edx
    0.00 :	  400c88:       shr    $0x1f,%edx
    0.00 :	  400c8b:       add    %edx,%eax
    0.02 :	  400c8d:       mov    %rdi,%rbp
    0.00 :	  400c90:       sar    %eax
    0.01 :	  400c92:       cltq   
    0.02 :	  400c94:       mov    (%rdi,%rax,4),%ecx
    0.13 :	  400c97:       mov    0x34(%rsp),%eax
    0.01 :	  400c9b:       cmp    %eax,%esi
    0.00 :	  400c9d:       jg     400d1e <sort1+0x4ee>
    0.01 :	  400c9f:       movslq %esi,%rdx
    0.06 :	  400ca2:       shl    $0x2,%rdx
    0.15 :	  400ca6:       lea    0x0(%rbp,%rdx,1),%r11
    0.02 :	  400cab:       mov    (%r11),%r8d
    0.48 :	  400cae:       cmp    %r8d,%ecx
    0.00 :	  400cb1:       jle    400d5a <sort1+0x52a>
    0.45 :	  400cb7:       lea    0x4(%rbp,%rdx,1),%rdx
    0.30 :	  400cbc:       cmp    %esi,%ebx
    0.00 :	  400cbe:       setg   %dil
    0.00 :	  400cc2:       test   %dil,%dil
    0.00 :	  400cc5:       jne    400cd5 <sort1+0x4a5>
    0.00 :	  400cc7:       jmpq   400d5a <sort1+0x52a>
    0.00 :	  400ccc:       nopl   0x0(%rax)
    0.01 :	  400cd0:       cmp    %r8d,%ecx
    0.00 :	  400cd3:       jle    400ce6 <sort1+0x4b6>
    0.63 :	  400cd5:       add    $0x1,%esi
    0.16 :	  400cd8:       mov    %rdx,%r11
    0.05 :	  400cdb:       mov    (%rdx),%r8d
    0.43 :	  400cde:       add    $0x4,%rdx
    0.09 :	  400ce2:       cmp    %esi,%ebx
    0.00 :	  400ce4:       jg     400cd0 <sort1+0x4a0>
    0.56 :	  400ce6:       movslq %eax,%rdx
    0.37 :	  400ce9:       shl    $0x2,%rdx
    0.15 :	  400ced:       lea    0x0(%rbp,%rdx,1),%r10
    0.25 :	  400cf2:       mov    (%r10),%edi
    0.43 :	  400cf5:       cmp    %eax,%r9d
    0.00 :	  400cf8:       jge    400d45 <sort1+0x515>
    0.00 :	  400cfa:       cmp    %edi,%ecx
    0.00 :	  400cfc:       jge    400d45 <sort1+0x515>
    0.36 :	  400cfe:       lea    -0x4(%rbp,%rdx,1),%rdx
    0.18 :	  400d03:       jmp    400d09 <sort1+0x4d9>
    0.00 :	  400d05:       cmp    %edi,%ecx
    0.00 :	  400d07:       jge    400d1a <sort1+0x4ea>
    0.57 :	  400d09:       sub    $0x1,%eax
    0.22 :	  400d0c:       mov    %rdx,%r10
    0.04 :	  400d0f:       mov    (%rdx),%edi
    0.59 :	  400d11:       sub    $0x4,%rdx
    0.06 :	  400d15:       cmp    %eax,%r9d
    0.00 :	  400d18:       jl     400d05 <sort1+0x4d5>
    0.62 :	  400d1a:       cmp    %esi,%eax
    0.00 :	  400d1c:       jge    400d49 <sort1+0x519>
    0.10 :	  400d1e:       mov    %esi,0x3c(%rsp)
    0.23 :	  400d22:       mov    %eax,0x40(%rsp)
    0.04 :	  400d26:       cmp    %eax,%r9d
    0.00 :	  400d29:       jl     400d74 <sort1+0x544>
    0.02 :	  400d2b:       mov    0x3c(%rsp),%ebx
    0.07 :	  400d2f:       cmp    %ebx,0x38(%rsp)
    0.00 :	  400d33:       jle    400c2a <sort1+0x3fa>
    0.04 :	  400d39:       mov    %ebx,%r9d
    0.00 :	  400d3c:       mov    0x38(%rsp),%ebx
    0.02 :	  400d40:       jmpq   400c7a <sort1+0x44a>
    0.18 :	  400d45:       cmp    %eax,%esi
    0.00 :	  400d47:       jg     400d1e <sort1+0x4ee>
    0.66 :	  400d49:       mov    %edi,(%r11)
    0.89 :	  400d4c:       add    $0x1,%esi
    0.00 :	  400d4f:       sub    $0x1,%eax
    0.05 :	  400d52:       mov    %r8d,(%r10)
    0.44 :	  400d55:       jmpq   400c9b <sort1+0x46b>
    0.44 :	  400d5a:       movslq %eax,%rdx
    0.19 :	  400d5d:       shl    $0x2,%rdx
    0.09 :	  400d61:       lea    0x0(%rbp,%rdx,1),%r10
    0.10 :	  400d66:       mov    (%r10),%edi
    0.33 :	  400d69:       cmp    %edi,%ecx
    0.00 :	  400d6b:       jge    400d49 <sort1+0x519>
    0.20 :	  400d6d:       cmp    %eax,%r9d
    0.00 :	  400d70:       jl     400cfe <sort1+0x4ce>
    0.00 :	  400d72:       jmp    400d49 <sort1+0x519>
    0.00 :	  400d74:       add    $0x1,%eax
    0.02 :	  400d77:       mov    %eax,0x44(%rsp)
    0.03 :	  400d7b:       mov    %eax,%ebx
    0.00 :	  400d7d:       mov    %ebx,%eax
    0.02 :	  400d7f:       mov    (%rsp),%rdi
    0.00 :	  400d83:       mov    %r9d,%esi
    0.01 :	  400d86:       add    %r9d,%eax
    0.00 :	  400d89:       mov    %eax,%edx
    0.02 :	  400d8b:       shr    $0x1f,%edx
    0.01 :	  400d8e:       add    %edx,%eax
    0.03 :	  400d90:       mov    %rdi,%rbp
    0.00 :	  400d93:       sar    %eax
    0.01 :	  400d95:       cltq   
    0.03 :	  400d97:       mov    (%rdi,%rax,4),%ecx
    0.15 :	  400d9a:       mov    0x40(%rsp),%eax
    0.00 :	  400d9e:       mov    %eax,%edx
    0.01 :	  400da0:       cmp    %edx,%esi
    0.00 :	  400da2:       jg     400e29 <sort1+0x5f9>
    0.02 :	  400da8:       movslq %esi,%rax
    0.09 :	  400dab:       shl    $0x2,%rax
    0.10 :	  400daf:       lea    0x0(%rbp,%rax,1),%r11
    0.01 :	  400db4:       mov    (%r11),%r8d
    0.50 :	  400db7:       cmp    %esi,%ebx
    0.00 :	  400db9:       jle    4011aa <sort1+0x97a>
    0.01 :	  400dbf:       lea    0x4(%rbp,%rax,1),%rax
    0.00 :	  400dc4:       cmp    %r8d,%ecx
    0.23 :	  400dc7:       setg   %dil
    0.19 :	  400dcb:       test   %dil,%dil
    0.00 :	  400dce:       jne    400ddd <sort1+0x5ad>
    0.40 :	  400dd0:       jmpq   4011aa <sort1+0x97a>
    0.00 :	  400dd5:       nopl   (%rax)
    0.00 :	  400dd8:       cmp    %r8d,%ecx
    0.00 :	  400ddb:       jle    400dee <sort1+0x5be>
    0.85 :	  400ddd:       add    $0x1,%esi
    0.39 :	  400de0:       mov    %rax,%r11
    0.05 :	  400de3:       mov    (%rax),%r8d
    0.61 :	  400de6:       add    $0x4,%rax
    0.06 :	  400dea:       cmp    %esi,%ebx
    0.00 :	  400dec:       jg     400dd8 <sort1+0x5a8>
    0.48 :	  400dee:       movslq %edx,%rax
    0.33 :	  400df1:       shl    $0x2,%rax
    0.12 :	  400df5:       lea    0x0(%rbp,%rax,1),%r10
    0.25 :	  400dfa:       mov    (%r10),%edi
    0.42 :	  400dfd:       cmp    %edx,%r9d
    0.00 :	  400e00:       jge    400e52 <sort1+0x622>
    0.00 :	  400e02:       cmp    %edi,%ecx
    0.00 :	  400e04:       jge    400e52 <sort1+0x622>
    0.27 :	  400e06:       lea    -0x4(%rbp,%rax,1),%rax
    0.22 :	  400e0b:       jmp    400e14 <sort1+0x5e4>
    0.00 :	  400e0d:       nopl   (%rax)
    0.01 :	  400e10:       cmp    %edi,%ecx
    0.00 :	  400e12:       jge    400e25 <sort1+0x5f5>
    0.53 :	  400e14:       sub    $0x1,%edx
    0.19 :	  400e17:       mov    %rax,%r10
    0.04 :	  400e1a:       mov    (%rax),%edi
    0.41 :	  400e1c:       sub    $0x4,%rax
    0.05 :	  400e20:       cmp    %edx,%r9d
    0.00 :	  400e23:       jl     400e10 <sort1+0x5e0>
    0.62 :	  400e25:       cmp    %esi,%edx
    0.00 :	  400e27:       jge    400e56 <sort1+0x626>
    0.10 :	  400e29:       mov    %esi,0x48(%rsp)
    0.25 :	  400e2d:       mov    %edx,%eax
    0.00 :	  400e2f:       mov    %edx,0x4c(%rsp)
    0.11 :	  400e33:       cmp    %edx,%r9d
    0.00 :	  400e36:       jl     400e67 <sort1+0x637>
    0.08 :	  400e38:       mov    0x48(%rsp),%ebx
    0.05 :	  400e3c:       cmp    %ebx,0x44(%rsp)
    0.05 :	  400e40:       jle    400d2b <sort1+0x4fb>
    0.03 :	  400e46:       mov    %ebx,%r9d
    0.02 :	  400e49:       mov    0x44(%rsp),%ebx
    0.01 :	  400e4d:       jmpq   400d7d <sort1+0x54d>
    0.17 :	  400e52:       cmp    %edx,%esi
    0.00 :	  400e54:       jg     400e29 <sort1+0x5f9>
    0.61 :	  400e56:       mov    %edi,(%r11)
    0.75 :	  400e59:       add    $0x1,%esi
    0.01 :	  400e5c:       sub    $0x1,%edx
    0.06 :	  400e5f:       mov    %r8d,(%r10)
    0.43 :	  400e62:       jmpq   400da0 <sort1+0x570>
    0.00 :	  400e67:       add    $0x1,%eax
    0.02 :	  400e6a:       mov    %eax,0x50(%rsp)
    0.02 :	  400e6e:       mov    %eax,%r11d
    0.01 :	  400e71:       mov    %r11d,%eax
    0.02 :	  400e74:       mov    (%rsp),%rbx
    0.01 :	  400e78:       mov    %r9d,%r10d
    0.01 :	  400e7b:       add    %r9d,%eax
    0.01 :	  400e7e:       mov    0x4c(%rsp),%r14d
    0.02 :	  400e83:       mov    %eax,%edx
    0.00 :	  400e85:       shr    $0x1f,%edx
    0.01 :	  400e88:       add    %edx,%eax
    0.01 :	  400e8a:       sar    %eax
    0.01 :	  400e8c:       cltq   
    0.02 :	  400e8e:       mov    (%rbx,%rax,4),%ecx
    0.16 :	  400e91:       cmp    %r14d,%r10d
    0.00 :	  400e94:       jg     400f13 <sort1+0x6e3>
    0.02 :	  400e96:       movslq %r10d,%rax
    0.06 :	  400e99:       shl    $0x2,%rax
    0.14 :	  400e9d:       lea    (%rbx,%rax,1),%r8
    0.04 :	  400ea1:       mov    (%r8),%esi
    0.61 :	  400ea4:       cmp    %r10d,%r11d
    0.00 :	  400ea7:       jle    40117a <sort1+0x94a>
    0.00 :	  400ead:       lea    0x4(%rbx,%rax,1),%rax
    0.00 :	  400eb2:       cmp    %esi,%ecx
    0.19 :	  400eb4:       setg   %dl
    0.18 :	  400eb7:       test   %dl,%dl
    0.00 :	  400eb9:       jne    400ec4 <sort1+0x694>
    0.39 :	  400ebb:       jmpq   40117a <sort1+0x94a>
    0.00 :	  400ec0:       cmp    %esi,%ecx
    0.00 :	  400ec2:       jle    400ed6 <sort1+0x6a6>
    0.76 :	  400ec4:       add    $0x1,%r10d
    0.32 :	  400ec8:       mov    %rax,%r8
    0.05 :	  400ecb:       mov    (%rax),%esi
    0.41 :	  400ecd:       add    $0x4,%rax
    0.11 :	  400ed1:       cmp    %r10d,%r11d
    0.00 :	  400ed4:       jg     400ec0 <sort1+0x690>
    0.53 :	  400ed6:       movslq %r14d,%rax
    0.30 :	  400ed9:       shl    $0x2,%rax
    0.14 :	  400edd:       lea    (%rbx,%rax,1),%rdi
    0.09 :	  400ee1:       mov    (%rdi),%edx
    0.43 :	  400ee3:       cmp    %r14d,%r9d
    0.00 :	  400ee6:       jge    400f30 <sort1+0x700>
    0.00 :	  400ee8:       cmp    %edx,%ecx
    0.00 :	  400eea:       jge    400f30 <sort1+0x700>
    0.29 :	  400eec:       lea    -0x4(%rbx,%rax,1),%rax
    0.19 :	  400ef1:       jmp    400efd <sort1+0x6cd>
    0.00 :	  400ef3:       nopl   0x0(%rax,%rax,1)
    0.38 :	  400ef8:       cmp    %r14d,%r9d
    0.00 :	  400efb:       jge    400f0e <sort1+0x6de>
    0.19 :	  400efd:       mov    (%rax),%edx
    0.62 :	  400eff:       mov    %rax,%rdi
    0.00 :	  400f02:       sub    $0x1,%r14d
    0.04 :	  400f06:       sub    $0x4,%rax
    0.00 :	  400f0a:       cmp    %edx,%ecx
    0.00 :	  400f0c:       jl     400ef8 <sort1+0x6c8>
    0.46 :	  400f0e:       cmp    %r10d,%r14d
    0.00 :	  400f11:       jge    400f35 <sort1+0x705>
    0.15 :	  400f13:       cmp    %r14d,%r9d
    0.00 :	  400f16:       jl     400f47 <sort1+0x717>
    0.11 :	  400f18:       cmp    %r10d,0x50(%rsp)
    0.00 :	  400f1d:       jle    400e38 <sort1+0x608>
    0.11 :	  400f23:       mov    %r10d,%r9d
    0.00 :	  400f26:       mov    0x50(%rsp),%r11d
    0.01 :	  400f2b:       jmpq   400e71 <sort1+0x641>
    0.12 :	  400f30:       cmp    %r14d,%r10d
    0.00 :	  400f33:       jg     400f13 <sort1+0x6e3>
    0.56 :	  400f35:       mov    %edx,(%r8)
    0.69 :	  400f38:       add    $0x1,%r10d
    0.01 :	  400f3c:       sub    $0x1,%r14d
    0.05 :	  400f40:       mov    %esi,(%rdi)
    0.13 :	  400f42:       jmpq   400e91 <sort1+0x661>
    0.12 :	  400f47:       lea    0x1(%r14),%r15d
    0.05 :	  400f4b:       mov    %r10d,0x58(%rsp)
    0.08 :	  400f50:       mov    %r14d,%r10d
    0.00 :	  400f53:       mov    (%rsp),%r14
    0.02 :	  400f57:       lea    (%r15,%r9,1),%eax
    0.02 :	  400f5b:       mov    %r10d,%ebp
    0.01 :	  400f5e:       mov    %r9d,%r13d
    0.00 :	  400f61:       mov    %eax,%edx
    0.02 :	  400f63:       shr    $0x1f,%edx
    0.02 :	  400f66:       add    %edx,%eax
    0.02 :	  400f68:       sar    %eax
    0.02 :	  400f6a:       cltq   
    0.03 :	  400f6c:       mov    (%r14,%rax,4),%ecx
    0.19 :	  400f70:       cmp    %ebp,%r13d
    0.00 :	  400f73:       jg     400ff2 <sort1+0x7c2>
    0.01 :	  400f75:       movslq %r13d,%rax
    0.06 :	  400f78:       shl    $0x2,%rax
    0.09 :	  400f7c:       lea    (%r14,%rax,1),%r8
    0.04 :	  400f80:       mov    (%r8),%esi
    0.13 :	  400f83:       cmp    %r13d,%r15d
    0.00 :	  400f86:       jle    401138 <sort1+0x908>
    0.00 :	  400f8c:       lea    0x4(%r14,%rax,1),%rax
    0.07 :	  400f91:       cmp    %esi,%ecx
    0.17 :	  400f93:       setg   %dl
    0.18 :	  400f96:       test   %dl,%dl
    0.00 :	  400f98:       jne    400fa4 <sort1+0x774>
    0.35 :	  400f9a:       jmpq   401138 <sort1+0x908>
    0.00 :	  400f9f:       nop
    0.00 :	  400fa0:       cmp    %esi,%ecx
    0.00 :	  400fa2:       jle    400fb6 <sort1+0x786>
    0.76 :	  400fa4:       add    $0x1,%r13d
    0.39 :	  400fa8:       mov    %rax,%r8
    0.03 :	  400fab:       mov    (%rax),%esi
    0.40 :	  400fad:       add    $0x4,%rax
    0.11 :	  400fb1:       cmp    %r13d,%r15d
    0.00 :	  400fb4:       jg     400fa0 <sort1+0x770>
    0.50 :	  400fb6:       movslq %ebp,%rax
    0.28 :	  400fb9:       shl    $0x2,%rax
    0.15 :	  400fbd:       lea    (%r14,%rax,1),%rdi
    0.06 :	  400fc1:       mov    (%rdi),%edx
    0.42 :	  400fc3:       cmp    %ebp,%r9d
    0.00 :	  400fc6:       jge    401008 <sort1+0x7d8>
    0.00 :	  400fc8:       cmp    %ecx,%edx
    0.00 :	  400fca:       jle    401008 <sort1+0x7d8>
    0.34 :	  400fcc:       lea    -0x4(%r14,%rax,1),%rax
    0.24 :	  400fd1:       jmp    400fdc <sort1+0x7ac>
    0.00 :	  400fd3:       nopl   0x0(%rax,%rax,1)
    0.01 :	  400fd8:       cmp    %edx,%ecx
    0.00 :	  400fda:       jge    400fed <sort1+0x7bd>
    0.39 :	  400fdc:       sub    $0x1,%ebp
    0.15 :	  400fdf:       mov    %rax,%rdi
    0.03 :	  400fe2:       mov    (%rax),%edx
    0.59 :	  400fe4:       sub    $0x4,%rax
    0.03 :	  400fe8:       cmp    %ebp,%r9d
    0.00 :	  400feb:       jl     400fd8 <sort1+0x7a8>
    0.48 :	  400fed:       cmp    %r13d,%ebp
    0.00 :	  400ff0:       jge    40100d <sort1+0x7dd>
    0.11 :	  400ff2:       cmp    %ebp,%r9d
    0.00 :	  400ff5:       jl     40101e <sort1+0x7ee>
    0.13 :	  400ff7:       cmp    %r13d,%r15d
    0.00 :	  400ffa:       jle    401170 <sort1+0x940>
    0.03 :	  401000:       mov    %r13d,%r9d
    0.01 :	  401003:       jmpq   400f57 <sort1+0x727>
    0.16 :	  401008:       cmp    %ebp,%r13d
    0.00 :	  40100b:       jg     400ff2 <sort1+0x7c2>
    0.50 :	  40100d:       mov    %edx,(%r8)
    0.73 :	  401010:       add    $0x1,%r13d
    0.01 :	  401014:       sub    $0x1,%ebp
    0.03 :	  401017:       mov    %esi,(%rdi)
    0.34 :	  401019:       jmpq   400f70 <sort1+0x740>
    0.10 :	  40101e:       lea    0x1(%rbp),%r12d
    0.04 :	  401022:       lea    (%r12,%r9,1),%eax
    0.03 :	  401026:       mov    %r9d,%ebx
    0.00 :	  401029:       mov    %eax,%edx
    0.01 :	  40102b:       shr    $0x1f,%edx
    0.04 :	  40102e:       add    %edx,%eax
    0.02 :	  401030:       mov    %ebp,%edx
    0.00 :	  401032:       sar    %eax
    0.03 :	  401034:       cltq   
    0.03 :	  401036:       mov    (%r14,%rax,4),%edi
    0.12 :	  40103a:       cmp    %edx,%ebx
    0.00 :	  40103c:       jg     4010c1 <sort1+0x891>
    0.02 :	  401042:       movslq %ebx,%rax
    0.04 :	  401045:       shl    $0x2,%rax
    0.10 :	  401049:       lea    (%r14,%rax,1),%r8
    0.04 :	  40104d:       mov    (%r8),%esi
    0.55 :	  401050:       cmp    %esi,%edi
    0.00 :	  401052:       jle    401106 <sort1+0x8d6>
    0.35 :	  401058:       lea    0x4(%r14,%rax,1),%rax
    0.30 :	  40105d:       cmp    %ebx,%r12d
    0.00 :	  401060:       setg   %cl
    0.00 :	  401063:       test   %cl,%cl
    0.00 :	  401065:       jne    401075 <sort1+0x845>
    0.00 :	  401067:       jmpq   401106 <sort1+0x8d6>
    0.00 :	  40106c:       nopl   0x0(%rax)
    0.38 :	  401070:       cmp    %ebx,%r12d
    0.00 :	  401073:       jle    401085 <sort1+0x855>
    0.22 :	  401075:       mov    (%rax),%esi
    0.57 :	  401077:       mov    %rax,%r8
    0.00 :	  40107a:       add    $0x1,%ebx
    0.03 :	  40107d:       add    $0x4,%rax
    0.00 :	  401081:       cmp    %esi,%edi
    0.00 :	  401083:       jg     401070 <sort1+0x840>
    0.44 :	  401085:       movslq %edx,%rax
    0.25 :	  401088:       shl    $0x2,%rax
    0.11 :	  40108c:       lea    (%r14,%rax,1),%r11
    0.05 :	  401090:       mov    (%r11),%ecx
    0.33 :	  401093:       cmp    %ecx,%edi
    0.00 :	  401095:       jge    4010d7 <sort1+0x8a7>
    0.18 :	  401097:       cmp    %edx,%r9d
    0.00 :	  40109a:       jge    4010d7 <sort1+0x8a7>
    0.19 :	  40109c:       lea    -0x4(%r14,%rax,1),%rax
    0.08 :	  4010a1:       jmp    4010ac <sort1+0x87c>
    0.00 :	  4010a3:       nopl   0x0(%rax,%rax,1)
    0.00 :	  4010a8:       cmp    %ecx,%edi
    0.00 :	  4010aa:       jge    4010bd <sort1+0x88d>
    0.40 :	  4010ac:       sub    $0x1,%edx
    0.15 :	  4010af:       mov    %rax,%r11
    0.01 :	  4010b2:       mov    (%rax),%ecx
    0.47 :	  4010b4:       sub    $0x4,%rax
    0.03 :	  4010b8:       cmp    %edx,%r9d
    0.00 :	  4010bb:       jl     4010a8 <sort1+0x878>
    0.60 :	  4010bd:       cmp    %ebx,%edx
    0.00 :	  4010bf:       jge    4010db <sort1+0x8ab>
    0.14 :	  4010c1:       cmp    %edx,%r9d
    0.00 :	  4010c4:       jl     4010ec <sort1+0x8bc>
    0.10 :	  4010c6:       cmp    %ebx,%r12d
    0.00 :	  4010c9:       jle    400ff7 <sort1+0x7c7>
    0.03 :	  4010cf:       mov    %ebx,%r9d
    0.01 :	  4010d2:       jmpq   401022 <sort1+0x7f2>
    0.12 :	  4010d7:       cmp    %edx,%ebx
    0.00 :	  4010d9:       jg     4010c1 <sort1+0x891>
    0.60 :	  4010db:       mov    %ecx,(%r8)
    0.70 :	  4010de:       add    $0x1,%ebx
    0.00 :	  4010e1:       sub    $0x1,%edx
    0.04 :	  4010e4:       mov    %esi,(%r11)
    0.12 :	  4010e7:       jmpq   40103a <sort1+0x80a>
    0.11 :	  4010ec:       add    $0x1,%edx
    0.05 :	  4010ef:       mov    %r9d,%esi
    0.00 :	  4010f2:       mov    %r14,%rdi
    0.00 :	  4010f5:       mov    %r10d,0x5c(%rsp)
    0.07 :	  4010fa:       callq  400830 <sort1>
    0.00 :	  4010ff:       mov    0x5c(%rsp),%r10d
    0.00 :	  401104:       jmp    4010c6 <sort1+0x896>
    0.33 :	  401106:       movslq %edx,%rax
    0.15 :	  401109:       shl    $0x2,%rax
    0.06 :	  40110d:       lea    (%r14,%rax,1),%r11
    0.03 :	  401111:       mov    (%r11),%ecx
    0.25 :	  401114:       cmp    %ecx,%edi
    0.00 :	  401116:       jge    4010db <sort1+0x8ab>
    0.19 :	  401118:       cmp    %edx,%r9d
    0.00 :	  40111b:       jl     40109c <sort1+0x86c>
    0.00 :	  401121:       mov    %ecx,(%r8)
    0.00 :	  401124:       add    $0x1,%ebx
    0.00 :	  401127:       sub    $0x1,%edx
    0.00 :	  40112a:       mov    %esi,(%r11)
    0.00 :	  40112d:       jmpq   40103a <sort1+0x80a>
    0.00 :	  401132:       nopw   0x0(%rax,%rax,1)
    0.22 :	  401138:       movslq %ebp,%rax
    0.06 :	  40113b:       shl    $0x2,%rax
    0.06 :	  40113f:       lea    (%r14,%rax,1),%rdi
    0.09 :	  401143:       mov    (%rdi),%edx
    0.13 :	  401145:       cmp    %edx,%ecx
    0.00 :	  401147:       jge    40100d <sort1+0x7dd>
    0.15 :	  40114d:       cmp    %ebp,%r9d
    0.00 :	  401150:       jl     400fcc <sort1+0x79c>
    0.00 :	  401156:       mov    %edx,(%r8)
    0.00 :	  401159:       add    $0x1,%r13d
    0.00 :	  40115d:       sub    $0x1,%ebp
    0.00 :	  401160:       mov    %esi,(%rdi)
    0.00 :	  401162:       jmpq   400f70 <sort1+0x740>
    0.00 :	  401167:       nopw   0x0(%rax,%rax,1)
    0.03 :	  401170:       mov    0x58(%rsp),%r10d
    0.04 :	  401175:       jmpq   400f18 <sort1+0x6e8>
    0.20 :	  40117a:       movslq %r14d,%rax
    0.05 :	  40117d:       shl    $0x2,%rax
    0.06 :	  401181:       lea    (%rbx,%rax,1),%rdi
    0.11 :	  401185:       mov    (%rdi),%edx
    0.12 :	  401187:       cmp    %edx,%ecx
    0.00 :	  401189:       jge    400f35 <sort1+0x705>
    0.19 :	  40118f:       cmp    %r14d,%r9d
    0.00 :	  401192:       jl     400eec <sort1+0x6bc>
    0.00 :	  401198:       mov    %edx,(%r8)
    0.00 :	  40119b:       add    $0x1,%r10d
    0.00 :	  40119f:       sub    $0x1,%r14d
    0.00 :	  4011a3:       mov    %esi,(%rdi)
    0.00 :	  4011a5:       jmpq   400e91 <sort1+0x661>
    0.19 :	  4011aa:       movslq %edx,%rax
    0.09 :	  4011ad:       shl    $0x2,%rax
    0.05 :	  4011b1:       lea    0x0(%rbp,%rax,1),%r10
    0.12 :	  4011b6:       mov    (%r10),%edi
    0.16 :	  4011b9:       cmp    %edi,%ecx
    0.00 :	  4011bb:       jge    400e56 <sort1+0x626>
    0.20 :	  4011c1:       cmp    %edx,%r9d
    0.00 :	  4011c4:       jl     400e06 <sort1+0x5d6>
    0.00 :	  4011ca:       mov    %edi,(%r11)
    0.00 :	  4011cd:       add    $0x1,%esi
    0.00 :	  4011d0:       sub    $0x1,%edx
    0.00 :	  4011d3:       mov    %r8d,(%r10)
    0.00 :	  4011d6:       jmpq   400da0 <sort1+0x570>
    0.45 :	  4011db:       movslq %eax,%rsi
    0.22 :	  4011de:       shl    $0x2,%rsi
    0.08 :	  4011e2:       lea    (%r10,%rsi,1),%r8
    0.02 :	  4011e6:       mov    (%r8),%edi
    0.30 :	  4011e9:       cmp    %edi,%ecx
    0.00 :	  4011eb:       jge    400b61 <sort1+0x331>
    0.18 :	  4011f1:       cmp    %eax,%r9d
    0.00 :	  4011f4:       jl     400aff <sort1+0x2cf>
    0.00 :	  4011fa:       jmpq   400b61 <sort1+0x331>
 Percent |	Source code & Disassembly of sort for cycles
------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00000000004019e0 <main>:
         :	static int alloc_vector (int **v, int n);
         :	static int copy_vector (int *v1, int *v2, int n);
         :	static int free_vector (int **v);
         :
         :
         :	int main (int argc, char *argv[]) {
    0.00 :	  4019e0:       push   %r15
    0.00 :	  4019e2:       push   %r14
    0.00 :	  4019e4:       push   %r13
    0.00 :	  4019e6:       push   %r12
    0.00 :	  4019e8:       push   %rbp
    0.00 :	  4019e9:       push   %rbx
    0.00 :	  4019ea:       sub    $0x28,%rsp
         :	  //long long start_usec, end_usec, elapsed_usec, min_usec=0L;
         :
         :	    int *a, *master;//, *b, *master;
         :
         :	  // read parameters
         :	  if (argc != 4) {
    0.00 :	  4019ee:       cmp    $0x4,%edi
    0.00 :	  4019f1:       je     401a22 <main+0x42>
         :	//    fprintf (stdout, "prog algorithm runs size \n");
         :	    fprintf (stdout, "sort int int int \n");
    0.00 :	  4019f3:       mov    $0x12,%edx
    0.00 :	  4019f8:       mov    $0x1,%esi
    0.00 :	  4019fd:       mov    $0x401ccc,%edi
    0.00 :	  401a02:       mov    0x200857(%rip),%rcx        # 602260 <stdout@@GLIBC_2.2.5>
    0.00 :	  401a09:       callq  4006a0 <fwrite@plt>
         :
         :	      return 1;
    0.00 :	  401a0e:       mov    $0x1,%eax
         :	  free_vector (&a);
         :	  free_vector (&master); 
         :
         :	//  printf ("That's all, folks\n");
         :	  return 1;
         :	}
    0.00 :	  401a13:       add    $0x28,%rsp
    0.00 :	  401a17:       pop    %rbx
    0.00 :	  401a18:       pop    %rbp
    0.00 :	  401a19:       pop    %r12
    0.00 :	  401a1b:       pop    %r13
    0.00 :	  401a1d:       pop    %r14
    0.00 :	  401a1f:       pop    %r15
    0.00 :	  401a21:       retq   
         :	  return strtod (__nptr, (char **) NULL);
         :	}
         :	__extern_inline int
         :	__NTH (atoi (__const char *__nptr))
         :	{
         :	  return (int) strtol (__nptr, (char **) NULL, 10);
    0.00 :	  401a22:       mov    0x8(%rsi),%rdi
    0.00 :	  401a26:       mov    %rsi,%rbx
    0.00 :	  401a29:       mov    $0xa,%edx
    0.00 :	  401a2e:       xor    %esi,%esi
    0.00 :	  401a30:       callq  400670 <strtol@plt>
    0.00 :	  401a35:       mov    0x10(%rbx),%rdi
    0.00 :	  401a39:       mov    $0xa,%edx
    0.00 :	  401a3e:       xor    %esi,%esi
    0.00 :	  401a40:       mov    %rax,%r12
    0.00 :	  401a43:       callq  400670 <strtol@plt>
    0.00 :	  401a48:       mov    0x18(%rbx),%rdi
    0.00 :	  401a4c:       mov    $0xa,%edx
    0.00 :	  401a51:       xor    %esi,%esi
    0.00 :	  401a53:       mov    %rax,0x18(%rsp)
    0.00 :	  401a58:       callq  400670 <strtol@plt>
    0.00 :	  401a5d:       mov    %rax,0x8(%rsp)
    0.00 :	  401a62:       mov    %rax,%rbx
    0.00 :	  401a65:       mov    %eax,%r14d
         :
         :	int alloc_vector (int **v, int n) {
         :
         :	        *v = (int *) malloc (n*sizeof(int));
    0.00 :	  401a68:       cltq   
    0.00 :	  401a6a:       shl    $0x2,%rax
    0.00 :	  401a6e:       mov    %rax,%rdi
    0.00 :	  401a71:       mov    %rax,0x10(%rsp)
    0.00 :	  401a76:       callq  400640 <malloc@plt>
    0.00 :	  401a7b:       mov    %rax,%r13
         :	        if (!(*v)) {
    0.00 :	  401a7e:       test   %rax,%rax
    0.00 :	  401a81:       je     401baf <main+0x1cf>
         :	int ini_vector (int **v, int n) {
         :	        int i;
         :	        int *ptr;
         :
         :	        if (!alloc_vector (v, n)) return 0;
         :	        for (i=0 , ptr = (*v) ; i<n ; i++ , ptr++) {
    0.00 :	  401a87:       test   %ebx,%ebx
    0.00 :	  401a89:       jle    401ac8 <main+0xe8>
    0.00 :	  401a8b:       mov    0x8(%rsp),%rax
    0.00 :	  401a90:       mov    %r13,%r15
         :	                *ptr = rand() % 100000000;
    0.00 :	  401a93:       mov    $0x55e63b89,%ebx
    0.00 :	  401a98:       sub    $0x1,%eax
    0.00 :	  401a9b:       lea    0x4(%r13,%rax,4),%rbp
    0.00 :	  401aa0:       callq  4006b0 <rand@plt>
         :	int ini_vector (int **v, int n) {
         :	        int i;
         :	        int *ptr;
         :
         :	        if (!alloc_vector (v, n)) return 0;
         :	        for (i=0 , ptr = (*v) ; i<n ; i++ , ptr++) {
    9.98 :	  401aa5:       add    $0x4,%r15
         :	                *ptr = rand() % 100000000;
    0.00 :	  401aa9:       mov    %eax,%ecx
    0.00 :	  401aab:       imul   %ebx
   24.68 :	  401aad:       mov    %ecx,%eax
    0.00 :	  401aaf:       sar    $0x1f,%eax
    0.00 :	  401ab2:       sar    $0x19,%edx
    9.10 :	  401ab5:       sub    %eax,%edx
    7.82 :	  401ab7:       imul   $0x5f5e100,%edx,%edx
   28.32 :	  401abd:       sub    %edx,%ecx
   10.11 :	  401abf:       mov    %ecx,-0x4(%r15)
         :	int ini_vector (int **v, int n) {
         :	        int i;
         :	        int *ptr;
         :
         :	        if (!alloc_vector (v, n)) return 0;
         :	        for (i=0 , ptr = (*v) ; i<n ; i++ , ptr++) {
    9.98 :	  401ac3:       cmp    %r15,%rbp
    0.00 :	  401ac6:       jne    401aa0 <main+0xc0>
         :	  return 1;
         :	}
         :
         :	int alloc_vector (int **v, int n) {
         :
         :	        *v = (int *) malloc (n*sizeof(int));
    0.00 :	  401ac8:       mov    0x10(%rsp),%rdi
    0.00 :	  401acd:       callq  400640 <malloc@plt>
    0.00 :	  401ad2:       mov    %rax,%rbx
         :	        if (!(*v)) {
    0.00 :	  401ad5:       test   %rax,%rax
    0.00 :	  401ad8:       je     401baf <main+0x1cf>
    0.00 :	  401ade:       mov    0x18(%rsp),%rax
    0.00 :	  401ae3:       mov    %eax,%ebp
         :
         :	  // loop for different lenghts of the vector (n)
         :
         :	// for (n = MIN_ELEM ; n <= MAX_ELEM ; n <<= VEC_SIZE_SHIFT) {
         :
         :	   for (int run=0 ; run < runs ; run++) {
    0.00 :	  401ae5:       test   %eax,%eax
    0.00 :	  401ae7:       jle    401b5b <main+0x17b>
         :
         :	int copy_vector (int *v1, int *v2, int n) {
         :	        int i;
         :
         :	        for (i=0 ; i<n ; i++ , v1++, v2++) {
         :	                *v2 = *v1;
    0.00 :	  401ae9:       mov    0x8(%rsp),%rax
    0.00 :	  401aee:       xor    %r15d,%r15d
    0.00 :	  401af1:       sub    $0x1,%eax
    0.00 :	  401af4:       lea    0x4(,%rax,4),%rax
    0.00 :	  401afc:       mov    %rax,0x8(%rsp)
    0.00 :	  401b01:       jmp    401b29 <main+0x149>
         :	     // copy n elements of master to a
         :	     copy_vector (master, a, arraySize);
         :	  
         :	 //    fprintf (stderr, "run=%d ... ;", run);
         :	       
         :	     switch (alg)
    0.00 :	  401b03:       cmp    $0x3,%r12d
    0.00 :	  401b07:       je     401b9f <main+0x1bf>
    0.00 :	  401b0d:       cmp    $0x4,%r12d
    0.00 :	  401b11:       jne    401b82 <main+0x1a2>
         :	               break;
         :	           case 3:
         :	               sort3(a, arraySize);
         :	               break;
         :	           case 4:
         :	               sort4(a, 0, arraySize);
    0.00 :	  401b13:       mov    %r14d,%edx
    0.00 :	  401b16:       xor    %esi,%esi
    0.00 :	  401b18:       mov    %rbx,%rdi
    0.00 :	  401b1b:       callq  4017f0 <sort4>
         :
         :	  // loop for different lenghts of the vector (n)
         :
         :	// for (n = MIN_ELEM ; n <= MAX_ELEM ; n <<= VEC_SIZE_SHIFT) {
         :
         :	   for (int run=0 ; run < runs ; run++) {
    0.00 :	  401b20:       add    $0x1,%r15d
    0.00 :	  401b24:       cmp    %ebp,%r15d
    0.00 :	  401b27:       je     401b5b <main+0x17b>
         :	}
         :
         :	int copy_vector (int *v1, int *v2, int n) {
         :	        int i;
         :
         :	        for (i=0 ; i<n ; i++ , v1++, v2++) {
    0.00 :	  401b29:       test   %r14d,%r14d
    0.00 :	  401b2c:       jle    401b3e <main+0x15e>
    0.00 :	  401b2e:       mov    0x8(%rsp),%rdx
    0.00 :	  401b33:       mov    %r13,%rsi
    0.00 :	  401b36:       mov    %rbx,%rdi
    0.00 :	  401b39:       callq  400680 <memcpy@plt>
         :	     // copy n elements of master to a
         :	     copy_vector (master, a, arraySize);
         :	  
         :	 //    fprintf (stderr, "run=%d ... ;", run);
         :	       
         :	     switch (alg)
    0.00 :	  401b3e:       cmp    $0x2,%r12d
    0.00 :	  401b42:       je     401b75 <main+0x195>
    0.00 :	  401b44:       jg     401b03 <main+0x123>
    0.00 :	  401b46:       cmp    $0x1,%r12d
    0.00 :	  401b4a:       jne    401b82 <main+0x1a2>
         :	     {
         :	           case 1:
         :	               sort1(a, 0, arraySize);
    0.00 :	  401b4c:       mov    %r14d,%edx
    0.00 :	  401b4f:       xor    %esi,%esi
    0.00 :	  401b51:       mov    %rbx,%rdi
    0.00 :	  401b54:       callq  400830 <sort1>
         :	               break;
    0.00 :	  401b59:       jmp    401b20 <main+0x140>
         :	        }
         :	        return 1;
         :	} 
         :
         :	int free_vector (int **v) {
         :	  free (*v);
    0.00 :	  401b5b:       mov    %rbx,%rdi
    0.00 :	  401b5e:       callq  400660 <free@plt>
    0.00 :	  401b63:       mov    %r13,%rdi
    0.00 :	  401b66:       callq  400660 <free@plt>
         :	  //free_vector (&b);
         :	  free_vector (&a);
         :	  free_vector (&master); 
         :
         :	//  printf ("That's all, folks\n");
         :	  return 1;
    0.00 :	  401b6b:       mov    $0x1,%eax
    0.00 :	  401b70:       jmpq   401a13 <main+0x33>
         :	     {
         :	           case 1:
         :	               sort1(a, 0, arraySize);
         :	               break;
         :	           case 2:
         :	               sort2(a, arraySize);
    0.00 :	  401b75:       mov    %r14d,%esi
    0.00 :	  401b78:       mov    %rbx,%rdi
    0.00 :	  401b7b:       callq  401200 <sort2>
         :	               break;
    0.00 :	  401b80:       jmp    401b20 <main+0x140>
         :	               break;
         :	           case 4:
         :	               sort4(a, 0, arraySize);
         :	               break;
         :	           default:
         :	               fprintf (stderr, "Insert correct option...");
    0.00 :	  401b82:       mov    $0x18,%edx
    0.00 :	  401b87:       mov    $0x1,%esi
    0.00 :	  401b8c:       mov    $0x401cdf,%edi
    0.00 :	  401b91:       mov    0x2006b8(%rip),%rcx        # 602250 <stderr@@GLIBC_2.2.5>
    0.00 :	  401b98:       callq  4006a0 <fwrite@plt>
    0.00 :	  401b9d:       jmp    401b20 <main+0x140>
         :	               break;
         :	           case 2:
         :	               sort2(a, arraySize);
         :	               break;
         :	           case 3:
         :	               sort3(a, arraySize);
    0.00 :	  401b9f:       mov    %r14d,%esi
    0.00 :	  401ba2:       mov    %rbx,%rdi
    0.00 :	  401ba5:       callq  4015f0 <sort3>
         :	               break;
    0.00 :	  401baa:       jmpq   401b20 <main+0x140>
         :
         :	int alloc_vector (int **v, int n) {
         :
         :	        *v = (int *) malloc (n*sizeof(int));
         :	        if (!(*v)) {
         :	                fprintf (stderr, "Could not allocate memory for vector!");
    0.00 :	  401baf:       mov    $0x25,%edx
    0.00 :	  401bb4:       mov    $0x1,%esi
    0.00 :	  401bb9:       mov    $0x401cf8,%edi
    0.00 :	  401bbe:       mov    0x20068b(%rip),%rcx        # 602250 <stderr@@GLIBC_2.2.5>
    0.00 :	  401bc5:       callq  4006a0 <fwrite@plt>
         :	  if (!ini_vector (&master, arraySize)) return 0;
         :	//  fprintf (stdout, "done!\n");
         :
         :	  // alloc sorting vector a
         :	//  fprintf (stdout, "Alloc sort vector ...");
         :	  if (!alloc_vector (&a, arraySize)) return 0;
    0.00 :	  401bca:       xor    %eax,%eax
    0.00 :	  401bcc:       jmpq   401a13 <main+0x33>
 Percent |	Source code & Disassembly of libc-2.12.so for cycles
--------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0000003516e36980 <random_r>:
   11.64 :	  3516e36980:   test   %rsi,%rsi
    0.00 :	  3516e36983:   je     3516e36a08 <random_r+0x88>
    0.00 :	  3516e36989:   test   %rdi,%rdi
    0.00 :	  3516e3698c:   je     3516e36a08 <random_r+0x88>
    0.00 :	  3516e3698e:   mov    0x18(%rdi),%edx
   11.23 :	  3516e36991:   mov    0x10(%rdi),%rcx
    0.07 :	  3516e36995:   test   %edx,%edx
    0.00 :	  3516e36997:   je     3516e369e8 <random_r+0x68>
    0.34 :	  3516e36999:   mov    (%rdi),%rdx
    0.00 :	  3516e3699c:   mov    0x8(%rdi),%r8
   11.16 :	  3516e369a0:   mov    0x28(%rdi),%r9
    0.34 :	  3516e369a4:   mov    (%r8),%eax
    1.23 :	  3516e369a7:   add    (%rdx),%eax
    4.42 :	  3516e369a9:   mov    %eax,(%rdx)
   15.72 :	  3516e369ab:   add    $0x4,%rdx
    0.00 :	  3516e369af:   shr    %eax
    0.07 :	  3516e369b1:   cmp    %rdx,%r9
    0.00 :	  3516e369b4:   mov    %eax,(%rsi)
   11.91 :	  3516e369b6:   jbe    3516e369d0 <random_r+0x50>
    0.07 :	  3516e369b8:   lea    0x4(%r8),%rax
    0.00 :	  3516e369bc:   mov    %rdx,(%rdi)
    0.00 :	  3516e369bf:   cmp    %rax,%r9
   10.76 :	  3516e369c2:   cmovbe %rcx,%rax
    0.14 :	  3516e369c6:   mov    %rax,0x8(%rdi)
   15.25 :	  3516e369ca:   xor    %eax,%eax
    0.07 :	  3516e369cc:   retq   
    0.00 :	  3516e369cd:   nopl   (%rax)
    0.82 :	  3516e369d0:   lea    0x4(%r8),%rax
    1.97 :	  3516e369d4:   mov    %rcx,%rdx
    0.20 :	  3516e369d7:   mov    %rdx,(%rdi)
    1.36 :	  3516e369da:   mov    %rax,0x8(%rdi)
    1.23 :	  3516e369de:   xor    %eax,%eax
    0.00 :	  3516e369e0:   retq   
    0.00 :	  3516e369e1:   nopl   0x0(%rax)
    0.00 :	  3516e369e8:   mov    (%rcx),%eax
    0.00 :	  3516e369ea:   imul   $0x41c64e6d,%eax,%eax
    0.00 :	  3516e369f0:   add    $0x3039,%eax
    0.00 :	  3516e369f5:   and    $0x7fffffff,%eax
    0.00 :	  3516e369fa:   mov    %eax,(%rcx)
    0.00 :	  3516e369fc:   mov    %eax,(%rsi)
    0.00 :	  3516e369fe:   xor    %eax,%eax
    0.00 :	  3516e36a00:   retq   
    0.00 :	  3516e36a01:   nopl   0x0(%rax)
    0.00 :	  3516e36a08:   mov    0x356591(%rip),%rax        # 351718cfa0 <_DYNAMIC+0x460>
    0.00 :	  3516e36a0f:   movl   $0x16,%fs:(%rax)
    0.00 :	  3516e36a16:   mov    $0xffffffff,%eax
    0.00 :	  3516e36a1b:   retq   
 Percent |	Source code & Disassembly of libc-2.12.so for cycles
--------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0000003516e365b0 <random>:
   17.30 :	  3516e365b0:   sub    $0x18,%rsp
    0.00 :	  3516e365b4:   mov    $0x1,%esi
    0.00 :	  3516e365b9:   xor    %eax,%eax
   14.63 :	  3516e365bb:   cmpl   $0x0,0x35c0ae(%rip)        # 3517192670 <__libc_multiple_threads>
    0.00 :	  3516e365c2:   je     3516e365d4 <random+0x24>
    0.00 :	  3516e365c4:   lock cmpxchg %esi,0x358574(%rip)        # 351718eb40 <lock>
    0.00 :	  3516e365cc:   jne    3516e3678a <_L_lock_10>
    0.00 :	  3516e365d2:   jmp    3516e365e1 <random+0x31>
    0.00 :	  3516e365d4:   cmpxchg %esi,0x358565(%rip)        # 351718eb40 <lock>
   30.21 :	  3516e365db:   jne    3516e3678a <_L_lock_10>
    0.00 :	  3516e365e1:   lea    0x356ed8(%rip),%rdi        # 351718d4c0 <unsafe_state>
    0.19 :	  3516e365e8:   lea    0xc(%rsp),%rsi
    0.10 :	  3516e365ed:   callq  3516e36980 <random_r>
    0.10 :	  3516e365f2:   cmpl   $0x0,0x35c077(%rip)        # 3517192670 <__libc_multiple_threads>
   16.54 :	  3516e365f9:   je     3516e3660a <random+0x5a>
    0.00 :	  3516e365fb:   lock decl 0x35853e(%rip)        # 351718eb40 <lock>
    0.00 :	  3516e36602:   jne    3516e367a9 <_L_unlock_16>
    0.00 :	  3516e36608:   jmp    3516e36616 <random+0x66>
    0.00 :	  3516e3660a:   decl   0x358530(%rip)        # 351718eb40 <lock>
   14.34 :	  3516e36610:   jne    3516e367a9 <_L_unlock_16>
    0.19 :	  3516e36616:   movslq 0xc(%rsp),%rax
    6.41 :	  3516e3661b:   add    $0x18,%rsp
    0.00 :	  3516e3661f:   retq   
 Percent |	Source code & Disassembly of libc-2.12.so for cycles
--------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0000003516e89050 <memcpy>:
    0.00 :	  3516e89050:   cmp    $0x20,%rdx
    0.00 :	  3516e89054:   mov    %rdi,%rax
    0.00 :	  3516e89057:   jae    3516e890d0 <memcpy+0x80>
    0.00 :	  3516e89059:   test   $0x1,%dl
    0.00 :	  3516e8905c:   je     3516e89069 <memcpy+0x19>
    0.00 :	  3516e8905e:   movzbl (%rsi),%ecx
    0.00 :	  3516e89061:   mov    %cl,(%rdi)
    0.00 :	  3516e89063:   inc    %rsi
    0.00 :	  3516e89066:   inc    %rdi
    0.00 :	  3516e89069:   test   $0x2,%dl
    0.00 :	  3516e8906c:   je     3516e89080 <memcpy+0x30>
    0.00 :	  3516e8906e:   movzwl (%rsi),%ecx
    0.00 :	  3516e89071:   mov    %cx,(%rdi)
    0.00 :	  3516e89074:   add    $0x2,%rsi
    0.00 :	  3516e89078:   add    $0x2,%rdi
    0.00 :	  3516e8907c:   nopl   0x0(%rax)
    0.00 :	  3516e89080:   test   $0x4,%dl
    0.00 :	  3516e89083:   je     3516e89091 <memcpy+0x41>
    0.00 :	  3516e89085:   mov    (%rsi),%ecx
    0.00 :	  3516e89087:   mov    %ecx,(%rdi)
    0.00 :	  3516e89089:   add    $0x4,%rsi
    0.00 :	  3516e8908d:   add    $0x4,%rdi
    0.00 :	  3516e89091:   test   $0x8,%dl
    0.00 :	  3516e89094:   je     3516e890a4 <memcpy+0x54>
    0.00 :	  3516e89096:   mov    (%rsi),%rcx
    0.00 :	  3516e89099:   mov    %rcx,(%rdi)
    0.00 :	  3516e8909c:   add    $0x8,%rsi
    0.00 :	  3516e890a0:   add    $0x8,%rdi
    0.00 :	  3516e890a4:   and    $0xf0,%edx
    0.00 :	  3516e890aa:   je     3516e890cb <memcpy+0x7b>
    0.00 :	  3516e890ac:   nopl   0x0(%rax)
    0.00 :	  3516e890b0:   mov    (%rsi),%rcx
    0.00 :	  3516e890b3:   mov    0x8(%rsi),%r8
    0.00 :	  3516e890b7:   mov    %rcx,(%rdi)
    0.00 :	  3516e890ba:   mov    %r8,0x8(%rdi)
    0.00 :	  3516e890be:   sub    $0x10,%edx
    0.00 :	  3516e890c1:   lea    0x10(%rsi),%rsi
    0.00 :	  3516e890c5:   lea    0x10(%rdi),%rdi
    0.00 :	  3516e890c9:   jne    3516e890b0 <memcpy+0x60>
    0.00 :	  3516e890cb:   repz retq 
    0.00 :	  3516e890cd:   nopl   (%rax)
    0.00 :	  3516e890d0:   mov    %rax,-0x8(%rsp)
    0.00 :	  3516e890d5:   mov    %esi,%ecx
    0.00 :	  3516e890d7:   and    $0x7,%ecx
    0.00 :	  3516e890da:   je     3516e89110 <memcpy+0xc0>
    0.00 :	  3516e890dc:   lea    -0x8(%rcx,%rdx,1),%rdx
    0.00 :	  3516e890e1:   sub    $0x8,%ecx
    0.00 :	  3516e890e4:   data32 data32 nopw %cs:0x0(%rax,%rax,1)
    0.00 :	  3516e890f0:   movzbl (%rsi),%eax
    0.00 :	  3516e890f3:   mov    %al,(%rdi)
    0.00 :	  3516e890f5:   inc    %ecx
    0.00 :	  3516e890f7:   lea    0x1(%rsi),%rsi
    0.00 :	  3516e890fb:   lea    0x1(%rdi),%rdi
    0.00 :	  3516e890ff:   jne    3516e890f0 <memcpy+0xa0>
    0.00 :	  3516e89101:   data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
    0.00 :	  3516e89110:   cmp    $0x400,%rdx
    0.00 :	  3516e89117:   ja     3516e89190 <memcpy+0x140>
    0.00 :	  3516e89119:   mov    %edx,%ecx
    0.00 :	  3516e8911b:   shr    $0x5,%ecx
    0.00 :	  3516e8911e:   je     3516e89180 <memcpy+0x130>
    0.00 :	  3516e89120:   dec    %ecx
    0.00 :	  3516e89122:   mov    (%rsi),%rax
    0.00 :	  3516e89125:   mov    0x8(%rsi),%r8
    0.00 :	  3516e89129:   mov    0x10(%rsi),%r9
    0.00 :	  3516e8912d:   mov    0x18(%rsi),%r10
    0.00 :	  3516e89131:   mov    %rax,(%rdi)
    0.00 :	  3516e89134:   mov    %r8,0x8(%rdi)
    0.00 :	  3516e89138:   mov    %r9,0x10(%rdi)
    0.00 :	  3516e8913c:   mov    %r10,0x18(%rdi)
    0.00 :	  3516e89140:   lea    0x20(%rsi),%rsi
    0.00 :	  3516e89144:   lea    0x20(%rdi),%rdi
    0.00 :	  3516e89148:   je     3516e89180 <memcpy+0x130>
    0.00 :	  3516e8914a:   dec    %ecx
    0.00 :	  3516e8914c:   mov    (%rsi),%rax
    0.00 :	  3516e8914f:   mov    0x8(%rsi),%r8
    0.00 :	  3516e89153:   mov    0x10(%rsi),%r9
    0.00 :	  3516e89157:   mov    0x18(%rsi),%r10
    0.00 :	  3516e8915b:   mov    %rax,(%rdi)
    0.00 :	  3516e8915e:   mov    %r8,0x8(%rdi)
    0.00 :	  3516e89162:   mov    %r9,0x10(%rdi)
    0.00 :	  3516e89166:   mov    %r10,0x18(%rdi)
    0.00 :	  3516e8916a:   lea    0x20(%rsi),%rsi
    0.00 :	  3516e8916e:   lea    0x20(%rdi),%rdi
    0.00 :	  3516e89172:   jne    3516e89120 <memcpy+0xd0>
    0.00 :	  3516e89174:   data32 data32 nopw %cs:0x0(%rax,%rax,1)
    0.00 :	  3516e89180:   and    $0x1f,%edx
    0.00 :	  3516e89183:   mov    -0x8(%rsp),%rax
    0.00 :	  3516e89188:   jne    3516e89059 <memcpy+0x9>
    0.00 :	  3516e8918e:   repz retq 
    0.00 :	  3516e89190:   mov    0x303f59(%rip),%r11        # 351718d0f0 <__x86_64_data_cache_size_half>
    0.00 :	  3516e89197:   cmp    %rdx,%r11
    0.00 :	  3516e8919a:   cmova  %rdx,%r11
    0.00 :	  3516e8919e:   mov    %r11,%rcx
    0.00 :	  3516e891a1:   and    $0xfffffffffffffff8,%r11
    0.00 :	  3516e891a5:   shr    $0x3,%rcx
    0.00 :	  3516e891a9:   je     3516e891b0 <memcpy+0x160>
    0.00 :	  3516e891ab:   rep movsq %ds:(%rsi),%es:(%rdi)
    0.00 :	  3516e891ae:   xchg   %ax,%ax
    0.00 :	  3516e891b0:   sub    %r11,%rdx
    0.00 :	  3516e891b3:   test   $0xfffffffffffffff8,%rdx
    0.00 :	  3516e891ba:   jne    3516e891d0 <memcpy+0x180>
    0.00 :	  3516e891bc:   and    $0x7,%edx
    0.00 :	  3516e891bf:   mov    -0x8(%rsp),%rax
    0.00 :	  3516e891c4:   jne    3516e89059 <memcpy+0x9>
    0.00 :	  3516e891ca:   repz retq 
    0.00 :	  3516e891cc:   nopl   0x0(%rax)
    0.00 :	  3516e891d0:   mov    0x303f29(%rip),%r8        # 351718d100 <__x86_64_shared_cache_size_half>
    0.00 :	  3516e891d7:   cmp    %rdx,%r8
    0.00 :	  3516e891da:   cmova  %rdx,%r8
    0.00 :	  3516e891de:   mov    %r8,%rcx
    0.00 :	  3516e891e1:   and    $0xffffffffffffffc0,%r8
    0.00 :	  3516e891e5:   shr    $0x6,%rcx
    0.00 :	  3516e891e9:   je     3516e8939a <memcpy+0x34a>
    0.00 :	  3516e891ef:   mov    %r14,-0x10(%rsp)
    0.00 :	  3516e891f4:   mov    %r13,-0x18(%rsp)
    0.00 :	  3516e891f9:   mov    %r12,-0x20(%rsp)
    0.00 :	  3516e891fe:   mov    %rbx,-0x28(%rsp)
    0.00 :	  3516e89203:   cmpl   $0x0,0x3091c6(%rip)        # 35171923d0 <__x86_64_prefetchw>
    0.00 :	  3516e8920a:   je     3516e892d0 <memcpy+0x280>
    0.00 :	  3516e89210:   dec    %rcx
    0.00 :	  3516e89213:   mov    (%rsi),%rax
    0.00 :	  3516e89216:   mov    0x8(%rsi),%rbx
    0.00 :	  3516e8921a:   mov    0x10(%rsi),%r9
    0.00 :	  3516e8921e:   mov    0x18(%rsi),%r10
    0.00 :	  3516e89222:   mov    0x20(%rsi),%r11
    0.00 :	  3516e89226:   mov    0x28(%rsi),%r12
    0.00 :	  3516e8922a:   mov    0x30(%rsi),%r13
    0.00 :	  3516e8922e:   mov    0x38(%rsi),%r14
    0.00 :	  3516e89232:   prefetcht0 0x380(%rsi)
    0.00 :	  3516e89239:   prefetcht0 0x3c0(%rsi)
    0.00 :	  3516e89240:   mov    %rax,(%rdi)
    0.00 :	  3516e89243:   mov    %rbx,0x8(%rdi)
    0.00 :	  3516e89247:   mov    %r9,0x10(%rdi)
    0.00 :	  3516e8924b:   mov    %r10,0x18(%rdi)
    0.00 :	  3516e8924f:   mov    %r11,0x20(%rdi)
    0.00 :	  3516e89253:   mov    %r12,0x28(%rdi)
    0.00 :	  3516e89257:   mov    %r13,0x30(%rdi)
    0.00 :	  3516e8925b:   mov    %r14,0x38(%rdi)
    0.00 :	  3516e8925f:   lea    0x40(%rsi),%rsi
    0.00 :	  3516e89263:   lea    0x40(%rdi),%rdi
    0.00 :	  3516e89267:   je     3516e89386 <memcpy+0x336>
    0.00 :	  3516e8926d:   dec    %rcx
    0.00 :	  3516e89270:   mov    (%rsi),%rax
    0.00 :	  3516e89273:   mov    0x8(%rsi),%rbx
    0.00 :	  3516e89277:   mov    0x10(%rsi),%r9
    0.00 :	  3516e8927b:   mov    0x18(%rsi),%r10
    0.00 :	  3516e8927f:   mov    0x20(%rsi),%r11
    0.00 :	  3516e89283:   mov    0x28(%rsi),%r12
    0.00 :	  3516e89287:   mov    0x30(%rsi),%r13
    0.00 :	  3516e8928b:   mov    0x38(%rsi),%r14
    0.00 :	  3516e8928f:   mov    %rax,(%rdi)
    0.00 :	  3516e89292:   mov    %rbx,0x8(%rdi)
    0.00 :	  3516e89296:   mov    %r9,0x10(%rdi)
    0.00 :	  3516e8929a:   mov    %r10,0x18(%rdi)
    0.00 :	  3516e8929e:   mov    %r11,0x20(%rdi)
    0.00 :	  3516e892a2:   mov    %r12,0x28(%rdi)
    0.00 :	  3516e892a6:   mov    %r13,0x30(%rdi)
    0.00 :	  3516e892aa:   mov    %r14,0x38(%rdi)
    0.00 :	  3516e892ae:   prefetchw 0x340(%rdi)
    0.00 :	  3516e892b5:   prefetchw 0x380(%rdi)
    0.00 :	  3516e892bc:   lea    0x40(%rsi),%rsi
    0.00 :	  3516e892c0:   lea    0x40(%rdi),%rdi
    0.00 :	  3516e892c4:   jne    3516e89210 <memcpy+0x1c0>
    0.00 :	  3516e892ca:   jmpq   3516e89386 <memcpy+0x336>
    0.00 :	  3516e892cf:   nop
    0.00 :	  3516e892d0:   dec    %rcx
    0.00 :	  3516e892d3:   mov    (%rsi),%rax
    0.00 :	  3516e892d6:   mov    0x8(%rsi),%rbx
    0.00 :	  3516e892da:   mov    0x10(%rsi),%r9
    0.00 :	  3516e892de:   mov    0x18(%rsi),%r10
    0.00 :	  3516e892e2:   mov    0x20(%rsi),%r11
    0.00 :	  3516e892e6:   mov    0x28(%rsi),%r12
    0.00 :	  3516e892ea:   mov    0x30(%rsi),%r13
    0.00 :	  3516e892ee:   mov    0x38(%rsi),%r14
    0.00 :	  3516e892f2:   prefetcht0 0x380(%rsi)
    0.00 :	  3516e892f9:   prefetcht0 0x3c0(%rsi)
    0.00 :	  3516e89300:   mov    %rax,(%rdi)
    0.00 :	  3516e89303:   mov    %rbx,0x8(%rdi)
    0.00 :	  3516e89307:   mov    %r9,0x10(%rdi)
    0.00 :	  3516e8930b:   mov    %r10,0x18(%rdi)
    0.00 :	  3516e8930f:   mov    %r11,0x20(%rdi)
    0.00 :	  3516e89313:   mov    %r12,0x28(%rdi)
    0.00 :	  3516e89317:   mov    %r13,0x30(%rdi)
    0.00 :	  3516e8931b:   mov    %r14,0x38(%rdi)
    0.00 :	  3516e8931f:   lea    0x40(%rsi),%rsi
    0.00 :	  3516e89323:   lea    0x40(%rdi),%rdi
    0.00 :	  3516e89327:   je     3516e89386 <memcpy+0x336>
    0.00 :	  3516e89329:   dec    %rcx
    0.00 :	  3516e8932c:   mov    (%rsi),%rax
    0.00 :	  3516e8932f:   mov    0x8(%rsi),%rbx
    0.00 :	  3516e89333:   mov    0x10(%rsi),%r9
    0.00 :	  3516e89337:   mov    0x18(%rsi),%r10
    0.00 :	  3516e8933b:   mov    0x20(%rsi),%r11
    0.00 :	  3516e8933f:   mov    0x28(%rsi),%r12
    0.00 :	  3516e89343:   mov    0x30(%rsi),%r13
    0.00 :	  3516e89347:   mov    0x38(%rsi),%r14
    0.00 :	  3516e8934b:   prefetcht0 0x340(%rdi)
    0.00 :	  3516e89352:   prefetcht0 0x380(%rdi)
    0.00 :	  3516e89359:   mov    %rax,(%rdi)
    0.00 :	  3516e8935c:   mov    %rbx,0x8(%rdi)
    0.00 :	  3516e89360:   mov    %r9,0x10(%rdi)
    0.00 :	  3516e89364:   mov    %r10,0x18(%rdi)
    0.00 :	  3516e89368:   mov    %r11,0x20(%rdi)
    0.00 :	  3516e8936c:   mov    %r12,0x28(%rdi)
    0.00 :	  3516e89370:   mov    %r13,0x30(%rdi)
    0.00 :	  3516e89374:   mov    %r14,0x38(%rdi)
    0.00 :	  3516e89378:   lea    0x40(%rsi),%rsi
    0.00 :	  3516e8937c:   lea    0x40(%rdi),%rdi
    0.00 :	  3516e89380:   jne    3516e892d0 <memcpy+0x280>
    0.00 :	  3516e89386:   mov    -0x28(%rsp),%rbx
    0.00 :	  3516e8938b:   mov    -0x20(%rsp),%r12
    0.00 :	  3516e89390:   mov    -0x18(%rsp),%r13
    0.00 :	  3516e89395:   mov    -0x10(%rsp),%r14
    0.00 :	  3516e8939a:   sub    %r8,%rdx
    0.00 :	  3516e8939d:   test   $0xffffffffffffffc0,%rdx
    0.00 :	  3516e893a4:   jne    3516e893c0 <memcpy+0x370>
    0.00 :	  3516e893a6:   and    $0x3f,%edx
    0.00 :	  3516e893a9:   mov    -0x8(%rsp),%rax
    0.00 :	  3516e893ae:   jne    3516e89059 <memcpy+0x9>
    0.00 :	  3516e893b4:   repz retq 
    0.00 :	  3516e893b6:   nopw   %cs:0x0(%rax,%rax,1)
    0.00 :	  3516e893c0:   mov    %rdx,%rcx
    0.00 :	  3516e893c3:   shr    $0x7,%rcx
    0.00 :	  3516e893c7:   je     3516e894a5 <memcpy+0x455>
    0.00 :	  3516e893cd:   mov    %r14,-0x10(%rsp)
    0.00 :	  3516e893d2:   mov    %r13,-0x18(%rsp)
    0.00 :	  3516e893d7:   mov    %r12,-0x20(%rsp)
    0.00 :	  3516e893dc:   nopl   0x0(%rax)
    0.00 :	  3516e893e0:   prefetchnta 0x300(%rsi)
   21.40 :	  3516e893e7:   prefetchnta 0x340(%rsi)
   23.95 :	  3516e893ee:   dec    %rcx
    0.00 :	  3516e893f1:   mov    (%rsi),%rax
    0.23 :	  3516e893f4:   mov    0x8(%rsi),%r8
    0.23 :	  3516e893f8:   mov    0x10(%rsi),%r9
    0.47 :	  3516e893fc:   mov    0x18(%rsi),%r10
    0.00 :	  3516e89400:   mov    0x20(%rsi),%r11
    0.00 :	  3516e89404:   mov    0x28(%rsi),%r12
    3.02 :	  3516e89408:   mov    0x30(%rsi),%r13
    0.47 :	  3516e8940c:   mov    0x38(%rsi),%r14
    0.00 :	  3516e89410:   movnti %rax,(%rdi)
    3.95 :	  3516e89414:   movnti %r8,0x8(%rdi)
    1.86 :	  3516e89419:   movnti %r9,0x10(%rdi)
   10.70 :	  3516e8941e:   movnti %r10,0x18(%rdi)
    0.47 :	  3516e89423:   movnti %r11,0x20(%rdi)
    3.02 :	  3516e89428:   movnti %r12,0x28(%rdi)
    1.63 :	  3516e8942d:   movnti %r13,0x30(%rdi)
    3.72 :	  3516e89432:   movnti %r14,0x38(%rdi)
    1.40 :	  3516e89437:   mov    0x40(%rsi),%rax
    0.00 :	  3516e8943b:   mov    0x48(%rsi),%r8
    0.47 :	  3516e8943f:   mov    0x50(%rsi),%r9
    0.70 :	  3516e89443:   mov    0x58(%rsi),%r10
    0.00 :	  3516e89447:   mov    0x60(%rsi),%r11
    0.00 :	  3516e8944b:   mov    0x68(%rsi),%r12
    2.33 :	  3516e8944f:   mov    0x70(%rsi),%r13
    0.47 :	  3516e89453:   mov    0x78(%rsi),%r14
    0.23 :	  3516e89457:   movnti %rax,0x40(%rdi)
    4.88 :	  3516e8945c:   movnti %r8,0x48(%rdi)
    2.56 :	  3516e89461:   movnti %r9,0x50(%rdi)
    0.70 :	  3516e89466:   movnti %r10,0x58(%rdi)
    1.40 :	  3516e8946b:   movnti %r11,0x60(%rdi)
    2.79 :	  3516e89470:   movnti %r12,0x68(%rdi)
    2.33 :	  3516e89475:   movnti %r13,0x70(%rdi)
    3.49 :	  3516e8947a:   movnti %r14,0x78(%rdi)
    0.93 :	  3516e8947f:   lea    0x80(%rsi),%rsi
    0.00 :	  3516e89486:   lea    0x80(%rdi),%rdi
    0.23 :	  3516e8948d:   jne    3516e893e0 <memcpy+0x390>
    0.00 :	  3516e89493:   sfence 
    0.00 :	  3516e89496:   mov    -0x20(%rsp),%r12
    0.00 :	  3516e8949b:   mov    -0x18(%rsp),%r13
    0.00 :	  3516e894a0:   mov    -0x10(%rsp),%r14
    0.00 :	  3516e894a5:   and    $0x7f,%edx
    0.00 :	  3516e894a8:   mov    -0x8(%rsp),%rax
    0.00 :	  3516e894ad:   jne    3516e89059 <memcpy+0x9>
    0.00 :	  3516e894b3:   repz retq 
 Percent |	Source code & Disassembly of libc-2.12.so for cycles
--------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0000003516e36c60 <rand>:
   48.72 :	  3516e36c60:   sub    $0x8,%rsp
    0.00 :	  3516e36c64:   callq  3516e365b0 <random>
   41.03 :	  3516e36c69:   add    $0x8,%rsp
   10.26 :	  3516e36c6d:   retq   
 Percent |	Source code & Disassembly of sort for cycles
------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .plt:
         :
         :	00000000004006b0 <rand@plt>:
  100.00 :	  4006b0:       jmpq   *0x201b7a(%rip)        # 602230 <_GLOBAL_OFFSET_TABLE_+0x50>
    0.00 :	  4006b6:       pushq  $0x7
    0.00 :	  4006bb:       jmpq   400630 <_init+0x18>
 Percent |	Source code & Disassembly of nfs.ko for cycles
--------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	000000000003e3f0 <put_lseg>:
    0.00 :	  3e3f0:       push   %rbp
    0.00 :	  3e3f1:       mov    %rsp,%rbp
    0.00 :	  3e3f4:       sub    $0x30,%rsp
    0.00 :	  3e3f8:       mov    %rbx,-0x18(%rbp)
    0.00 :	  3e3fc:       mov    %r12,-0x10(%rbp)
    0.00 :	  3e400:       mov    %r13,-0x8(%rbp)
    0.00 :	  3e404:       callq  3e409 <put_lseg+0x19>
    0.00 :	  3e409:       test   %rdi,%rdi
    0.00 :	  3e40c:       mov    %rdi,%rbx
    0.00 :	  3e40f:       je     3e46d <put_lseg+0x7d>
    0.00 :	  3e411:       testb  $0x10,0x0(%rip)        # 3e418 <put_lseg+0x28>
    0.00 :	  3e418:       jne    3e47b <put_lseg+0x8b>
    0.00 :	  3e41a:       mov    0x38(%rbx),%rax
    0.00 :	  3e41e:       lea    0x28(%rbx),%rdi
    0.00 :	  3e422:       mov    0x68(%rax),%r12
    0.00 :	  3e426:       add    $0xb0,%r12
    0.00 :	  3e42d:       mov    %r12,%rsi
    0.00 :	  3e430:       callq  3e435 <put_lseg+0x45>
    0.00 :	  3e435:       test   %eax,%eax
    0.00 :	  3e437:       je     3e46d <put_lseg+0x7d>
    0.00 :	  3e439:       lea    -0x30(%rbp),%r13
    0.00 :	  3e43d:       mov    %rbx,%rdi
    0.00 :	  3e440:       mov    %r13,-0x30(%rbp)
    0.00 :	  3e444:       mov    %r13,-0x28(%rbp)
    0.00 :	  3e448:       callq  3dd50 <put_lseg_common>
    0.00 :	  3e44d:       mov    -0x30(%rbp),%rdx
    0.00 :	  3e451:       mov    %r13,%rsi
    0.00 :	  3e454:       mov    %rbx,%rdi
    0.00 :	  3e457:       callq  3e45c <put_lseg+0x6c>
    0.00 :	  3e45c:       mov    %r12,%rax
    0.00 :	  3e45f:       incw   (%rax)
    0.00 :	  3e462:       data32 xchg %ax,%ax
    0.00 :	  3e465:       mov    %r13,%rdi
    0.00 :	  3e468:       callq  3e46d <put_lseg+0x7d>
  100.00 :	  3e46d:       mov    -0x18(%rbp),%rbx
    0.00 :	  3e471:       mov    -0x10(%rbp),%r12
    0.00 :	  3e475:       mov    -0x8(%rbp),%r13
    0.00 :	  3e479:       leaveq 
    0.00 :	  3e47a:       retq   
    0.00 :	  3e47b:       mov    0x30(%rdi),%r8
    0.00 :	  3e47f:       mov    0x28(%rdi),%ecx
    0.00 :	  3e482:       mov    %rdi,%rdx
    0.00 :	  3e485:       mov    $0x0,%rsi
    0.00 :	  3e48c:       mov    $0x0,%rdi
    0.00 :	  3e493:       xor    %eax,%eax
    0.00 :	  3e495:       and    $0x1,%r8d
    0.00 :	  3e499:       callq  3e49e <put_lseg+0xae>
    0.00 :	  3e49e:       jmpq   3e41a <put_lseg+0x2a>
 Percent |	Source code & Disassembly of sunrpc.ko for cycles
-----------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	000000000000b580 <rpc_put_task>:
  100.00 :	  b580:       push   %rbp
    0.00 :	  b581:       mov    %rsp,%rbp
    0.00 :	  b584:       callq  b589 <rpc_put_task+0x9>
    0.00 :	  b589:       xor    %esi,%esi
    0.00 :	  b58b:       callq  b520 <rpc_do_put_task>
    0.00 :	  b590:       leaveq 
    0.00 :	  b591:       retq   
 Percent |	Source code & Disassembly of ld-2.12.so for cycles
------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0000003516a18610 <_wordcopy_fwd_aligned>:
    0.00 :	  3516a18610:   lea    0x23a9(%rip),%rax        # 3516a1a9c0 <_itoa_lower_digits_internal+0x160>
  100.00 :	  3516a18617:   mov    %rdx,%rcx
    0.00 :	  3516a1861a:   and    $0x7,%ecx
    0.00 :	  3516a1861d:   movslq (%rax,%rcx,4),%rcx
    0.00 :	  3516a18621:   lea    (%rcx,%rax,1),%rax
    0.00 :	  3516a18625:   jmpq   *%rax
    0.00 :	  3516a18627:   nopw   0x0(%rax,%rax,1)
    0.00 :	  3516a18630:   mov    (%rsi),%rax
    0.00 :	  3516a18633:   sub    $0x18,%rdi
    0.00 :	  3516a18637:   sub    $0x10,%rsi
    0.00 :	  3516a1863b:   mov    0x18(%rsi),%rcx
    0.00 :	  3516a1863f:   add    $0x2,%rdx
    0.00 :	  3516a18643:   mov    %rax,0x18(%rdi)
    0.00 :	  3516a18647:   nopw   0x0(%rax,%rax,1)
    0.00 :	  3516a18650:   mov    0x20(%rsi),%rax
    0.00 :	  3516a18654:   mov    %rcx,0x20(%rdi)
    0.00 :	  3516a18658:   mov    0x28(%rsi),%rcx
    0.00 :	  3516a1865c:   mov    %rax,0x28(%rdi)
    0.00 :	  3516a18660:   mov    0x30(%rsi),%rax
    0.00 :	  3516a18664:   mov    %rcx,0x30(%rdi)
    0.00 :	  3516a18668:   mov    0x38(%rsi),%rcx
    0.00 :	  3516a1866c:   mov    %rax,0x38(%rdi)
    0.00 :	  3516a18670:   add    $0x40,%rdi
    0.00 :	  3516a18674:   sub    $0x8,%rdx
    0.00 :	  3516a18678:   je     3516a18750 <_wordcopy_fwd_aligned+0x140>
    0.00 :	  3516a1867e:   add    $0x40,%rsi
    0.00 :	  3516a18682:   mov    (%rsi),%rax
    0.00 :	  3516a18685:   mov    %rcx,(%rdi)
    0.00 :	  3516a18688:   mov    0x8(%rsi),%rcx
    0.00 :	  3516a1868c:   mov    %rax,0x8(%rdi)
    0.00 :	  3516a18690:   mov    0x10(%rsi),%rax
    0.00 :	  3516a18694:   mov    %rcx,0x10(%rdi)
    0.00 :	  3516a18698:   mov    0x18(%rsi),%rcx
    0.00 :	  3516a1869c:   mov    %rax,0x18(%rdi)
    0.00 :	  3516a186a0:   jmp    3516a18650 <_wordcopy_fwd_aligned+0x40>
    0.00 :	  3516a186a2:   nopw   0x0(%rax,%rax,1)
    0.00 :	  3516a186a8:   mov    (%rsi),%rcx
    0.00 :	  3516a186ab:   add    $0x1,%rdx
    0.00 :	  3516a186af:   sub    $0x8,%rsi
    0.00 :	  3516a186b3:   sub    $0x10,%rdi
    0.00 :	  3516a186b7:   jmp    3516a18690 <_wordcopy_fwd_aligned+0x80>
    0.00 :	  3516a186b9:   nopl   0x0(%rax)
    0.00 :	  3516a186c0:   test   %rdx,%rdx
    0.00 :	  3516a186c3:   je     3516a18753 <_wordcopy_fwd_aligned+0x143>
    0.00 :	  3516a186c9:   mov    (%rsi),%rax
    0.00 :	  3516a186cc:   sub    $0x8,%rdi
    0.00 :	  3516a186d0:   jmp    3516a18688 <_wordcopy_fwd_aligned+0x78>
    0.00 :	  3516a186d2:   nopw   0x0(%rax,%rax,1)
    0.00 :	  3516a186d8:   sub    $0x1,%rdx
    0.00 :	  3516a186dc:   mov    (%rsi),%rcx
    0.00 :	  3516a186df:   je     3516a18750 <_wordcopy_fwd_aligned+0x140>
    0.00 :	  3516a186e1:   add    $0x8,%rsi
    0.00 :	  3516a186e5:   jmp    3516a18682 <_wordcopy_fwd_aligned+0x72>
    0.00 :	  3516a186e7:   nopw   0x0(%rax,%rax,1)
    0.00 :	  3516a186f0:   mov    (%rsi),%rax
    0.00 :	  3516a186f3:   add    $0x6,%rdx
    0.00 :	  3516a186f7:   sub    $0x30,%rsi
    0.00 :	  3516a186fb:   sub    $0x38,%rdi
    0.00 :	  3516a186ff:   jmpq   3516a18668 <_wordcopy_fwd_aligned+0x58>
    0.00 :	  3516a18704:   nopl   0x0(%rax)
    0.00 :	  3516a18708:   mov    (%rsi),%rcx
    0.00 :	  3516a1870b:   add    $0x5,%rdx
    0.00 :	  3516a1870f:   sub    $0x28,%rsi
    0.00 :	  3516a18713:   sub    $0x30,%rdi
    0.00 :	  3516a18717:   jmpq   3516a18660 <_wordcopy_fwd_aligned+0x50>
    0.00 :	  3516a1871c:   nopl   0x0(%rax)
    0.00 :	  3516a18720:   mov    (%rsi),%rax
    0.00 :	  3516a18723:   add    $0x4,%rdx
    0.00 :	  3516a18727:   sub    $0x20,%rsi
    0.00 :	  3516a1872b:   sub    $0x28,%rdi
    0.00 :	  3516a1872f:   jmpq   3516a18658 <_wordcopy_fwd_aligned+0x48>
    0.00 :	  3516a18734:   nopl   0x0(%rax)
    0.00 :	  3516a18738:   mov    (%rsi),%rcx
    0.00 :	  3516a1873b:   add    $0x3,%rdx
    0.00 :	  3516a1873f:   sub    $0x18,%rsi
    0.00 :	  3516a18743:   sub    $0x20,%rdi
    0.00 :	  3516a18747:   jmpq   3516a18650 <_wordcopy_fwd_aligned+0x40>
    0.00 :	  3516a1874c:   nopl   0x0(%rax)
    0.00 :	  3516a18750:   mov    %rcx,(%rdi)
    0.00 :	  3516a18753:   repz retq 
 Percent |	Source code & Disassembly of ld-2.12.so for cycles
------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0000003516a02610 <dl_main>:
    0.00 :	  3516a02610:   push   %rbp
    0.00 :	  3516a02611:   lea    -0x1ac8(%rip),%rax        # 3516a00b50 <_dl_initial_error_catch_tsd>
    0.00 :	  3516a02618:   mov    %rsp,%rbp
    0.00 :	  3516a0261b:   push   %r15
    0.00 :	  3516a0261d:   push   %r14
    0.00 :	  3516a0261f:   push   %r13
    0.00 :	  3516a02621:   mov    %rdx,%r13
    0.00 :	  3516a02624:   lea    0x8b55(%rip),%rdx        # 3516a0b180 <_dl_nothread_init_static_tls>
    0.00 :	  3516a0262b:   push   %r12
    0.00 :	  3516a0262d:   mov    %rdi,%r12
    0.00 :	  3516a02630:   lea    0xf659(%rip),%rdi        # 3516a11c90 <_dl_make_stack_executable>
    0.00 :	  3516a02637:   push   %rbx
    0.00 :	  3516a02638:   sub    $0x128,%rsp
    0.00 :	  3516a0263f:   mov    %esi,-0xf0(%rbp)
    0.00 :	  3516a02645:   mov    %rcx,-0x100(%rbp)
    0.00 :	  3516a0264c:   lea    -0x1ae3(%rip),%rsi        # 3516a00b70 <rtld_lock_default_unlock_recursive>
    0.00 :	  3516a02653:   lea    -0x1afa(%rip),%rcx        # 3516a00b60 <rtld_lock_default_lock_recursive>
    0.00 :	  3516a0265a:   mov    %rdi,0x21e8af(%rip)        # 3516c20f10 <_rtld_global+0xf10>
    0.00 :	  3516a02661:   lea    -0x38(%rbp),%rdi
    0.00 :	  3516a02665:   mov    %rax,0x21e324(%rip)        # 3516c20990 <_rtld_global+0x990>
    0.00 :	  3516a0266c:   mov    %rdx,0x21e8ed(%rip)        # 3516c20f60 <_rtld_global+0xf60>
    0.00 :	  3516a02673:   mov    %rcx,0x21e886(%rip)        # 3516c20f00 <_rtld_global+0xf00>
    0.00 :	  3516a0267a:   mov    %rsi,0x21e887(%rip)        # 3516c20f08 <_rtld_global+0xf08>
    0.00 :	  3516a02681:   callq  3516a01d40 <process_envvars>
    0.00 :	  3516a02686:   lea    -0x1b8d(%rip),%rax        # 3516a00b00 <_start>
    0.00 :	  3516a0268d:   cmp    %rax,0x0(%r13)
    0.00 :	  3516a02691:   jne    3516a02851 <dl_main+0x241>
    0.00 :	  3516a02697:   mov    0x21d4ea(%rip),%rax        # 3516c1fb88 <_dl_argv>
    0.00 :	  3516a0269e:   mov    0x21d6c3(%rip),%r14d        # 3516c1fd68 <_dl_argc>
    0.00 :	  3516a026a5:   lea    -0x60(%rbp),%r15
    0.00 :	  3516a026a9:   mov    (%rax),%rax
    0.00 :	  3516a026ac:   mov    %rax,0x21e2ed(%rip)        # 3516c209a0 <_rtld_global+0x9a0>
    0.00 :	  3516a026b3:   cmp    $0x1,%r14d
    0.00 :	  3516a026b7:   jle    3516a02710 <dl_main+0x100>
    0.00 :	  3516a026b9:   mov    0x21d4c8(%rip),%rbx        # 3516c1fb88 <_dl_argv>
    0.00 :	  3516a026c0:   lea    0x18763(%rip),%rdi        # 3516a1ae2a <intel_02_known+0x36a>
    0.00 :	  3516a026c7:   mov    $0x7,%ecx
    0.00 :	  3516a026cc:   mov    0x8(%rbx),%rax
    0.00 :	  3516a026d0:   mov    %rax,%rsi
    0.00 :	  3516a026d3:   repz cmpsb %es:(%rdi),%ds:(%rsi)
    0.00 :	  3516a026d5:   jne    3516a0272f <dl_main+0x11f>
    0.00 :	  3516a026d7:   movl   $0x1,-0x38(%rbp)
    0.00 :	  3516a026de:   movl   $0xffffffff,0x21d4f4(%rip)        # 3516c1fbdc <_rtld_global_ro+0x3c>
    0.00 :	  3516a026e8:   mov    0x21d679(%rip),%r14d        # 3516c1fd68 <_dl_argc>
    0.00 :	  3516a026ef:   addl   $0x1,0x21d676(%rip)        # 3516c1fd6c <_dl_skip_args>
    0.00 :	  3516a026f6:   addq   $0x8,0x21d48a(%rip)        # 3516c1fb88 <_dl_argv>
    0.00 :	  3516a026fe:   sub    $0x1,%r14d
    0.00 :	  3516a02702:   cmp    $0x1,%r14d
    0.00 :	  3516a02706:   mov    %r14d,0x21d65b(%rip)        # 3516c1fd68 <_dl_argc>
    0.00 :	  3516a0270d:   jg     3516a026b9 <dl_main+0xa9>
    0.00 :	  3516a0270f:   nop
    0.00 :	  3516a02710:   lea    0x191d9(%rip),%rsi        # 3516a1b8f0 <expected1.10492+0x48f>
    0.00 :	  3516a02717:   mov    $0x2,%edi
    0.00 :	  3516a0271c:   xor    %eax,%eax
    0.00 :	  3516a0271e:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a02723:   mov    $0x7f,%edi
    0.00 :	  3516a02728:   callq  3516a16fd0 <_Exit>
    0.00 :	  3516a0272d:   jmp    3516a02710 <dl_main+0x100>
    0.00 :	  3516a0272f:   lea    0x186fb(%rip),%rdi        # 3516a1ae31 <intel_02_known+0x371>
    0.00 :	  3516a02736:   mov    %rax,%rsi
    0.00 :	  3516a02739:   mov    $0x9,%ecx
    0.00 :	  3516a0273e:   repz cmpsb %es:(%rdi),%ds:(%rsi)
    0.00 :	  3516a02740:   jne    3516a0274b <dl_main+0x13b>
    0.00 :	  3516a02742:   movl   $0x2,-0x38(%rbp)
    0.00 :	  3516a02749:   jmp    3516a026e8 <dl_main+0xd8>
    0.00 :	  3516a0274b:   lea    0x186e8(%rip),%rdi        # 3516a1ae3a <intel_02_known+0x37a>
    0.00 :	  3516a02752:   mov    %rax,%rsi
    0.00 :	  3516a02755:   mov    $0xf,%ecx
    0.00 :	  3516a0275a:   repz cmpsb %es:(%rdi),%ds:(%rsi)
    0.00 :	  3516a0275c:   jne    3516a02795 <dl_main+0x185>
    0.00 :	  3516a0275e:   cmp    $0x2,%r14d
    0.00 :	  3516a02762:   je     3516a02795 <dl_main+0x185>
    0.00 :	  3516a02764:   mov    0x10(%rbx),%rax
    0.00 :	  3516a02768:   mov    %rax,0x21d5e1(%rip)        # 3516c1fd50 <library_path>
    0.00 :	  3516a0276f:   mov    0x21d5f2(%rip),%r14d        # 3516c1fd68 <_dl_argc>
    0.00 :	  3516a02776:   addl   $0x2,0x21d5ef(%rip)        # 3516c1fd6c <_dl_skip_args>
    0.00 :	  3516a0277d:   addq   $0x10,0x21d403(%rip)        # 3516c1fb88 <_dl_argv>
    0.00 :	  3516a02785:   sub    $0x2,%r14d
    0.00 :	  3516a02789:   mov    %r14d,0x21d5d8(%rip)        # 3516c1fd68 <_dl_argc>
    0.00 :	  3516a02790:   jmpq   3516a026b3 <dl_main+0xa3>
    0.00 :	  3516a02795:   lea    0x186ad(%rip),%rdi        # 3516a1ae49 <intel_02_known+0x389>
    0.00 :	  3516a0279c:   mov    %rax,%rsi
    0.00 :	  3516a0279f:   mov    $0x10,%ecx
    0.00 :	  3516a027a4:   repz cmpsb %es:(%rdi),%ds:(%rsi)
    0.00 :	  3516a027a6:   jne    3516a027bb <dl_main+0x1ab>
    0.00 :	  3516a027a8:   cmp    $0x2,%r14d
    0.00 :	  3516a027ac:   je     3516a027bb <dl_main+0x1ab>
    0.00 :	  3516a027ae:   mov    0x10(%rbx),%rax
    0.00 :	  3516a027b2:   mov    %rax,0x21d447(%rip)        # 3516c1fc00 <_rtld_global_ro+0x60>
    0.00 :	  3516a027b9:   jmp    3516a0276f <dl_main+0x15f>
    0.00 :	  3516a027bb:   lea    0x18697(%rip),%rsi        # 3516a1ae59 <intel_02_known+0x399>
    0.00 :	  3516a027c2:   mov    %rax,%rdi
    0.00 :	  3516a027c5:   callq  3516a17390 <strcmp>
    0.00 :	  3516a027ca:   test   %eax,%eax
    0.00 :	  3516a027cc:   jne    3516a03d94 <dl_main+0x1784>
    0.00 :	  3516a027d2:   cmp    $0x2,%r14d
    0.00 :	  3516a027d6:   je     3516a03d94 <dl_main+0x1784>
    0.00 :	  3516a027dc:   mov    0x10(%rbx),%rax
    0.00 :	  3516a027e0:   mov    %rax,-0x60(%rbp)
    0.00 :	  3516a027e4:   nopl   0x0(%rax)
    0.00 :	  3516a027e8:   lea    0x186af(%rip),%rsi        # 3516a1ae9e <intel_02_known+0x3de>
    0.00 :	  3516a027ef:   mov    %r15,%rdi
    0.00 :	  3516a027f2:   callq  3516a15d60 <__strsep>
    0.00 :	  3516a027f7:   test   %rax,%rax
    0.00 :	  3516a027fa:   mov    %rax,%rbx
    0.00 :	  3516a027fd:   je     3516a0276f <dl_main+0x15f>
    0.00 :	  3516a02803:   cmpb   $0x0,(%rbx)
    0.00 :	  3516a02806:   je     3516a027e8 <dl_main+0x1d8>
    0.00 :	  3516a02808:   mov    0x21d5c2(%rip),%edx        # 3516c1fdd0 <__libc_enable_secure>
    0.00 :	  3516a0280e:   test   %edx,%edx
    0.00 :	  3516a02810:   jne    3516a03b35 <dl_main+0x1525>
    0.00 :	  3516a02816:   mov    $0x10,%edi
    0.00 :	  3516a0281b:   callq  3516a00ab0 <malloc@plt>
    0.00 :	  3516a02820:   mov    0x21e7b9(%rip),%rdx        # 3516c20fe0 <audit_list>
    0.00 :	  3516a02827:   mov    %rbx,(%rax)
    0.00 :	  3516a0282a:   test   %rdx,%rdx
    0.00 :	  3516a0282d:   je     3516a02844 <dl_main+0x234>
    0.00 :	  3516a0282f:   mov    0x8(%rdx),%rcx
    0.00 :	  3516a02833:   mov    %rcx,0x8(%rax)
    0.00 :	  3516a02837:   mov    %rax,0x8(%rdx)
    0.00 :	  3516a0283b:   mov    %rax,0x21e79e(%rip)        # 3516c20fe0 <audit_list>
    0.00 :	  3516a02842:   jmp    3516a027e8 <dl_main+0x1d8>
    0.00 :	  3516a02844:   mov    %rax,0x8(%rax)
    0.00 :	  3516a02848:   mov    %rax,0x21e791(%rip)        # 3516c20fe0 <audit_list>
    0.00 :	  3516a0284f:   jmp    3516a027e8 <dl_main+0x1d8>
    0.00 :	  3516a02851:   lea    0x1864c(%rip),%rsi        # 3516a1aea4 <intel_02_known+0x3e4>
    0.00 :	  3516a02858:   xor    %ecx,%ecx
    0.00 :	  3516a0285a:   xor    %r9d,%r9d
    0.00 :	  3516a0285d:   mov    $0x20000000,%r8d
    0.00 :	  3516a02863:   xor    %edx,%edx
    0.00 :	  3516a02865:   xor    %r14d,%r14d
    0.00 :	  3516a02868:   mov    %rsi,%rdi
    0.00 :	  3516a0286b:   callq  3516a0acb0 <_dl_new_object>
    0.00 :	  3516a02870:   movzwl -0xf0(%rbp),%r8d
    0.00 :	  3516a02878:   mov    %rax,%rbx
    0.00 :	  3516a0287b:   mov    %r12,0x2a0(%rax)
    0.00 :	  3516a02882:   xor    %esi,%esi
    0.00 :	  3516a02884:   mov    %rbx,%rdi
    0.00 :	  3516a02887:   mov    %r8w,0x2b0(%rax)
    0.00 :	  3516a0288f:   mov    0x0(%r13),%rax
    0.00 :	  3516a02893:   mov    %rax,0x2a8(%rbx)
    0.00 :	  3516a0289a:   callq  3516a0ac10 <_dl_add_to_namespace_list>
    0.00 :	  3516a0289f:   mov    -0xf0(%rbp),%ecx
    0.00 :	  3516a028a5:   imul   $0x38,%rcx,%rcx
    0.00 :	  3516a028a9:   addl   $0x1,0x310(%rbx)
    0.00 :	  3516a028b0:   xor    %r13d,%r13d
    0.00 :	  3516a028b3:   movq   $0x0,0x348(%rbx)
    0.00 :	  3516a028be:   movq   $0x0,0x350(%rbx)
    0.00 :	  3516a028c9:   movq   $0xffffffffffffffff,0x340(%rbx)
    0.00 :	  3516a028d4:   lea    (%r12,%rcx,1),%rcx
    0.00 :	  3516a028d8:   cmp    %rcx,%r12
    0.00 :	  3516a028db:   jae    3516a02ab2 <dl_main+0x4a2>
    0.00 :	  3516a028e1:   mov    %r12,%rax
    0.00 :	  3516a028e4:   jmp    3516a0290e <dl_main+0x2fe>
    0.00 :	  3516a028e6:   cmp    $0x2,%edx
    0.00 :	  3516a028e9:   je     3516a02aa2 <dl_main+0x492>
    0.00 :	  3516a028ef:   cmp    $0x3,%edx
    0.00 :	  3516a028f2:   je     3516a02a36 <dl_main+0x426>
    0.00 :	  3516a028f8:   cmp    $0x1,%edx
    0.00 :	  3516a028fb:   je     3516a029d0 <dl_main+0x3c0>
    0.00 :	  3516a02901:   add    $0x38,%rax
    0.00 :	  3516a02905:   cmp    %rcx,%rax
    0.00 :	  3516a02908:   jae    3516a02ab2 <dl_main+0x4a2>
    0.00 :	  3516a0290e:   mov    (%rax),%edx
    0.00 :	  3516a02910:   cmp    $0x6,%edx
    0.00 :	  3516a02913:   je     3516a029c1 <dl_main+0x3b1>
    0.00 :	  3516a02919:   jbe    3516a028e6 <dl_main+0x2d6>
    0.00 :	  3516a0291b:   cmp    $0x6474e551,%edx
    0.00 :	  3516a02921:   je     3516a029b3 <dl_main+0x3a3>
    0.00 :	  3516a02927:   cmp    $0x6474e552,%edx
    0.00 :	  3516a0292d:   je     3516a02998 <dl_main+0x388>
    0.00 :	  3516a0292f:   cmp    $0x7,%edx
    0.00 :	  3516a02932:   jne    3516a02901 <dl_main+0x2f1>
    0.00 :	  3516a02934:   mov    0x28(%rax),%rdx
    0.00 :	  3516a02938:   test   %rdx,%rdx
    0.00 :	  3516a0293b:   je     3516a02901 <dl_main+0x2f1>
    0.00 :	  3516a0293d:   mov    %rdx,0x428(%rbx)
    0.00 :	  3516a02944:   mov    0x30(%rax),%rdx
    0.00 :	  3516a02948:   mov    %rdx,0x430(%rbx)
    0.00 :	  3516a0294f:   mov    0x30(%rax),%rdx
    0.00 :	  3516a02953:   test   %rdx,%rdx
    0.00 :	  3516a02956:   jne    3516a03a87 <dl_main+0x1477>
    0.00 :	  3516a0295c:   movq   $0x0,0x438(%rbx)
    0.00 :	  3516a02967:   mov    0x20(%rax),%rdx
    0.00 :	  3516a0296b:   mov    %rdx,0x420(%rbx)
    0.00 :	  3516a02972:   mov    0x10(%rax),%rdx
    0.00 :	  3516a02976:   movq   $0x1,0x448(%rbx)
    0.00 :	  3516a02981:   movq   $0x1,0x21e594(%rip)        # 3516c20f20 <_rtld_global+0xf20>
    0.00 :	  3516a0298c:   mov    %rdx,0x418(%rbx)
    0.00 :	  3516a02993:   jmpq   3516a02901 <dl_main+0x2f1>
    0.00 :	  3516a02998:   mov    0x10(%rax),%rdx
    0.00 :	  3516a0299c:   mov    %rdx,0x450(%rbx)
    0.00 :	  3516a029a3:   mov    0x28(%rax),%rdx
    0.00 :	  3516a029a7:   mov    %rdx,0x458(%rbx)
    0.00 :	  3516a029ae:   jmpq   3516a02901 <dl_main+0x2f1>
    0.00 :	  3516a029b3:   mov    0x4(%rax),%edx
    0.00 :	  3516a029b6:   mov    %edx,0x21e55c(%rip)        # 3516c20f18 <_rtld_global+0xf18>
    0.00 :	  3516a029bc:   jmpq   3516a02901 <dl_main+0x2f1>
    0.00 :	  3516a029c1:   mov    %r12,%rdx
    0.00 :	  3516a029c4:   sub    0x10(%rax),%rdx
    0.00 :	  3516a029c8:   mov    %rdx,(%rbx)
    0.00 :	  3516a029cb:   jmpq   3516a02901 <dl_main+0x2f1>
    0.00 :	  3516a029d0:   mov    0x21d1e1(%rip),%rsi        # 3516c1fbb8 <_rtld_global_ro+0x18>
    0.00 :	  3516a029d7:   mov    0x10(%rax),%rdx
    0.00 :	  3516a029db:   mov    (%rbx),%rdi
    0.00 :	  3516a029de:   neg    %rsi
    0.00 :	  3516a029e1:   and    %rdx,%rsi
    0.00 :	  3516a029e4:   add    %rdi,%rsi
    0.00 :	  3516a029e7:   cmp    0x340(%rbx),%rsi
    0.00 :	  3516a029ee:   jae    3516a029fb <dl_main+0x3eb>
    0.00 :	  3516a029f0:   mov    %rsi,0x340(%rbx)
    0.00 :	  3516a029f7:   mov    0x10(%rax),%rdx
    0.00 :	  3516a029fb:   lea    (%rdi,%rdx,1),%rdx
    0.00 :	  3516a029ff:   add    0x28(%rax),%rdx
    0.00 :	  3516a02a03:   cmp    0x348(%rbx),%rdx
    0.00 :	  3516a02a0a:   jbe    3516a02a13 <dl_main+0x403>
    0.00 :	  3516a02a0c:   mov    %rdx,0x348(%rbx)
    0.00 :	  3516a02a13:   testb  $0x1,0x4(%rax)
    0.00 :	  3516a02a17:   je     3516a02901 <dl_main+0x2f1>
    0.00 :	  3516a02a1d:   cmp    0x350(%rbx),%rdx
    0.00 :	  3516a02a24:   jbe    3516a02901 <dl_main+0x2f1>
    0.00 :	  3516a02a2a:   mov    %rdx,0x350(%rbx)
    0.00 :	  3516a02a31:   jmpq   3516a02901 <dl_main+0x2f1>
    0.00 :	  3516a02a36:   lea    0x21e5b3(%rip),%rsi        # 3516c20ff0 <_dl_rtld_libname>
    0.00 :	  3516a02a3d:   mov    (%rbx),%rdx
    0.00 :	  3516a02a40:   add    0x10(%rax),%rdx
    0.00 :	  3516a02a44:   mov    %rsi,0x21df85(%rip)        # 3516c209d0 <_rtld_global+0x9d0>
    0.00 :	  3516a02a4b:   xor    %esi,%esi
    0.00 :	  3516a02a4d:   cmpq   $0x0,0x21df53(%rip)        # 3516c209a8 <_rtld_global+0x9a8>
    0.00 :	  3516a02a55:   mov    %rdx,0x21e594(%rip)        # 3516c20ff0 <_dl_rtld_libname>
    0.00 :	  3516a02a5c:   je     3516a02a75 <dl_main+0x465>
    0.00 :	  3516a02a5e:   mov    $0x1,%r13d
    0.00 :	  3516a02a64:   jmpq   3516a02901 <dl_main+0x2f1>
    0.00 :	  3516a02a69:   add    $0x1,%rdx
    0.00 :	  3516a02a6d:   cmp    $0x2f,%dil
    0.00 :	  3516a02a71:   cmove  %rdx,%rsi
    0.00 :	  3516a02a75:   movzbl (%rdx),%edi
    0.00 :	  3516a02a78:   test   %dil,%dil
    0.00 :	  3516a02a7b:   jne    3516a02a69 <dl_main+0x459>
    0.00 :	  3516a02a7d:   test   %rsi,%rsi
    0.00 :	  3516a02a80:   je     3516a02a5e <dl_main+0x44e>
    0.00 :	  3516a02a82:   lea    0x21e587(%rip),%rdi        # 3516c21010 <_dl_rtld_libname2>
    0.00 :	  3516a02a89:   mov    %rsi,0x21e580(%rip)        # 3516c21010 <_dl_rtld_libname2>
    0.00 :	  3516a02a90:   mov    $0x1,%r13d
    0.00 :	  3516a02a96:   mov    %rdi,0x21e55b(%rip)        # 3516c20ff8 <_dl_rtld_libname+0x8>
    0.00 :	  3516a02a9d:   jmpq   3516a02901 <dl_main+0x2f1>
    0.00 :	  3516a02aa2:   mov    (%rbx),%rdx
    0.00 :	  3516a02aa5:   add    0x10(%rax),%rdx
    0.00 :	  3516a02aa9:   mov    %rdx,0x10(%rbx)
    0.00 :	  3516a02aad:   jmpq   3516a02901 <dl_main+0x2f1>
    0.00 :	  3516a02ab2:   mov    0x418(%rbx),%rax
    0.00 :	  3516a02ab9:   test   %rax,%rax
    0.00 :	  3516a02abc:   je     3516a02ac8 <dl_main+0x4b8>
    0.00 :	  3516a02abe:   add    (%rbx),%rax
    0.00 :	  3516a02ac1:   mov    %rax,0x418(%rbx)
    0.00 :	  3516a02ac8:   cmpq   $0x0,0x348(%rbx)
    0.00 :	  3516a02ad0:   jne    3516a02add <dl_main+0x4cd>
    0.00 :	  3516a02ad2:   movq   $0xffffffffffffffff,0x348(%rbx)
    0.00 :	  3516a02add:   cmpq   $0x0,0x350(%rbx)
    0.00 :	  3516a02ae5:   jne    3516a02af2 <dl_main+0x4e2>
    0.00 :	  3516a02ae7:   movq   $0xffffffffffffffff,0x350(%rbx)
    0.00 :	  3516a02af2:   mov    0x21ded7(%rip),%rax        # 3516c209d0 <_rtld_global+0x9d0>
    0.00 :	  3516a02af9:   test   %rax,%rax
    0.00 :	  3516a02afc:   je     3516a03a20 <dl_main+0x1410>
    0.00 :	  3516a02b02:   mov    0x21df3f(%rip),%rdx        # 3516c20a48 <_rtld_global+0xa48>
    0.00 :	  3516a02b09:   test   %rdx,%rdx
    0.00 :	  3516a02b0c:   je     3516a02b5a <dl_main+0x54a>
    0.00 :	  3516a02b0e:   mov    0x21deeb(%rip),%rcx        # 3516c20a00 <_rtld_global+0xa00>
    0.00 :	  3516a02b15:   mov    (%rax),%rdi
    0.00 :	  3516a02b18:   mov    0x8(%rcx),%r12
    0.00 :	  3516a02b1c:   add    0x8(%rdx),%r12
    0.00 :	  3516a02b20:   mov    %r12,%rsi
    0.00 :	  3516a02b23:   callq  3516a17390 <strcmp>
    0.00 :	  3516a02b28:   test   %eax,%eax
    0.00 :	  3516a02b2a:   je     3516a02b5a <dl_main+0x54a>
    0.00 :	  3516a02b2c:   mov    0x21de9d(%rip),%rax        # 3516c209d0 <_rtld_global+0x9d0>
    0.00 :	  3516a02b33:   lea    0x21e486(%rip),%rdx        # 3516c20fc0 <newname.12912>
    0.00 :	  3516a02b3a:   movq   $0x0,0x21e483(%rip)        # 3516c20fc8 <newname.12912+0x8>
    0.00 :	  3516a02b45:   mov    %r12,0x21e474(%rip)        # 3516c20fc0 <newname.12912>
    0.00 :	  3516a02b4c:   movl   $0x1,0x21e47a(%rip)        # 3516c20fd0 <newname.12912+0x10>
    0.00 :	  3516a02b56:   mov    %rdx,0x8(%rax)
    0.00 :	  3516a02b5a:   test   %r14b,%r14b
    0.00 :	  3516a02b5d:   jne    3516a02cd0 <dl_main+0x6c0>
    0.00 :	  3516a02b63:   mov    0x10(%rbx),%rcx
    0.00 :	  3516a02b67:   test   %rcx,%rcx
    0.00 :	  3516a02b6a:   je     3516a02cc8 <dl_main+0x6b8>
    0.00 :	  3516a02b70:   mov    (%rcx),%rdx
    0.00 :	  3516a02b73:   lea    0x40(%rbx),%rax
    0.00 :	  3516a02b77:   test   %rdx,%rdx
    0.00 :	  3516a02b7a:   je     3516a02bde <dl_main+0x5ce>
    0.00 :	  3516a02b7c:   mov    $0x6fffffff,%r12d
    0.00 :	  3516a02b82:   mov    $0x6ffffdff,%r11d
    0.00 :	  3516a02b88:   mov    $0x6ffffeff,%r10d
    0.00 :	  3516a02b8e:   mov    $0x6fffff48,%r9d
    0.00 :	  3516a02b94:   mov    $0x6ffffe3c,%r8d
    0.00 :	  3516a02b9a:   mov    $0x70000029,%edi
    0.00 :	  3516a02b9f:   jmp    3516a02bc7 <dl_main+0x5b7>
    0.00 :	  3516a02ba1:   mov    %r12,%rsi
    0.00 :	  3516a02ba4:   sub    %rdx,%rsi
    0.00 :	  3516a02ba7:   cmp    $0xf,%rsi
    0.00 :	  3516a02bab:   ja     3516a03422 <dl_main+0xe12>
    0.00 :	  3516a02bb1:   mov    %rdi,%rsi
    0.00 :	  3516a02bb4:   sub    %rdx,%rsi
    0.00 :	  3516a02bb7:   mov    %rcx,(%rbx,%rsi,8)
    0.00 :	  3516a02bbb:   add    $0x10,%rcx
    0.00 :	  3516a02bbf:   mov    (%rcx),%rdx
    0.00 :	  3516a02bc2:   test   %rdx,%rdx
    0.00 :	  3516a02bc5:   je     3516a02bde <dl_main+0x5ce>
    0.00 :	  3516a02bc7:   cmp    $0x21,%rdx
    0.00 :	  3516a02bcb:   ja     3516a02ba1 <dl_main+0x591>
    0.00 :	  3516a02bcd:   mov    %rcx,0x40(%rbx,%rdx,8)
    0.00 :	  3516a02bd2:   add    $0x10,%rcx
    0.00 :	  3516a02bd6:   mov    (%rcx),%rdx
    0.00 :	  3516a02bd9:   test   %rdx,%rdx
    0.00 :	  3516a02bdc:   jne    3516a02bc7 <dl_main+0x5b7>
    0.00 :	  3516a02bde:   mov    (%rbx),%rdx
    0.00 :	  3516a02be1:   test   %rdx,%rdx
    0.00 :	  3516a02be4:   je     3516a02c57 <dl_main+0x647>
    0.00 :	  3516a02be6:   mov    0x20(%rax),%rcx
    0.00 :	  3516a02bea:   test   %rcx,%rcx
    0.00 :	  3516a02bed:   je     3516a02bf3 <dl_main+0x5e3>
    0.00 :	  3516a02bef:   add    %rdx,0x8(%rcx)
    0.00 :	  3516a02bf3:   mov    0x18(%rax),%rcx
    0.00 :	  3516a02bf7:   test   %rcx,%rcx
    0.00 :	  3516a02bfa:   je     3516a02c00 <dl_main+0x5f0>
    0.00 :	  3516a02bfc:   add    %rdx,0x8(%rcx)
    0.00 :	  3516a02c00:   mov    0x28(%rax),%rcx
    0.00 :	  3516a02c04:   test   %rcx,%rcx
    0.00 :	  3516a02c07:   je     3516a02c0d <dl_main+0x5fd>
    0.00 :	  3516a02c09:   add    %rdx,0x8(%rcx)
    0.00 :	  3516a02c0d:   mov    0x30(%rax),%rcx
    0.00 :	  3516a02c11:   test   %rcx,%rcx
    0.00 :	  3516a02c14:   je     3516a02c1a <dl_main+0x60a>
    0.00 :	  3516a02c16:   add    %rdx,0x8(%rcx)
    0.00 :	  3516a02c1a:   mov    0x38(%rax),%rcx
    0.00 :	  3516a02c1e:   test   %rcx,%rcx
    0.00 :	  3516a02c21:   je     3516a02c27 <dl_main+0x617>
    0.00 :	  3516a02c23:   add    %rdx,0x8(%rcx)
    0.00 :	  3516a02c27:   mov    0xb8(%rax),%rcx
    0.00 :	  3516a02c2e:   test   %rcx,%rcx
    0.00 :	  3516a02c31:   je     3516a02c37 <dl_main+0x627>
    0.00 :	  3516a02c33:   add    %rdx,0x8(%rcx)
    0.00 :	  3516a02c37:   mov    0x188(%rax),%rcx
    0.00 :	  3516a02c3e:   test   %rcx,%rcx
    0.00 :	  3516a02c41:   je     3516a02c47 <dl_main+0x637>
    0.00 :	  3516a02c43:   add    %rdx,0x8(%rcx)
    0.00 :	  3516a02c47:   mov    0x258(%rax),%rcx
    0.00 :	  3516a02c4e:   test   %rcx,%rcx
    0.00 :	  3516a02c51:   je     3516a02c57 <dl_main+0x647>
    0.00 :	  3516a02c53:   add    %rdx,0x8(%rcx)
    0.00 :	  3516a02c57:   mov    0xf0(%rax),%rdx
    0.00 :	  3516a02c5e:   test   %rdx,%rdx
    0.00 :	  3516a02c61:   je     3516a02c97 <dl_main+0x687>
    0.00 :	  3516a02c63:   mov    0x8(%rdx),%rsi
    0.00 :	  3516a02c67:   test   $0x2,%sil
    0.00 :	  3516a02c6b:   mov    %esi,%ecx
    0.00 :	  3516a02c6d:   mov    %esi,0x3d8(%rbx)
    0.00 :	  3516a02c73:   je     3516a02c7c <dl_main+0x66c>
    0.00 :	  3516a02c75:   mov    %rdx,0x80(%rax)
    0.00 :	  3516a02c7c:   test   $0x4,%cl
    0.00 :	  3516a02c7f:   je     3516a02c8e <dl_main+0x67e>
    0.00 :	  3516a02c81:   mov    0x3d8(%rbx),%ecx
    0.00 :	  3516a02c87:   mov    %rdx,0xb0(%rax)
    0.00 :	  3516a02c8e:   and    $0x8,%cl
    0.00 :	  3516a02c91:   jne    3516a03a14 <dl_main+0x1404>
    0.00 :	  3516a02c97:   mov    0x130(%rax),%rdx
    0.00 :	  3516a02c9e:   test   %rdx,%rdx
    0.00 :	  3516a02ca1:   je     3516a02cb6 <dl_main+0x6a6>
    0.00 :	  3516a02ca3:   mov    0x8(%rdx),%rcx
    0.00 :	  3516a02ca7:   mov    %ecx,0x3d4(%rbx)
    0.00 :	  3516a02cad:   and    $0x1,%cl
    0.00 :	  3516a02cb0:   jne    3516a03a08 <dl_main+0x13f8>
    0.00 :	  3516a02cb6:   cmpq   $0x0,0xe8(%rax)
    0.00 :	  3516a02cbe:   je     3516a02cc8 <dl_main+0x6b8>
    0.00 :	  3516a02cc0:   movq   $0x0,0x78(%rax)
    0.00 :	  3516a02cc8:   mov    %rbx,%rdi
    0.00 :	  3516a02ccb:   callq  3516a09160 <_dl_setup_hash>
    0.00 :	  3516a02cd0:   cmpl   $0x2,-0x38(%rbp)
    0.00 :	  3516a02cd4:   je     3516a03d5a <dl_main+0x174a>
    0.00 :	  3516a02cda:   cmpq   $0x0,0x21cf66(%rip)        # 3516c1fc48 <_rtld_global_ro+0xa8>
    0.00 :	  3516a02ce2:   lea    0x21dcc7(%rip),%rdi        # 3516c209b0 <_rtld_global+0x9b0>
    0.00 :	  3516a02ce9:   mov    %rdi,-0x108(%rbp)
    0.00 :	  3516a02cf0:   je     3516a03132 <dl_main+0xb22>
    0.00 :	  3516a02cf6:   lea    0x181a7(%rip),%rsi        # 3516a1aea4 <intel_02_known+0x3e4>
    0.00 :	  3516a02cfd:   xor    %r8d,%r8d
    0.00 :	  3516a02d00:   xor    %r9d,%r9d
    0.00 :	  3516a02d03:   xor    %ecx,%ecx
    0.00 :	  3516a02d05:   mov    $0x1,%edx
    0.00 :	  3516a02d0a:   mov    %rsi,%rdi
    0.00 :	  3516a02d0d:   callq  3516a0acb0 <_dl_new_object>
    0.00 :	  3516a02d12:   lea    0x21dc97(%rip),%r8        # 3516c209b0 <_rtld_global+0x9b0>
    0.00 :	  3516a02d19:   test   %rax,%rax
    0.00 :	  3516a02d1c:   mov    %rax,%r12
    0.00 :	  3516a02d1f:   mov    %r8,-0x108(%rbp)
    0.00 :	  3516a02d26:   je     3516a03132 <dl_main+0xb22>
    0.00 :	  3516a02d2c:   mov    0x21cf15(%rip),%rsi        # 3516c1fc48 <_rtld_global_ro+0xa8>
    0.00 :	  3516a02d33:   movzwl 0x38(%rsi),%edi
    0.00 :	  3516a02d37:   mov    %rsi,%rax
    0.00 :	  3516a02d3a:   add    0x20(%rsi),%rax
    0.00 :	  3516a02d3e:   test   %di,%di
    0.00 :	  3516a02d41:   mov    %rax,0x2a0(%r12)
    0.00 :	  3516a02d49:   mov    %di,0x2b0(%r12)
    0.00 :	  3516a02d52:   je     3516a02dbb <dl_main+0x7ab>
    0.00 :	  3516a02d54:   xor    %ecx,%ecx
    0.00 :	  3516a02d56:   xor    %edx,%edx
    0.00 :	  3516a02d58:   jmp    3516a02d7c <dl_main+0x76c>
    0.00 :	  3516a02d5a:   cmp    $0x1,%r8d
    0.00 :	  3516a02d5e:   je     3516a033cb <dl_main+0xdbb>
    0.00 :	  3516a02d64:   add    $0x1,%rdx
    0.00 :	  3516a02d68:   movzwl %di,%eax
    0.00 :	  3516a02d6b:   add    $0x38,%rcx
    0.00 :	  3516a02d6f:   cmp    %rdx,%rax
    0.00 :	  3516a02d72:   jbe    3516a02dbb <dl_main+0x7ab>
    0.00 :	  3516a02d74:   mov    0x2a0(%r12),%rax
    0.00 :	  3516a02d7c:   add    %rcx,%rax
    0.00 :	  3516a02d7f:   mov    (%rax),%r8d
    0.00 :	  3516a02d82:   cmp    $0x2,%r8d
    0.00 :	  3516a02d86:   jne    3516a02d5a <dl_main+0x74a>
    0.00 :	  3516a02d88:   mov    0x10(%rax),%rdi
    0.00 :	  3516a02d8c:   mov    0x28(%rax),%rax
    0.00 :	  3516a02d90:   add    $0x1,%rdx
    0.00 :	  3516a02d94:   add    $0x38,%rcx
    0.00 :	  3516a02d98:   mov    %rdi,0x10(%r12)
    0.00 :	  3516a02d9d:   movzwl 0x2b0(%r12),%edi
    0.00 :	  3516a02da6:   shr    $0x4,%rax
    0.00 :	  3516a02daa:   mov    %ax,0x2b2(%r12)
    0.00 :	  3516a02db3:   movzwl %di,%eax
    0.00 :	  3516a02db6:   cmp    %rdx,%rax
    0.00 :	  3516a02db9:   ja     3516a02d74 <dl_main+0x764>
    0.00 :	  3516a02dbb:   mov    %rsi,0x340(%r12)
    0.00 :	  3516a02dc3:   sub    (%r12),%rsi
    0.00 :	  3516a02dc7:   add    %rsi,0x348(%r12)
    0.00 :	  3516a02dcf:   add    %rsi,0x350(%r12)
    0.00 :	  3516a02dd7:   mov    %rsi,%rcx
    0.00 :	  3516a02dda:   add    0x10(%r12),%rcx
    0.00 :	  3516a02ddf:   mov    %rsi,(%r12)
    0.00 :	  3516a02de3:   test   %rcx,%rcx
    0.00 :	  3516a02de6:   mov    %rcx,0x10(%r12)
    0.00 :	  3516a02deb:   je     3516a03087 <dl_main+0xa77>
    0.00 :	  3516a02df1:   mov    (%rcx),%rdx
    0.00 :	  3516a02df4:   lea    0x40(%r12),%rax
    0.00 :	  3516a02df9:   test   %rdx,%rdx
    0.00 :	  3516a02dfc:   je     3516a02e64 <dl_main+0x854>
    0.00 :	  3516a02dfe:   mov    $0x6fffffff,%r13d
    0.00 :	  3516a02e04:   mov    $0x6ffffdff,%r11d
    0.00 :	  3516a02e0a:   mov    $0x6ffffeff,%r10d
    0.00 :	  3516a02e10:   mov    $0x6fffff48,%r9d
    0.00 :	  3516a02e16:   mov    $0x6ffffe3c,%r8d
    0.00 :	  3516a02e1c:   mov    $0x70000029,%edi
    0.00 :	  3516a02e21:   jmp    3516a02e49 <dl_main+0x839>
    0.00 :	  3516a02e23:   mov    %r13,%rsi
    0.00 :	  3516a02e26:   sub    %rdx,%rsi
    0.00 :	  3516a02e29:   cmp    $0xf,%rsi
    0.00 :	  3516a02e2d:   ja     3516a03438 <dl_main+0xe28>
    0.00 :	  3516a02e33:   mov    %rdi,%rsi
    0.00 :	  3516a02e36:   sub    %rdx,%rsi
    0.00 :	  3516a02e39:   mov    %rcx,(%r12,%rsi,8)
    0.00 :	  3516a02e3d:   add    $0x10,%rcx
    0.00 :	  3516a02e41:   mov    (%rcx),%rdx
    0.00 :	  3516a02e44:   test   %rdx,%rdx
    0.00 :	  3516a02e47:   je     3516a02e60 <dl_main+0x850>
    0.00 :	  3516a02e49:   cmp    $0x21,%rdx
    0.00 :	  3516a02e4d:   ja     3516a02e23 <dl_main+0x813>
    0.00 :	  3516a02e4f:   mov    %rcx,0x40(%r12,%rdx,8)
    0.00 :	  3516a02e54:   add    $0x10,%rcx
    0.00 :	  3516a02e58:   mov    (%rcx),%rdx
    0.00 :	  3516a02e5b:   test   %rdx,%rdx
    0.00 :	  3516a02e5e:   jne    3516a02e49 <dl_main+0x839>
    0.00 :	  3516a02e60:   mov    (%r12),%rsi
    0.00 :	  3516a02e64:   test   %rsi,%rsi
    0.00 :	  3516a02e67:   je     3516a0300a <dl_main+0x9fa>
    0.00 :	  3516a02e6d:   mov    0x20(%rax),%rdx
    0.00 :	  3516a02e71:   test   %rdx,%rdx
    0.00 :	  3516a02e74:   je     3516a03aa7 <dl_main+0x1497>
    0.00 :	  3516a02e7a:   mov    (%rdx),%rcx
    0.00 :	  3516a02e7d:   mov    0x8(%rdx),%rdx
    0.00 :	  3516a02e81:   lea    0x21ce38(%rip),%rdi        # 3516c1fcc0 <dyn_temp.12915>
    0.00 :	  3516a02e88:   mov    $0x70,%r8d
    0.00 :	  3516a02e8e:   mov    $0x30,%r9d
    0.00 :	  3516a02e94:   mov    $0x20,%r10d
    0.00 :	  3516a02e9a:   mov    $0x10,%r11d
    0.00 :	  3516a02ea0:   lea    (%rsi,%rdx,1),%rdx
    0.00 :	  3516a02ea4:   mov    %rcx,0x21ce15(%rip)        # 3516c1fcc0 <dyn_temp.12915>
    0.00 :	  3516a02eab:   mov    $0x50,%ecx
    0.00 :	  3516a02eb0:   mov    %rdx,0x21ce11(%rip)        # 3516c1fcc8 <dyn_temp.12915+0x8>
    0.00 :	  3516a02eb7:   mov    %rdi,0x20(%rax)
    0.00 :	  3516a02ebb:   mov    $0x60,%edx
    0.00 :	  3516a02ec0:   mov    $0x40,%edi
    0.00 :	  3516a02ec5:   mov    0x18(%rax),%r13
    0.00 :	  3516a02ec9:   test   %r13,%r13
    0.00 :	  3516a02ecc:   je     3516a03acd <dl_main+0x14bd>
    0.00 :	  3516a02ed2:   lea    0x21cde7(%rip),%r14        # 3516c1fcc0 <dyn_temp.12915>
    0.00 :	  3516a02ed9:   add    %r14,%r11
    0.00 :	  3516a02edc:   mov    0x0(%r13),%r14
    0.00 :	  3516a02ee0:   mov    0x8(%r13),%r13
    0.00 :	  3516a02ee4:   lea    (%rsi,%r13,1),%r13
    0.00 :	  3516a02ee8:   mov    %r14,(%r11)
    0.00 :	  3516a02eeb:   mov    %r13,0x8(%r11)
    0.00 :	  3516a02eef:   mov    %r11,0x18(%rax)
    0.00 :	  3516a02ef3:   mov    0x28(%rax),%r11
    0.00 :	  3516a02ef7:   test   %r11,%r11
    0.00 :	  3516a02efa:   je     3516a03ae4 <dl_main+0x14d4>
    0.00 :	  3516a02f00:   lea    0x21cdb9(%rip),%r13        # 3516c1fcc0 <dyn_temp.12915>
    0.00 :	  3516a02f07:   add    %r13,%r10
    0.00 :	  3516a02f0a:   mov    (%r11),%r13
    0.00 :	  3516a02f0d:   mov    0x8(%r11),%r11
    0.00 :	  3516a02f11:   lea    (%rsi,%r11,1),%r11
    0.00 :	  3516a02f15:   mov    %r13,(%r10)
    0.00 :	  3516a02f18:   mov    %r11,0x8(%r10)
    0.00 :	  3516a02f1c:   mov    %r10,0x28(%rax)
    0.00 :	  3516a02f20:   mov    0x30(%rax),%r10
    0.00 :	  3516a02f24:   test   %r10,%r10
    0.00 :	  3516a02f27:   je     3516a03af8 <dl_main+0x14e8>
    0.00 :	  3516a02f2d:   lea    0x21cd8c(%rip),%r11        # 3516c1fcc0 <dyn_temp.12915>
    0.00 :	  3516a02f34:   add    %r11,%r9
    0.00 :	  3516a02f37:   mov    (%r10),%r11
    0.00 :	  3516a02f3a:   mov    0x8(%r10),%r10
    0.00 :	  3516a02f3e:   lea    (%rsi,%r10,1),%r10
    0.00 :	  3516a02f42:   mov    %r11,(%r9)
    0.00 :	  3516a02f45:   mov    %r10,0x8(%r9)
    0.00 :	  3516a02f49:   mov    %r9,0x30(%rax)
    0.00 :	  3516a02f4d:   mov    0x38(%rax),%r9
    0.00 :	  3516a02f51:   test   %r9,%r9
    0.00 :	  3516a02f54:   je     3516a03b09 <dl_main+0x14f9>
    0.00 :	  3516a02f5a:   lea    0x21cd5f(%rip),%r10        # 3516c1fcc0 <dyn_temp.12915>
    0.00 :	  3516a02f61:   add    %r10,%rdi
    0.00 :	  3516a02f64:   mov    (%r9),%r10
    0.00 :	  3516a02f67:   mov    0x8(%r9),%r9
    0.00 :	  3516a02f6b:   lea    (%rsi,%r9,1),%r9
    0.00 :	  3516a02f6f:   mov    %r10,(%rdi)
    0.00 :	  3516a02f72:   mov    %r9,0x8(%rdi)
    0.00 :	  3516a02f76:   mov    %rdi,0x38(%rax)
    0.00 :	  3516a02f7a:   mov    0xb8(%rax),%rdi
    0.00 :	  3516a02f81:   test   %rdi,%rdi
    0.00 :	  3516a02f84:   je     3516a03b17 <dl_main+0x1507>
    0.00 :	  3516a02f8a:   lea    0x21cd2f(%rip),%r9        # 3516c1fcc0 <dyn_temp.12915>
    0.00 :	  3516a02f91:   add    %r9,%rcx
    0.00 :	  3516a02f94:   mov    (%rdi),%r9
    0.00 :	  3516a02f97:   mov    0x8(%rdi),%rdi
    0.00 :	  3516a02f9b:   lea    (%rsi,%rdi,1),%rdi
    0.00 :	  3516a02f9f:   mov    %r9,(%rcx)
    0.00 :	  3516a02fa2:   mov    %rdi,0x8(%rcx)
    0.00 :	  3516a02fa6:   mov    %rcx,0xb8(%rax)
    0.00 :	  3516a02fad:   mov    0x188(%rax),%rcx
    0.00 :	  3516a02fb4:   test   %rcx,%rcx
    0.00 :	  3516a02fb7:   je     3516a02fdf <dl_main+0x9cf>
    0.00 :	  3516a02fb9:   lea    0x21cd00(%rip),%rdi        # 3516c1fcc0 <dyn_temp.12915>
    0.00 :	  3516a02fc0:   add    %rdi,%rdx
    0.00 :	  3516a02fc3:   mov    (%rcx),%rdi
    0.00 :	  3516a02fc6:   mov    0x8(%rcx),%rcx
    0.00 :	  3516a02fca:   lea    (%rsi,%rcx,1),%rcx
    0.00 :	  3516a02fce:   mov    %rdi,(%rdx)
    0.00 :	  3516a02fd1:   mov    %rcx,0x8(%rdx)
    0.00 :	  3516a02fd5:   mov    %rdx,0x188(%rax)
    0.00 :	  3516a02fdc:   mov    %r8,%rdx
    0.00 :	  3516a02fdf:   mov    0x258(%rax),%rcx
    0.00 :	  3516a02fe6:   test   %rcx,%rcx
    0.00 :	  3516a02fe9:   je     3516a0300a <dl_main+0x9fa>
    0.00 :	  3516a02feb:   lea    0x21ccce(%rip),%rdi        # 3516c1fcc0 <dyn_temp.12915>
    0.00 :	  3516a02ff2:   add    0x8(%rcx),%rsi
    0.00 :	  3516a02ff6:   add    %rdi,%rdx
    0.00 :	  3516a02ff9:   mov    (%rcx),%rdi
    0.00 :	  3516a02ffc:   mov    %rsi,0x8(%rdx)
    0.00 :	  3516a03000:   mov    %rdx,0x258(%rax)
    0.00 :	  3516a03007:   mov    %rdi,(%rdx)
    0.00 :	  3516a0300a:   mov    0xf0(%rax),%rdx
    0.00 :	  3516a03011:   test   %rdx,%rdx
    0.00 :	  3516a03014:   je     3516a03051 <dl_main+0xa41>
    0.00 :	  3516a03016:   mov    0x8(%rdx),%rsi
    0.00 :	  3516a0301a:   test   $0x2,%sil
    0.00 :	  3516a0301e:   mov    %esi,%ecx
    0.00 :	  3516a03020:   mov    %esi,0x3d8(%r12)
    0.00 :	  3516a03028:   je     3516a03031 <dl_main+0xa21>
    0.00 :	  3516a0302a:   mov    %rdx,0x80(%rax)
    0.00 :	  3516a03031:   test   $0x4,%cl
    0.00 :	  3516a03034:   je     3516a03045 <dl_main+0xa35>
    0.00 :	  3516a03036:   mov    0x3d8(%r12),%ecx
    0.00 :	  3516a0303e:   mov    %rdx,0xb0(%rax)
    0.00 :	  3516a03045:   and    $0x8,%cl
    0.00 :	  3516a03048:   je     3516a03051 <dl_main+0xa41>
    0.00 :	  3516a0304a:   mov    %rdx,0xc0(%rax)
    0.00 :	  3516a03051:   mov    0x130(%rax),%rdx
    0.00 :	  3516a03058:   test   %rdx,%rdx
    0.00 :	  3516a0305b:   je     3516a03075 <dl_main+0xa65>
    0.00 :	  3516a0305d:   mov    0x8(%rdx),%rcx
    0.00 :	  3516a03061:   mov    %ecx,0x3d4(%r12)
    0.00 :	  3516a03069:   and    $0x1,%cl
    0.00 :	  3516a0306c:   je     3516a03075 <dl_main+0xa65>
    0.00 :	  3516a0306e:   mov    %rdx,0xc0(%rax)
    0.00 :	  3516a03075:   cmpq   $0x0,0xe8(%rax)
    0.00 :	  3516a0307d:   je     3516a03087 <dl_main+0xa77>
    0.00 :	  3516a0307f:   movq   $0x0,0x78(%rax)
    0.00 :	  3516a03087:   mov    %r12,%rdi
    0.00 :	  3516a0308a:   callq  3516a09160 <_dl_setup_hash>
    0.00 :	  3516a0308f:   mov    0x388(%r12),%rax
    0.00 :	  3516a03097:   lea    0x28(%r12),%rdx
    0.00 :	  3516a0309c:   orb    $0x4,0x314(%r12)
    0.00 :	  3516a030a5:   movl   $0x1,0x8(%rax)
    0.00 :	  3516a030ac:   mov    %rdx,(%rax)
    0.00 :	  3516a030af:   mov    0xb0(%r12),%rax
    0.00 :	  3516a030b7:   test   %rax,%rax
    0.00 :	  3516a030ba:   je     3516a03102 <dl_main+0xaf2>
    0.00 :	  3516a030bc:   mov    0x68(%r12),%rdx
    0.00 :	  3516a030c1:   or     $0xffffffffffffffff,%rcx
    0.00 :	  3516a030c5:   mov    0x8(%rdx),%r13
    0.00 :	  3516a030c9:   add    0x8(%rax),%r13
    0.00 :	  3516a030cd:   xor    %eax,%eax
    0.00 :	  3516a030cf:   mov    %r13,%rdi
    0.00 :	  3516a030d2:   repnz scas %es:(%rdi),%al
    0.00 :	  3516a030d4:   not    %rcx
    0.00 :	  3516a030d7:   lea    -0x1(%rcx),%r15
    0.00 :	  3516a030db:   mov    %r15,%rdi
    0.00 :	  3516a030de:   callq  3516a00ab0 <malloc@plt>
    0.00 :	  3516a030e3:   test   %rax,%rax
    0.00 :	  3516a030e6:   je     3516a03450 <dl_main+0xe40>
    0.00 :	  3516a030ec:   mov    0x38(%r12),%r14
    0.00 :	  3516a030f1:   mov    %r15,%rdx
    0.00 :	  3516a030f4:   mov    %r13,%rsi
    0.00 :	  3516a030f7:   mov    %rax,%rdi
    0.00 :	  3516a030fa:   callq  3516a184b0 <memcpy>
    0.00 :	  3516a030ff:   mov    %rax,(%r14)
    0.00 :	  3516a03102:   xor    %esi,%esi
    0.00 :	  3516a03104:   mov    %r12,%rdi
    0.00 :	  3516a03107:   callq  3516a0ac10 <_dl_add_to_namespace_list>
    0.00 :	  3516a0310c:   lea    0x21d885(%rip),%r8        # 3516c20998 <_rtld_global+0x998>
    0.00 :	  3516a03113:   lea    0x18(%r12),%rax
    0.00 :	  3516a03118:   mov    %r12,0x21d891(%rip)        # 3516c209b0 <_rtld_global+0x9b0>
    0.00 :	  3516a0311f:   mov    %r8,0x20(%r12)
    0.00 :	  3516a03124:   mov    %rax,-0x108(%rbp)
    0.00 :	  3516a0312b:   mov    %r12,0x21cb1e(%rip)        # 3516c1fc50 <_rtld_global_ro+0xb0>
    0.00 :	  3516a03132:   callq  3516a14de0 <_dl_discover_osversion>
    0.00 :	  3516a03137:   test   %eax,%eax
    0.00 :	  3516a03139:   js     3516a03d42 <dl_main+0x1732>
    0.00 :	  3516a0313f:   mov    0x21ca5f(%rip),%edx        # 3516c1fba4 <_rtld_global_ro+0x4>
    0.00 :	  3516a03145:   test   %edx,%edx
    0.00 :	  3516a03147:   jne    3516a04a4a <dl_main+0x243a>
    0.00 :	  3516a0314d:   mov    %eax,0x21ca51(%rip)        # 3516c1fba4 <_rtld_global_ro+0x4>
    0.00 :	  3516a03153:   cmp    $0x20611,%eax
    0.00 :	  3516a03158:   jle    3516a03d4e <dl_main+0x173e>
    0.00 :	  3516a0315e:   mov    0x21cbeb(%rip),%rdi        # 3516c1fd50 <library_path>
    0.00 :	  3516a03165:   callq  3516a06500 <_dl_init_paths>
    0.00 :	  3516a0316a:   mov    0x21d827(%rip),%rdi        # 3516c20998 <_rtld_global+0x998>
    0.00 :	  3516a03171:   xor    %esi,%esi
    0.00 :	  3516a03173:   callq  3516a0ed30 <_dl_debug_initialize>
    0.00 :	  3516a03178:   cmpq   $0x0,0x21d820(%rip)        # 3516c209a0 <_rtld_global+0x9a0>
    0.00 :	  3516a03180:   mov    %rax,-0xf0(%rbp)
    0.00 :	  3516a03187:   movl   $0x0,0x18(%rax)
    0.00 :	  3516a0318e:   je     3516a03a4d <dl_main+0x143d>
    0.00 :	  3516a03194:   movzbl 0x21db11(%rip),%eax        # 3516c20cac <_rtld_global+0xcac>
    0.00 :	  3516a0319b:   addl   $0x1,0x21ce66(%rip)        # 3516c20008 <_rtld_global+0x8>
    0.00 :	  3516a031a2:   lea    0x21d7ef(%rip),%rdx        # 3516c20998 <_rtld_global+0x998>
    0.00 :	  3516a031a9:   addq   $0x1,0x21d7a7(%rip)        # 3516c20958 <_rtld_global+0x958>
    0.00 :	  3516a031b1:   mov    %rbx,0x21d800(%rip)        # 3516c209b8 <_rtld_global+0x9b8>
    0.00 :	  3516a031b8:   and    $0xfffffffffffffffc,%eax
    0.00 :	  3516a031bb:   or     $0x1,%eax
    0.00 :	  3516a031be:   cmpq   $0xfffffffffffffffe,0x21ca4a(%rip)        # 3516c1fc10 <_rtld_global_ro+0x70>
    0.00 :	  3516a031c6:   mov    %al,0x21dae0(%rip)        # 3516c20cac <_rtld_global+0xcac>
    0.00 :	  3516a031cc:   mov    %rdx,0x18(%rbx)
    0.00 :	  3516a031d0:   je     3516a03a74 <dl_main+0x1464>
    0.00 :	  3516a031d6:   mov    0x21dafb(%rip),%rax        # 3516c20cd8 <_rtld_global+0xcd8>
    0.00 :	  3516a031dd:   movzwl 0x38(%rax),%ecx
    0.00 :	  3516a031e1:   mov    %rax,%rdx
    0.00 :	  3516a031e4:   add    0x20(%rax),%rdx
    0.00 :	  3516a031e8:   mov    %cx,0x21da59(%rip)        # 3516c20c48 <_rtld_global+0xc48>
    0.00 :	  3516a031ef:   movzwl 0x38(%rax),%eax
    0.00 :	  3516a031f3:   mov    %rdx,0x21da3e(%rip)        # 3516c20c38 <_rtld_global+0xc38>
    0.00 :	  3516a031fa:   imul   $0x38,%rax,%rcx
    0.00 :	  3516a031fe:   lea    -0x38(%rdx,%rcx,1),%rdx
    0.00 :	  3516a03203:   test   %rax,%rax
    0.00 :	  3516a03206:   je     3516a03233 <dl_main+0xc23>
    0.00 :	  3516a03208:   mov    (%rdx),%esi
    0.00 :	  3516a0320a:   sub    $0x1,%rax
    0.00 :	  3516a0320e:   mov    %rdx,%rcx
    0.00 :	  3516a03211:   sub    $0x38,%rdx
    0.00 :	  3516a03215:   cmp    $0x6474e552,%esi
    0.00 :	  3516a0321b:   jne    3516a03203 <dl_main+0xbf3>
    0.00 :	  3516a0321d:   mov    0x10(%rcx),%rax
    0.00 :	  3516a03221:   mov    %rax,0x21dbc0(%rip)        # 3516c20de8 <_rtld_global+0xde8>
    0.00 :	  3516a03228:   mov    0x28(%rcx),%rax
    0.00 :	  3516a0322c:   mov    %rax,0x21dbbd(%rip)        # 3516c20df0 <_rtld_global+0xdf0>
    0.00 :	  3516a03233:   cmpq   $0x0,0x21db85(%rip)        # 3516c20dc0 <_rtld_global+0xdc0>
    0.00 :	  3516a0323b:   jne    3516a03a63 <dl_main+0x1453>
    0.00 :	  3516a03241:   mov    0x21dd98(%rip),%rax        # 3516c20fe0 <audit_list>
    0.00 :	  3516a03248:   xor    %r15d,%r15d
    0.00 :	  3516a0324b:   test   %rax,%rax
    0.00 :	  3516a0324e:   jne    3516a04310 <dl_main+0x1d00>
    0.00 :	  3516a03254:   mov    0xe8(%rbx),%rax
    0.00 :	  3516a0325b:   test   %rax,%rax
    0.00 :	  3516a0325e:   je     3516a0326b <dl_main+0xc5b>
    0.00 :	  3516a03260:   mov    -0xf0(%rbp),%rcx
    0.00 :	  3516a03267:   mov    %rcx,0x8(%rax)
    0.00 :	  3516a0326b:   mov    0x21d80e(%rip),%rax        # 3516c20a80 <_rtld_global+0xa80>
    0.00 :	  3516a03272:   test   %rax,%rax
    0.00 :	  3516a03275:   je     3516a03282 <dl_main+0xc72>
    0.00 :	  3516a03277:   mov    -0xf0(%rbp),%rsi
    0.00 :	  3516a0327e:   mov    %rsi,0x8(%rax)
    0.00 :	  3516a03282:   mov    -0xf0(%rbp),%rdi
    0.00 :	  3516a03289:   movl   $0x1,0x18(%rdi)
    0.00 :	  3516a03290:   callq  3516a0edc0 <_dl_debug_state>
    0.00 :	  3516a03295:   nop
    0.00 :	  3516a03296:   mov    0x21ca14(%rip),%eax        # 3516c1fcb0 <_rtld_global_ro+0x110>
    0.00 :	  3516a0329c:   test   %eax,%eax
    0.00 :	  3516a0329e:   jne    3516a04b84 <dl_main+0x2574>
    0.00 :	  3516a032a4:   mov    0x21caad(%rip),%rsi        # 3516c1fd58 <preloadlist>
    0.00 :	  3516a032ab:   xor    %r13d,%r13d
    0.00 :	  3516a032ae:   test   %rsi,%rsi
    0.00 :	  3516a032b1:   jne    3516a03b8b <dl_main+0x157b>
    0.00 :	  3516a032b7:   lea    0x19842(%rip),%rdi        # 3516a1cb00 <preload_file.12989>
    0.00 :	  3516a032be:   mov    $0x4,%esi
    0.00 :	  3516a032c3:   callq  3516a16da0 <__access>
    0.00 :	  3516a032c8:   test   %eax,%eax
    0.00 :	  3516a032ca:   je     3516a03c10 <dl_main+0x1600>
    0.00 :	  3516a032d0:   mov    -0x108(%rbp),%rcx
    0.00 :	  3516a032d7:   xor    %esi,%esi
    0.00 :	  3516a032d9:   mov    (%rcx),%rdx
    0.00 :	  3516a032dc:   test   %rdx,%rdx
    0.00 :	  3516a032df:   jne    3516a03b50 <dl_main+0x1540>
    0.00 :	  3516a032e5:   rdtsc  
    0.00 :	  3516a032e7:   xor    %ecx,%ecx
    0.00 :	  3516a032e9:   cmpl   $0x3,-0x38(%rbp)
    0.00 :	  3516a032ed:   mov    %edx,%r12d
    0.00 :	  3516a032f0:   mov    %rbx,%rdi
    0.00 :	  3516a032f3:   mov    %r13d,%edx
    0.00 :	  3516a032f6:   mov    %eax,%r14d
    0.00 :	  3516a032f9:   sete   %cl
    0.00 :	  3516a032fc:   xor    %r8d,%r8d
    0.00 :	  3516a032ff:   callq  3516a0c760 <_dl_map_object_deps>
    0.00 :	  3516a03304:   rdtsc  
    0.00 :	  3516a03306:   shl    $0x20,%rdx
    0.00 :	  3516a0330a:   mov    %eax,%eax
    0.00 :	  3516a0330c:   shl    $0x20,%r12
    0.00 :	  3516a03310:   or     %rax,%rdx
    0.00 :	  3516a03313:   add    0x21ca26(%rip),%rdx        # 3516c1fd40 <load_time>
    0.00 :	  3516a0331a:   mov    0x2c0(%rbx),%eax
    0.00 :	  3516a03320:   mov    %r14d,%r14d
    0.00 :	  3516a03323:   or     %r14,%r12
    0.00 :	  3516a03326:   mov    %eax,%ecx
    0.00 :	  3516a03328:   sub    %r12,%rdx
    0.00 :	  3516a0332b:   test   %eax,%eax
    0.00 :	  3516a0332d:   mov    %rdx,0x21ca0c(%rip)        # 3516c1fd40 <load_time>
    0.00 :	  3516a03334:   je     3516a03357 <dl_main+0xd47>
    0.00 :	  3516a03336:   mov    0x2b8(%rbx),%rcx
    0.00 :	  3516a0333d:   sub    $0x1,%eax
    0.00 :	  3516a03340:   mov    %eax,%edx
    0.00 :	  3516a03342:   mov    (%rcx,%rdx,8),%rdx
    0.00 :	  3516a03346:   orb    $0x10,0x314(%rdx)
    0.00 :	  3516a0334d:   test   %eax,%eax
    0.00 :	  3516a0334f:   jne    3516a0333d <dl_main+0xd2d>
    0.00 :	  3516a03351:   mov    0x2c0(%rbx),%ecx
    0.00 :	  3516a03357:   mov    0x21d652(%rip),%rax        # 3516c209b0 <_rtld_global+0x9b0>
    0.00 :	  3516a0335e:   mov    0x21d653(%rip),%rdx        # 3516c209b8 <_rtld_global+0x9b8>
    0.00 :	  3516a03365:   mov    %rax,0x18(%rdx)
    0.00 :	  3516a03369:   mov    0x21d640(%rip),%rax        # 3516c209b0 <_rtld_global+0x9b0>
    0.00 :	  3516a03370:   test   %rax,%rax
    0.00 :	  3516a03373:   je     3516a03379 <dl_main+0xd69>
    0.00 :	  3516a03375:   mov    %rdx,0x20(%rax)
    0.00 :	  3516a03379:   cmp    $0x1,%ecx
    0.00 :	  3516a0337c:   jbe    3516a033bf <dl_main+0xdaf>
    0.00 :	  3516a0337e:   mov    0x2b8(%rbx),%rdi
    0.00 :	  3516a03385:   lea    0x21d60c(%rip),%rsi        # 3516c20998 <_rtld_global+0x998>
    0.00 :	  3516a0338c:   cmp    %rsi,0x8(%rdi)
    0.00 :	  3516a03390:   je     3516a03a9b <dl_main+0x148b>
    0.00 :	  3516a03396:   mov    %rdi,%rdx
    0.00 :	  3516a03399:   mov    $0x1,%eax
    0.00 :	  3516a0339e:   jmp    3516a033b8 <dl_main+0xda8>
    0.00 :	  3516a033a0:   mov    0x10(%rdx),%rsi
    0.00 :	  3516a033a4:   lea    0x21d5ed(%rip),%r8        # 3516c20998 <_rtld_global+0x998>
    0.00 :	  3516a033ab:   add    $0x8,%rdx
    0.00 :	  3516a033af:   cmp    %r8,%rsi
    0.00 :	  3516a033b2:   je     3516a034d8 <dl_main+0xec8>
    0.00 :	  3516a033b8:   add    $0x1,%eax
    0.00 :	  3516a033bb:   cmp    %ecx,%eax
    0.00 :	  3516a033bd:   jb     3516a033a0 <dl_main+0xd90>
    0.00 :	  3516a033bf:   movb   $0x0,-0xf0(%rbp)
    0.00 :	  3516a033c6:   jmpq   3516a03549 <dl_main+0xf39>
    0.00 :	  3516a033cb:   cmpq   $0x0,(%r12)
    0.00 :	  3516a033d0:   jne    3516a033da <dl_main+0xdca>
    0.00 :	  3516a033d2:   mov    0x10(%rax),%rdi
    0.00 :	  3516a033d6:   mov    %rdi,(%r12)
    0.00 :	  3516a033da:   mov    0x28(%rax),%rdi
    0.00 :	  3516a033de:   add    0x10(%rax),%rdi
    0.00 :	  3516a033e2:   cmp    0x348(%r12),%rdi
    0.00 :	  3516a033ea:   jb     3516a033f4 <dl_main+0xde4>
    0.00 :	  3516a033ec:   mov    %rdi,0x348(%r12)
    0.00 :	  3516a033f4:   testb  $0x1,0x4(%rax)
    0.00 :	  3516a033f8:   je     3516a03414 <dl_main+0xe04>
    0.00 :	  3516a033fa:   mov    0x28(%rax),%rdi
    0.00 :	  3516a033fe:   add    0x10(%rax),%rdi
    0.00 :	  3516a03402:   cmp    0x350(%r12),%rdi
    0.00 :	  3516a0340a:   jb     3516a03414 <dl_main+0xe04>
    0.00 :	  3516a0340c:   mov    %rdi,0x350(%r12)
    0.00 :	  3516a03414:   movzwl 0x2b0(%r12),%edi
    0.00 :	  3516a0341d:   jmpq   3516a02d64 <dl_main+0x754>
    0.00 :	  3516a03422:   lea    (%rdx,%rdx,1),%esi
    0.00 :	  3516a03425:   sar    %esi
    0.00 :	  3516a03427:   cmp    $0xfffffffffffffffc,%esi
    0.00 :	  3516a0342a:   jbe    3516a0348a <dl_main+0xe7a>
    0.00 :	  3516a0342c:   mov    %esi,%edx
    0.00 :	  3516a0342e:   not    %edx
    0.00 :	  3516a03430:   add    $0x32,%edx
    0.00 :	  3516a03433:   jmpq   3516a02bcd <dl_main+0x5bd>
    0.00 :	  3516a03438:   lea    (%rdx,%rdx,1),%esi
    0.00 :	  3516a0343b:   sar    %esi
    0.00 :	  3516a0343d:   cmp    $0xfffffffffffffffc,%esi
    0.00 :	  3516a03440:   jbe    3516a0346f <dl_main+0xe5f>
    0.00 :	  3516a03442:   mov    %esi,%edx
    0.00 :	  3516a03444:   not    %edx
    0.00 :	  3516a03446:   add    $0x32,%edx
    0.00 :	  3516a03449:   jmpq   3516a02e4f <dl_main+0x83f>
    0.00 :	  3516a0344e:   xchg   %ax,%ax
    0.00 :	  3516a03450:   lea    0x17a0a(%rip),%rsi        # 3516a1ae61 <intel_02_known+0x3a1>
    0.00 :	  3516a03457:   mov    $0x2,%edi
    0.00 :	  3516a0345c:   xor    %eax,%eax
    0.00 :	  3516a0345e:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a03463:   mov    $0x7f,%edi
    0.00 :	  3516a03468:   callq  3516a16fd0 <_Exit>
    0.00 :	  3516a0346d:   jmp    3516a03450 <dl_main+0xe40>
    0.00 :	  3516a0346f:   mov    %r11,%rsi
    0.00 :	  3516a03472:   sub    %rdx,%rsi
    0.00 :	  3516a03475:   cmp    $0xb,%rsi
    0.00 :	  3516a03479:   ja     3516a034b9 <dl_main+0xea9>
    0.00 :	  3516a0347b:   mov    %r8,%rsi
    0.00 :	  3516a0347e:   sub    %rdx,%rsi
    0.00 :	  3516a03481:   mov    %rcx,(%r12,%rsi,8)
    0.00 :	  3516a03485:   jmpq   3516a02e3d <dl_main+0x82d>
    0.00 :	  3516a0348a:   mov    %r11,%rsi
    0.00 :	  3516a0348d:   sub    %rdx,%rsi
    0.00 :	  3516a03490:   cmp    $0xb,%rsi
    0.00 :	  3516a03494:   jbe    3516a039f9 <dl_main+0x13e9>
    0.00 :	  3516a0349a:   mov    %r10,%rsi
    0.00 :	  3516a0349d:   sub    %rdx,%rsi
    0.00 :	  3516a034a0:   cmp    $0xa,%rsi
    0.00 :	  3516a034a4:   ja     3516a02bbb <dl_main+0x5ab>
    0.00 :	  3516a034aa:   mov    %r9,%rsi
    0.00 :	  3516a034ad:   sub    %rdx,%rsi
    0.00 :	  3516a034b0:   mov    %rcx,(%rbx,%rsi,8)
    0.00 :	  3516a034b4:   jmpq   3516a02bbb <dl_main+0x5ab>
    0.00 :	  3516a034b9:   mov    %r10,%rsi
    0.00 :	  3516a034bc:   sub    %rdx,%rsi
    0.00 :	  3516a034bf:   cmp    $0xa,%rsi
    0.00 :	  3516a034c3:   ja     3516a02e3d <dl_main+0x82d>
    0.00 :	  3516a034c9:   mov    %r9,%rsi
    0.00 :	  3516a034cc:   sub    %rdx,%rsi
    0.00 :	  3516a034cf:   mov    %rcx,(%r12,%rsi,8)
    0.00 :	  3516a034d3:   jmpq   3516a02e3d <dl_main+0x82d>
    0.00 :	  3516a034d8:   lea    -0x1(%rax),%edx
    0.00 :	  3516a034db:   shl    $0x3,%rdx
    0.00 :	  3516a034df:   cmpl   $0x0,-0x38(%rbp)
  100.00 :	  3516a034e3:   mov    (%rdi,%rdx,1),%rdx
    0.00 :	  3516a034e7:   mov    %rdx,0x21d4ca(%rip)        # 3516c209b8 <_rtld_global+0x9b8>
    0.00 :	  3516a034ee:   jne    3516a03b22 <dl_main+0x1512>
    0.00 :	  3516a034f4:   add    $0x1,%eax
    0.00 :	  3516a034f7:   xor    %ecx,%ecx
    0.00 :	  3516a034f9:   cmp    0x2c0(%rbx),%eax
    0.00 :	  3516a034ff:   jae    3516a03507 <dl_main+0xef7>
    0.00 :	  3516a03501:   mov    %eax,%eax
    0.00 :	  3516a03503:   mov    (%rdi,%rax,8),%rcx
    0.00 :	  3516a03507:   mov    0x21c742(%rip),%rax        # 3516c1fc50 <_rtld_global_ro+0xb0>
    0.00 :	  3516a0350e:   mov    %rcx,0x21d49b(%rip)        # 3516c209b0 <_rtld_global+0x9b0>
    0.00 :	  3516a03515:   test   %rax,%rax
    0.00 :	  3516a03518:   je     3516a03524 <dl_main+0xf14>
    0.00 :	  3516a0351a:   cmp    0x18(%rdx),%rax
    0.00 :	  3516a0351e:   je     3516a0472c <dl_main+0x211c>
    0.00 :	  3516a03524:   mov    %rdx,%rax
    0.00 :	  3516a03527:   lea    0x21d46a(%rip),%rdx        # 3516c20998 <_rtld_global+0x998>
    0.00 :	  3516a0352e:   movb   $0x1,-0xf0(%rbp)
    0.00 :	  3516a03535:   mov    %rdx,0x18(%rax)
    0.00 :	  3516a03539:   mov    0x21d470(%rip),%rax        # 3516c209b0 <_rtld_global+0x9b0>
    0.00 :	  3516a03540:   test   %rax,%rax
    0.00 :	  3516a03543:   je     3516a03549 <dl_main+0xf39>
    0.00 :	  3516a03545:   mov    %rdx,0x20(%rax)
    0.00 :	  3516a03549:   xor    %eax,%eax
    0.00 :	  3516a0354b:   cmpl   $0x0,-0x38(%rbp)
    0.00 :	  3516a0354f:   lea    -0xf86(%rip),%rsi        # 3516a025d0 <version_check_doit>
    0.00 :	  3516a03556:   lea    -0x50(%rbp),%rdx
    0.00 :	  3516a0355a:   lea    -0x1ee1(%rip),%rdi        # 3516a01680 <print_missing_version>
    0.00 :	  3516a03561:   sete   %al
    0.00 :	  3516a03564:   mov    %eax,-0x50(%rbp)
    0.00 :	  3516a03567:   xor    %eax,%eax
    0.00 :	  3516a03569:   cmpl   $0x3,-0x38(%rbp)
    0.00 :	  3516a0356d:   sete   %al
    0.00 :	  3516a03570:   mov    %eax,-0x4c(%rbp)
    0.00 :	  3516a03573:   callq  3516a0e0b0 <_dl_receive_error>
    0.00 :	  3516a03578:   movzbl 0x21dab1(%rip),%esi        # 3516c21030 <tls_init_tp_called>
    0.00 :	  3516a0357f:   test   %r15,%r15
    0.00 :	  3516a03582:   mov    %sil,-0xf8(%rbp)
    0.00 :	  3516a03589:   je     3516a04741 <dl_main+0x2131>
    0.00 :	  3516a0358f:   cmpq   $0x0,0x21da49(%rip)        # 3516c20fe0 <audit_list>
    0.00 :	  3516a03597:   jne    3516a035ee <dl_main+0xfde>
    0.00 :	  3516a03599:   mov    0x21c840(%rip),%rsi        # 3516c1fde0 <_dl_random>
    0.00 :	  3516a035a0:   test   %rsi,%rsi
    0.00 :	  3516a035a3:   je     3516a0474e <dl_main+0x213e>
    0.00 :	  3516a035a9:   mov    (%rsi),%rcx
    0.00 :	  3516a035ac:   mov    %rcx,-0x68(%rbp)
    0.00 :	  3516a035b0:   mov    %rcx,%fs:0x28
    0.00 :	  3516a035b9:   cmpl   $0x0,0x21c6f4(%rip)        # 3516c1fcb4 <_rtld_global_ro+0x114>
    0.00 :	  3516a035c0:   je     3516a035e3 <dl_main+0xfd3>
    0.00 :	  3516a035c2:   test   %rsi,%rsi
    0.00 :	  3516a035c5:   je     3516a039e2 <dl_main+0x13d2>
    0.00 :	  3516a035cb:   mov    0x8(%rsi),%rdx
    0.00 :	  3516a035cf:   mov    %rdx,-0x68(%rbp)
    0.00 :	  3516a035d3:   mov    %rdx,%fs:0x30
    0.00 :	  3516a035dc:   mov    %rdx,0x21c78d(%rip)        # 3516c1fd70 <__pointer_chk_guard_local>
    0.00 :	  3516a035e3:   movq   $0x0,0x21c7f2(%rip)        # 3516c1fde0 <_dl_random>
    0.00 :	  3516a035ee:   cmpl   $0x0,-0x38(%rbp)
    0.00 :	  3516a035f2:   jne    3516a03f38 <dl_main+0x1928>
    0.00 :	  3516a035f8:   mov    0x278(%rbx),%rax
    0.00 :	  3516a035ff:   test   %rax,%rax
    0.00 :	  3516a03602:   je     3516a037d3 <dl_main+0x11c3>
    0.00 :	  3516a03608:   cmpq   $0x0,0x21c608(%rip)        # 3516c1fc18 <_rtld_global_ro+0x78>
    0.00 :	  3516a03610:   jne    3516a037d3 <dl_main+0x11c3>
    0.00 :	  3516a03616:   cmpl   $0x0,0x21c5c7(%rip)        # 3516c1fbe4 <_rtld_global_ro+0x44>
    0.00 :	  3516a0361d:   jne    3516a037d3 <dl_main+0x11c3>
    0.00 :	  3516a03623:   mov    0x68(%rbx),%rdx
    0.00 :	  3516a03627:   mov    0x2b8(%rbx),%r13
    0.00 :	  3516a0362e:   mov    0x8(%rdx),%rdx
    0.00 :	  3516a03632:   mov    %rdx,-0xe8(%rbp)
    0.00 :	  3516a03639:   mov    0x8(%rax),%r12
    0.00 :	  3516a0363d:   mov    0x228(%rbx),%rax
    0.00 :	  3516a03644:   mov    %r12,%rdx
    0.00 :	  3516a03647:   add    0x8(%rax),%rdx
    0.00 :	  3516a0364b:   mov    0x2c0(%rbx),%eax
    0.00 :	  3516a03651:   lea    0x0(%r13,%rax,8),%r14
    0.00 :	  3516a03656:   cmp    %r14,%r13
    0.00 :	  3516a03659:   jae    3516a036ed <dl_main+0x10dd>
    0.00 :	  3516a0365f:   cmp    %rdx,%r12
    0.00 :	  3516a03662:   jae    3516a036ed <dl_main+0x10dd>
    0.00 :	  3516a03668:   mov    %r15,%rcx
    0.00 :	  3516a0366b:   mov    %rbx,%r15
    0.00 :	  3516a0366e:   mov    %rdx,%rbx
    0.00 :	  3516a03671:   jmp    3516a036d5 <dl_main+0x10c5>
    0.00 :	  3516a03673:   mov    0x220(%rsi),%rax
    0.00 :	  3516a0367a:   test   %rax,%rax
    0.00 :	  3516a0367d:   je     3516a036e4 <dl_main+0x10d4>
    0.00 :	  3516a0367f:   mov    0x8(%r12),%edx
    0.00 :	  3516a03684:   cmp    %rdx,0x8(%rax)
    0.00 :	  3516a03688:   jne    3516a036e4 <dl_main+0x10d4>
    0.00 :	  3516a0368a:   mov    0x238(%rsi),%rax
    0.00 :	  3516a03691:   test   %rax,%rax
    0.00 :	  3516a03694:   je     3516a036e4 <dl_main+0x10d4>
    0.00 :	  3516a03696:   mov    0x4(%r12),%edx
    0.00 :	  3516a0369b:   cmp    %rdx,0x8(%rax)
    0.00 :	  3516a0369f:   jne    3516a036e4 <dl_main+0x10d4>
    0.00 :	  3516a036a1:   mov    (%r12),%edi
    0.00 :	  3516a036a5:   mov    %rcx,-0x140(%rbp)
    0.00 :	  3516a036ac:   add    -0xe8(%rbp),%rdi
    0.00 :	  3516a036b3:   callq  3516a0ee50 <_dl_name_match_p>
    0.00 :	  3516a036b8:   test   %eax,%eax
    0.00 :	  3516a036ba:   mov    -0x140(%rbp),%rcx
    0.00 :	  3516a036c1:   je     3516a036e4 <dl_main+0x10d4>
    0.00 :	  3516a036c3:   add    $0x14,%r12
    0.00 :	  3516a036c7:   add    $0x8,%r13
    0.00 :	  3516a036cb:   cmp    %rbx,%r12
    0.00 :	  3516a036ce:   jae    3516a036e4 <dl_main+0x10d4>
    0.00 :	  3516a036d0:   cmp    %r13,%r14
    0.00 :	  3516a036d3:   jbe    3516a036e4 <dl_main+0x10d4>
    0.00 :	  3516a036d5:   mov    0x0(%r13),%rsi
    0.00 :	  3516a036d9:   cmp    %r15,%rsi
    0.00 :	  3516a036dc:   je     3516a036c7 <dl_main+0x10b7>
    0.00 :	  3516a036de:   cmpq   $0x0,(%rsi)
    0.00 :	  3516a036e2:   je     3516a03673 <dl_main+0x1063>
    0.00 :	  3516a036e4:   mov    %rbx,%rdx
    0.00 :	  3516a036e7:   mov    %r15,%rbx
    0.00 :	  3516a036ea:   mov    %rcx,%r15
    0.00 :	  3516a036ed:   cmp    %rdx,%r12
    0.00 :	  3516a036f0:   sete   %r12b
    0.00 :	  3516a036f4:   cmp    %r14,%r13
    0.00 :	  3516a036f7:   sete   %al
    0.00 :	  3516a036fa:   and    %eax,%r12d
    0.00 :	  3516a036fd:   testb  $0x1,0x21c49c(%rip)        # 3516c1fba0 <_rtld_global_ro>
    0.00 :	  3516a03704:   jne    3516a04b5c <dl_main+0x254c>
    0.00 :	  3516a0370a:   lea    0x2b8(%rbx),%rax
    0.00 :	  3516a03711:   test   %r12b,%r12b
    0.00 :	  3516a03714:   mov    %rax,0x21c8f5(%rip)        # 3516c20010 <_rtld_global+0x10>
    0.00 :	  3516a0371b:   mov    0x2b8(%rbx),%rax
    0.00 :	  3516a03722:   mov    %rax,0x21c497(%rip)        # 3516c1fbc0 <_rtld_global_ro+0x20>
    0.00 :	  3516a03729:   mov    0x2c0(%rbx),%rax
    0.00 :	  3516a03730:   mov    %rax,0x21c491(%rip)        # 3516c1fbc8 <_rtld_global_ro+0x28>
    0.00 :	  3516a03737:   je     3516a037fd <dl_main+0x11ed>
    0.00 :	  3516a0373d:   mov    0x280(%rbx),%rcx
    0.00 :	  3516a03744:   test   %rcx,%rcx
    0.00 :	  3516a03747:   je     3516a0378a <dl_main+0x117a>
    0.00 :	  3516a03749:   rdtsc  
    0.00 :	  3516a0374b:   mov    0x8(%rcx),%rsi
    0.00 :	  3516a0374f:   mov    %eax,%r14d
    0.00 :	  3516a03752:   mov    0x230(%rbx),%rax
    0.00 :	  3516a03759:   mov    %edx,%r13d
    0.00 :	  3516a0375c:   mov    %rbx,%rdi
    0.00 :	  3516a0375f:   mov    %rsi,%rdx
    0.00 :	  3516a03762:   add    0x8(%rax),%rdx
    0.00 :	  3516a03766:   callq  3516a10ad0 <_dl_resolve_conflicts>
    0.00 :	  3516a0376b:   rdtsc  
    0.00 :	  3516a0376d:   shl    $0x20,%rdx
    0.00 :	  3516a03771:   mov    %eax,%eax
    0.00 :	  3516a03773:   shl    $0x20,%r13
    0.00 :	  3516a03777:   mov    %r14d,%r14d
    0.00 :	  3516a0377a:   or     %rax,%rdx
    0.00 :	  3516a0377d:   or     %r14,%r13
    0.00 :	  3516a03780:   sub    %r13,%rdx
    0.00 :	  3516a03783:   mov    %rdx,0x21d89e(%rip)        # 3516c21028 <relocate_time>
    0.00 :	  3516a0378a:   mov    %rbx,%r13
    0.00 :	  3516a0378d:   jmp    3516a037b7 <dl_main+0x11a7>
    0.00 :	  3516a0378f:   cmpq   $0x0,0x428(%r13)
    0.00 :	  3516a03797:   je     3516a037aa <dl_main+0x119a>
    0.00 :	  3516a03799:   cmpb   $0x0,0x21d890(%rip)        # 3516c21030 <tls_init_tp_called>
    0.00 :	  3516a037a0:   je     3516a037aa <dl_main+0x119a>
    0.00 :	  3516a037a2:   mov    %r13,%rdi
    0.00 :	  3516a037a5:   callq  3516a10c90 <_dl_add_to_slotinfo>
    0.00 :	  3516a037aa:   mov    0x18(%r13),%r13
    0.00 :	  3516a037ae:   test   %r13,%r13
    0.00 :	  3516a037b1:   je     3516a038ce <dl_main+0x12be>
    0.00 :	  3516a037b7:   orb    $0x4,0x314(%r13)
    0.00 :	  3516a037bf:   cmpq   $0x0,0x458(%r13)
    0.00 :	  3516a037c7:   je     3516a0378f <dl_main+0x117f>
    0.00 :	  3516a037c9:   mov    %r13,%rdi
    0.00 :	  3516a037cc:   callq  3516a0b120 <_dl_protect_relro>
    0.00 :	  3516a037d1:   jmp    3516a0378f <dl_main+0x117f>
    0.00 :	  3516a037d3:   lea    0x2b8(%rbx),%rax
    0.00 :	  3516a037da:   mov    %rax,0x21c82f(%rip)        # 3516c20010 <_rtld_global+0x10>
    0.00 :	  3516a037e1:   mov    0x2b8(%rbx),%rax
    0.00 :	  3516a037e8:   mov    %rax,0x21c3d1(%rip)        # 3516c1fbc0 <_rtld_global_ro+0x20>
    0.00 :	  3516a037ef:   mov    0x2c0(%rbx),%rax
    0.00 :	  3516a037f6:   mov    %rax,0x21c3cb(%rip)        # 3516c1fbc8 <_rtld_global_ro+0x28>
    0.00 :	  3516a037fd:   xor    %r13d,%r13d
    0.00 :	  3516a03800:   cmpq   $0x0,0x21c410(%rip)        # 3516c1fc18 <_rtld_global_ro+0x78>
    0.00 :	  3516a03808:   mov    %rbx,%r12
    0.00 :	  3516a0380b:   setne  %r13b
    0.00 :	  3516a0380f:   or     %r13d,0x21c3c6(%rip)        # 3516c1fbdc <_rtld_global_ro+0x3c>
    0.00 :	  3516a03816:   mov    %r12,%rax
    0.00 :	  3516a03819:   mov    0x18(%r12),%r12
    0.00 :	  3516a0381e:   test   %r12,%r12
    0.00 :	  3516a03821:   jne    3516a03816 <dl_main+0x1206>
    0.00 :	  3516a03823:   mov    %rax,%r12
    0.00 :	  3516a03826:   rdtsc  
    0.00 :	  3516a03828:   mov    %edx,%r14d
    0.00 :	  3516a0382b:   mov    %eax,-0xe8(%rbp)
    0.00 :	  3516a03831:   mov    0x38(%r12),%rax
    0.00 :	  3516a03836:   mov    0x8(%rax),%rax
    0.00 :	  3516a0383a:   test   %rax,%rax
    0.00 :	  3516a0383d:   jne    3516a03d7e <dl_main+0x176e>
    0.00 :	  3516a03843:   lea    0x21d14e(%rip),%rcx        # 3516c20998 <_rtld_global+0x998>
    0.00 :	  3516a0384a:   andb   $0xfe,0x316(%r12)
    0.00 :	  3516a03853:   cmp    %rcx,%r12
    0.00 :	  3516a03856:   je     3516a03877 <dl_main+0x1267>
    0.00 :	  3516a03858:   xor    %edx,%edx
    0.00 :	  3516a0385a:   cmpl   $0x0,0x21c37b(%rip)        # 3516c1fbdc <_rtld_global_ro+0x3c>
    0.00 :	  3516a03861:   mov    0x380(%r12),%rsi
    0.00 :	  3516a03869:   mov    %r13d,%ecx
    0.00 :	  3516a0386c:   mov    %r12,%rdi
    0.00 :	  3516a0386f:   setne  %dl
    0.00 :	  3516a03872:   callq  3516a0b2f0 <_dl_relocate_object>
    0.00 :	  3516a03877:   cmpq   $0x0,0x428(%r12)
    0.00 :	  3516a03880:   je     3516a03893 <dl_main+0x1283>
    0.00 :	  3516a03882:   cmpb   $0x0,0x21d7a7(%rip)        # 3516c21030 <tls_init_tp_called>
    0.00 :	  3516a03889:   je     3516a03893 <dl_main+0x1283>
    0.00 :	  3516a0388b:   mov    %r12,%rdi
    0.00 :	  3516a0388e:   callq  3516a10c90 <_dl_add_to_slotinfo>
    0.00 :	  3516a03893:   mov    0x20(%r12),%r12
    0.00 :	  3516a03898:   test   %r12,%r12
    0.00 :	  3516a0389b:   jne    3516a03831 <dl_main+0x1221>
    0.00 :	  3516a0389d:   rdtsc  
    0.00 :	  3516a0389f:   shl    $0x20,%rdx
    0.00 :	  3516a038a3:   mov    %eax,%eax
    0.00 :	  3516a038a5:   shl    $0x20,%r14
    0.00 :	  3516a038a9:   or     %rax,%rdx
    0.00 :	  3516a038ac:   mov    -0xe8(%rbp),%eax
    0.00 :	  3516a038b2:   or     %rax,%r14
    0.00 :	  3516a038b5:   sub    %r14,%rdx
    0.00 :	  3516a038b8:   cmpq   $0x0,0x21d0b0(%rip)        # 3516c20970 <_rtld_global+0x970>
    0.00 :	  3516a038c0:   mov    %rdx,0x21d761(%rip)        # 3516c21028 <relocate_time>
    0.00 :	  3516a038c7:   je     3516a038ce <dl_main+0x12be>
    0.00 :	  3516a038c9:   callq  3516a102e0 <_dl_start_profile>
    0.00 :	  3516a038ce:   cmpb   $0x0,-0xf8(%rbp)
    0.00 :	  3516a038d5:   jne    3516a038e5 <dl_main+0x12d5>
    0.00 :	  3516a038d7:   cmpq   $0x0,0x21d641(%rip)        # 3516c20f20 <_rtld_global+0xf20>
    0.00 :	  3516a038df:   jne    3516a039d5 <dl_main+0x13c5>
    0.00 :	  3516a038e5:   mov    %r15,%rdi
    0.00 :	  3516a038e8:   callq  3516a10e50 <_dl_allocate_tls_init>
    0.00 :	  3516a038ed:   cmpb   $0x0,0x21d73c(%rip)        # 3516c21030 <tls_init_tp_called>
    0.00 :	  3516a038f4:   jne    3516a03910 <dl_main+0x1300>
    0.00 :	  3516a038f6:   mov    %r15,(%r15)
    0.00 :	  3516a038f9:   mov    %r15,0x10(%r15)
    0.00 :	  3516a038fd:   mov    $0x1002,%edi
    0.00 :	  3516a03902:   mov    $0x9e,%eax
    0.00 :	  3516a03907:   mov    %r15,%rsi
    0.00 :	  3516a0390a:   syscall 
    0.00 :	  3516a0390c:   test   %eax,%eax
    0.00 :	  3516a0390e:   jne    3516a0395e <dl_main+0x134e>
    0.00 :	  3516a03910:   test   %r12b,%r12b
    0.00 :	  3516a03913:   jne    3516a0391e <dl_main+0x130e>
    0.00 :	  3516a03915:   cmpb   $0x0,-0xf0(%rbp)
    0.00 :	  3516a0391c:   jne    3516a03984 <dl_main+0x1374>
    0.00 :	  3516a0391e:   callq  3516a14dd0 <_dl_sysdep_start_cleanup>
    0.00 :	  3516a03923:   mov    0x21c387(%rip),%eax        # 3516c1fcb0 <_rtld_global_ro+0x110>
    0.00 :	  3516a03929:   test   %eax,%eax
    0.00 :	  3516a0392b:   jne    3516a04799 <dl_main+0x2189>
    0.00 :	  3516a03931:   xor    %esi,%esi
    0.00 :	  3516a03933:   xor    %edi,%edi
    0.00 :	  3516a03935:   callq  3516a0ed30 <_dl_debug_initialize>
    0.00 :	  3516a0393a:   movl   $0x0,0x18(%rax)
    0.00 :	  3516a03941:   mov    %rax,%rbx
    0.00 :	  3516a03944:   callq  3516a0edc0 <_dl_debug_state>
    0.00 :	  3516a03949:   nop
    0.00 :	  3516a0394a:   callq  3516a08be0 <_dl_unload_cache>
    0.00 :	  3516a0394f:   lea    -0x28(%rbp),%rsp
    0.00 :	  3516a03953:   pop    %rbx
    0.00 :	  3516a03954:   pop    %r12
    0.00 :	  3516a03956:   pop    %r13
    0.00 :	  3516a03958:   pop    %r14
    0.00 :	  3516a0395a:   pop    %r15
    0.00 :	  3516a0395c:   leaveq 
    0.00 :	  3516a0395d:   retq   
    0.00 :	  3516a0395e:   lea    0x17f2b(%rip),%rdx        # 3516a1b890 <expected1.10492+0x42f>
    0.00 :	  3516a03965:   lea    0x17f5c(%rip),%rsi        # 3516a1b8c8 <expected1.10492+0x467>
    0.00 :	  3516a0396c:   mov    $0x2,%edi
    0.00 :	  3516a03971:   xor    %eax,%eax
    0.00 :	  3516a03973:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a03978:   mov    $0x7f,%edi
    0.00 :	  3516a0397d:   callq  3516a16fd0 <_Exit>
    0.00 :	  3516a03982:   jmp    3516a0395e <dl_main+0x134e>
    0.00 :	  3516a03984:   rdtsc  
    0.00 :	  3516a03986:   andb   $0xfb,0x21d31f(%rip)        # 3516c20cac <_rtld_global+0xcac>
    0.00 :	  3516a0398d:   lea    0x21d004(%rip),%rdi        # 3516c20998 <_rtld_global+0x998>
    0.00 :	  3516a03994:   mov    %edx,%r13d
    0.00 :	  3516a03997:   mov    0x380(%rbx),%rsi
    0.00 :	  3516a0399e:   xor    %ecx,%ecx
    0.00 :	  3516a039a0:   xor    %edx,%edx
    0.00 :	  3516a039a2:   mov    %eax,%r12d
    0.00 :	  3516a039a5:   callq  3516a0b2f0 <_dl_relocate_object>
    0.00 :	  3516a039aa:   rdtsc  
    0.00 :	  3516a039ac:   shl    $0x20,%rdx
    0.00 :	  3516a039b0:   mov    %eax,%eax
    0.00 :	  3516a039b2:   shl    $0x20,%r13
    0.00 :	  3516a039b6:   or     %rax,%rdx
    0.00 :	  3516a039b9:   add    0x21d668(%rip),%rdx        # 3516c21028 <relocate_time>
    0.00 :	  3516a039c0:   mov    %r12d,%r12d
    0.00 :	  3516a039c3:   or     %r12,%r13
    0.00 :	  3516a039c6:   sub    %r13,%rdx
    0.00 :	  3516a039c9:   mov    %rdx,0x21d658(%rip)        # 3516c21028 <relocate_time>
    0.00 :	  3516a039d0:   jmpq   3516a0391e <dl_main+0x130e>
    0.00 :	  3516a039d5:   addq   $0x1,0x21d57b(%rip)        # 3516c20f58 <_rtld_global+0xf58>
    0.00 :	  3516a039dd:   jmpq   3516a038e5 <dl_main+0x12d5>
    0.00 :	  3516a039e2:   rdtsc  
    0.00 :	  3516a039e4:   shl    $0x20,%rdx
    0.00 :	  3516a039e8:   mov    %eax,%eax
    0.00 :	  3516a039ea:   or     %rax,%rdx
    0.00 :	  3516a039ed:   xor    %rcx,%rdx
    0.00 :	  3516a039f0:   mov    %rdx,-0x68(%rbp)
    0.00 :	  3516a039f4:   jmpq   3516a035d3 <dl_main+0xfc3>
    0.00 :	  3516a039f9:   mov    %r8,%rsi
    0.00 :	  3516a039fc:   sub    %rdx,%rsi
    0.00 :	  3516a039ff:   mov    %rcx,(%rbx,%rsi,8)
    0.00 :	  3516a03a03:   jmpq   3516a02bbb <dl_main+0x5ab>
    0.00 :	  3516a03a08:   mov    %rdx,0xc0(%rax)
    0.00 :	  3516a03a0f:   jmpq   3516a02cb6 <dl_main+0x6a6>
    0.00 :	  3516a03a14:   mov    %rdx,0xc0(%rax)
    0.00 :	  3516a03a1b:   jmpq   3516a02c97 <dl_main+0x687>
    0.00 :	  3516a03a20:   mov    0x21cf79(%rip),%rdx        # 3516c209a0 <_rtld_global+0x9a0>
    0.00 :	  3516a03a27:   test   %rdx,%rdx
    0.00 :	  3516a03a2a:   je     3516a02b02 <dl_main+0x4f2>
    0.00 :	  3516a03a30:   lea    0x21d5b9(%rip),%r8        # 3516c20ff0 <_dl_rtld_libname>
    0.00 :	  3516a03a37:   mov    %rdx,0x21d5b2(%rip)        # 3516c20ff0 <_dl_rtld_libname>
    0.00 :	  3516a03a3e:   mov    %r8,0x21cf8b(%rip)        # 3516c209d0 <_rtld_global+0x9d0>
    0.00 :	  3516a03a45:   mov    %r8,%rax
    0.00 :	  3516a03a48:   jmpq   3516a02b02 <dl_main+0x4f2>
    0.00 :	  3516a03a4d:   mov    0x21cf7c(%rip),%rax        # 3516c209d0 <_rtld_global+0x9d0>
    0.00 :	  3516a03a54:   mov    (%rax),%rax
    0.00 :	  3516a03a57:   mov    %rax,0x21cf42(%rip)        # 3516c209a0 <_rtld_global+0x9a0>
    0.00 :	  3516a03a5e:   jmpq   3516a03194 <dl_main+0xb84>
    0.00 :	  3516a03a63:   callq  3516a10dc0 <_dl_next_tls_modid>
    0.00 :	  3516a03a68:   mov    %rax,0x21d371(%rip)        # 3516c20de0 <_rtld_global+0xde0>
    0.00 :	  3516a03a6f:   jmpq   3516a03241 <dl_main+0xc31>
    0.00 :	  3516a03a74:   cmpq   $0x1,(%rbx)
    0.00 :	  3516a03a78:   sbb    %rax,%rax
    0.00 :	  3516a03a7b:   mov    %rax,0x21c18e(%rip)        # 3516c1fc10 <_rtld_global_ro+0x70>
    0.00 :	  3516a03a82:   jmpq   3516a031d6 <dl_main+0xbc6>
    0.00 :	  3516a03a87:   sub    $0x1,%rdx
    0.00 :	  3516a03a8b:   and    0x10(%rax),%rdx
    0.00 :	  3516a03a8f:   mov    %rdx,0x438(%rbx)
    0.00 :	  3516a03a96:   jmpq   3516a02967 <dl_main+0x357>
    0.00 :	  3516a03a9b:   xor    %edx,%edx
    0.00 :	  3516a03a9d:   mov    $0x1,%eax
    0.00 :	  3516a03aa2:   jmpq   3516a034df <dl_main+0xecf>
    0.00 :	  3516a03aa7:   mov    $0x60,%r8d
    0.00 :	  3516a03aad:   mov    $0x50,%dl
    0.00 :	  3516a03aaf:   mov    $0x40,%ecx
    0.00 :	  3516a03ab4:   mov    $0x30,%edi
    0.00 :	  3516a03ab9:   mov    $0x20,%r9d
    0.00 :	  3516a03abf:   mov    $0x10,%r10d
    0.00 :	  3516a03ac5:   xor    %r11d,%r11d
    0.00 :	  3516a03ac8:   jmpq   3516a02ec5 <dl_main+0x8b5>
    0.00 :	  3516a03acd:   mov    %rdx,%r8
    0.00 :	  3516a03ad0:   mov    %rcx,%rdx
    0.00 :	  3516a03ad3:   mov    %rdi,%rcx
    0.00 :	  3516a03ad6:   mov    %r9,%rdi
    0.00 :	  3516a03ad9:   mov    %r10,%r9
    0.00 :	  3516a03adc:   mov    %r11,%r10
    0.00 :	  3516a03adf:   jmpq   3516a02ef3 <dl_main+0x8e3>
    0.00 :	  3516a03ae4:   mov    %rdx,%r8
    0.00 :	  3516a03ae7:   mov    %rcx,%rdx
    0.00 :	  3516a03aea:   mov    %rdi,%rcx
    0.00 :	  3516a03aed:   mov    %r9,%rdi
    0.00 :	  3516a03af0:   mov    %r10,%r9
    0.00 :	  3516a03af3:   jmpq   3516a02f20 <dl_main+0x910>
    0.00 :	  3516a03af8:   mov    %rdx,%r8
    0.00 :	  3516a03afb:   mov    %rcx,%rdx
    0.00 :	  3516a03afe:   mov    %rdi,%rcx
    0.00 :	  3516a03b01:   mov    %r9,%rdi
    0.00 :	  3516a03b04:   jmpq   3516a02f4d <dl_main+0x93d>
    0.00 :	  3516a03b09:   mov    %rdx,%r8
    0.00 :	  3516a03b0c:   mov    %rcx,%rdx
    0.00 :	  3516a03b0f:   mov    %rdi,%rcx
    0.00 :	  3516a03b12:   jmpq   3516a02f7a <dl_main+0x96a>
    0.00 :	  3516a03b17:   mov    %rdx,%r8
    0.00 :	  3516a03b1a:   mov    %rcx,%rdx
    0.00 :	  3516a03b1d:   jmpq   3516a02fad <dl_main+0x99d>
    0.00 :	  3516a03b22:   mov    0x18(%rdx),%rax
    0.00 :	  3516a03b26:   mov    %rax,0x21ce83(%rip)        # 3516c209b0 <_rtld_global+0x9b0>
    0.00 :	  3516a03b2d:   mov    %rdx,%rax
    0.00 :	  3516a03b30:   jmpq   3516a03527 <dl_main+0xf17>
    0.00 :	  3516a03b35:   mov    $0x2f,%esi
    0.00 :	  3516a03b3a:   mov    %rbx,%rdi
    0.00 :	  3516a03b3d:   callq  3516a17310 <index>
    0.00 :	  3516a03b42:   test   %rax,%rax
    0.00 :	  3516a03b45:   jne    3516a027e8 <dl_main+0x1d8>
    0.00 :	  3516a03b4b:   jmpq   3516a02816 <dl_main+0x206>
    0.00 :	  3516a03b50:   mov    %r13d,%eax
    0.00 :	  3516a03b53:   xor    %ecx,%ecx
    0.00 :	  3516a03b55:   lea    0x1e(,%rax,8),%rax
    0.00 :	  3516a03b5d:   shr    $0x4,%rax
    0.00 :	  3516a03b61:   shl    $0x4,%rax
    0.00 :	  3516a03b65:   sub    %rax,%rsp
    0.00 :	  3516a03b68:   lea    0x1f(%rsp),%rax
    0.00 :	  3516a03b6d:   and    $0xfffffffffffffff0,%rax
    0.00 :	  3516a03b71:   mov    %rax,%rsi
    0.00 :	  3516a03b74:   mov    %ecx,%edi
    0.00 :	  3516a03b76:   add    $0x1,%ecx
    0.00 :	  3516a03b79:   mov    %rdx,(%rax,%rdi,8)
    0.00 :	  3516a03b7d:   mov    0x18(%rdx),%rdx
    0.00 :	  3516a03b81:   test   %rdx,%rdx
    0.00 :	  3516a03b84:   jne    3516a03b74 <dl_main+0x1564>
    0.00 :	  3516a03b86:   jmpq   3516a032e5 <dl_main+0xcd5>
    0.00 :	  3516a03b8b:   mov    %rsi,%rdi
    0.00 :	  3516a03b8e:   xor    %eax,%eax
    0.00 :	  3516a03b90:   or     $0xffffffffffffffff,%rcx
    0.00 :	  3516a03b94:   repnz scas %es:(%rdi),%al
    0.00 :	  3516a03b96:   not    %rcx
    0.00 :	  3516a03b99:   lea    0x1e(%rcx),%rax
    0.00 :	  3516a03b9d:   mov    %rcx,%rdx
    0.00 :	  3516a03ba0:   and    $0xfffffffffffffff0,%rax
    0.00 :	  3516a03ba4:   sub    %rax,%rsp
    0.00 :	  3516a03ba7:   lea    0x1f(%rsp),%rdi
    0.00 :	  3516a03bac:   and    $0xfffffffffffffff0,%rdi
    0.00 :	  3516a03bb0:   callq  3516a184b0 <memcpy>
    0.00 :	  3516a03bb5:   mov    %rax,-0x60(%rbp)
    0.00 :	  3516a03bb9:   rdtsc  
    0.00 :	  3516a03bbb:   lea    -0x60(%rbp),%r12
    0.00 :	  3516a03bbf:   mov    %edx,-0xe8(%rbp)
    0.00 :	  3516a03bc5:   mov    %eax,-0xf0(%rbp)
    0.00 :	  3516a03bcb:   lea    0x172cb(%rip),%rsi        # 3516a1ae9d <intel_02_known+0x3dd>
    0.00 :	  3516a03bd2:   mov    %r12,%rdi
    0.00 :	  3516a03bd5:   callq  3516a15d60 <__strsep>
    0.00 :	  3516a03bda:   test   %rax,%rax
    0.00 :	  3516a03bdd:   mov    %rax,%r14
    0.00 :	  3516a03be0:   je     3516a03c84 <dl_main+0x1674>
    0.00 :	  3516a03be6:   cmpb   $0x0,(%r14)
    0.00 :	  3516a03bea:   je     3516a03bcb <dl_main+0x15bb>
    0.00 :	  3516a03bec:   cmpl   $0x0,0x21c1dd(%rip)        # 3516c1fdd0 <__libc_enable_secure>
    0.00 :	  3516a03bf3:   jne    3516a03cbc <dl_main+0x16ac>
    0.00 :	  3516a03bf9:   lea    0x17292(%rip),%rdx        # 3516a1ae92 <intel_02_known+0x3d2>
    0.00 :	  3516a03c00:   mov    %rbx,%rsi
    0.00 :	  3516a03c03:   mov    %r14,%rdi
    0.00 :	  3516a03c06:   callq  3516a015a0 <do_preload>
    0.00 :	  3516a03c0b:   add    %eax,%r13d
    0.00 :	  3516a03c0e:   jmp    3516a03bcb <dl_main+0x15bb>
    0.00 :	  3516a03c10:   lea    -0x40(%rbp),%rsi
    0.00 :	  3516a03c14:   lea    0x18ee5(%rip),%rdi        # 3516a1cb00 <preload_file.12989>
    0.00 :	  3516a03c1b:   mov    $0x3,%edx
    0.00 :	  3516a03c20:   callq  3516a0f670 <_dl_sysdep_read_whole_file>
    0.00 :	  3516a03c25:   cmp    $0xffffffffffffffff,%rax
    0.00 :	  3516a03c29:   mov    %rax,%rcx
    0.00 :	  3516a03c2c:   je     3516a032d0 <dl_main+0xcc0>
    0.00 :	  3516a03c32:   mov    -0x40(%rbp),%r12
    0.00 :	  3516a03c36:   mov    %rax,-0x60(%rbp)
    0.00 :	  3516a03c3a:   test   %r12,%r12
    0.00 :	  3516a03c3d:   je     3516a03cd7 <dl_main+0x16c7>
    0.00 :	  3516a03c43:   mov    -0x60(%rbp),%r14
    0.00 :	  3516a03c47:   mov    %r12,%rdx
    0.00 :	  3516a03c4a:   mov    $0x23,%esi
    0.00 :	  3516a03c4f:   mov    %rcx,-0x140(%rbp)
    0.00 :	  3516a03c56:   mov    %r14,%rdi
    0.00 :	  3516a03c59:   callq  3516a17600 <__memchr>
    0.00 :	  3516a03c5e:   test   %rax,%rax
    0.00 :	  3516a03c61:   mov    -0x140(%rbp),%rcx
    0.00 :	  3516a03c68:   je     3516a03cd7 <dl_main+0x16c7>
    0.00 :	  3516a03c6a:   sub    %rax,%r14
    0.00 :	  3516a03c6d:   add    %r14,%r12
    0.00 :	  3516a03c70:   sub    $0x1,%r12
    0.00 :	  3516a03c74:   movb   $0x20,(%rax)
    0.00 :	  3516a03c77:   je     3516a03cd7 <dl_main+0x16c7>
    0.00 :	  3516a03c79:   add    $0x1,%rax
    0.00 :	  3516a03c7d:   cmpb   $0xa,(%rax)
    0.00 :	  3516a03c80:   jne    3516a03c70 <dl_main+0x1660>
    0.00 :	  3516a03c82:   jmp    3516a03c3a <dl_main+0x162a>
    0.00 :	  3516a03c84:   rdtsc  
    0.00 :	  3516a03c86:   mov    -0xf0(%rbp),%ecx
    0.00 :	  3516a03c8c:   mov    -0xe8(%rbp),%esi
    0.00 :	  3516a03c92:   shl    $0x20,%rdx
    0.00 :	  3516a03c96:   mov    %eax,%eax
    0.00 :	  3516a03c98:   or     %rax,%rdx
    0.00 :	  3516a03c9b:   shl    $0x20,%rsi
    0.00 :	  3516a03c9f:   or     %rcx,%rsi
    0.00 :	  3516a03ca2:   mov    0x21c097(%rip),%rcx        # 3516c1fd40 <load_time>
    0.00 :	  3516a03ca9:   sub    %rsi,%rcx
    0.00 :	  3516a03cac:   lea    (%rcx,%rdx,1),%rdx
    0.00 :	  3516a03cb0:   mov    %rdx,0x21c089(%rip)        # 3516c1fd40 <load_time>
    0.00 :	  3516a03cb7:   jmpq   3516a032b7 <dl_main+0xca7>
    0.00 :	  3516a03cbc:   mov    $0x2f,%esi
    0.00 :	  3516a03cc1:   mov    %r14,%rdi
    0.00 :	  3516a03cc4:   callq  3516a17310 <index>
    0.00 :	  3516a03cc9:   test   %rax,%rax
    0.00 :	  3516a03ccc:   jne    3516a03bcb <dl_main+0x15bb>
    0.00 :	  3516a03cd2:   jmpq   3516a03bf9 <dl_main+0x15e9>
    0.00 :	  3516a03cd7:   mov    -0x40(%rbp),%r14
    0.00 :	  3516a03cdb:   lea    -0x1(%rcx,%r14,1),%rdx
    0.00 :	  3516a03ce0:   movzbl (%rdx),%eax
    0.00 :	  3516a03ce3:   cmp    $0x9,%al
    0.00 :	  3516a03ce5:   je     3516a04aac <dl_main+0x249c>
    0.00 :	  3516a03ceb:   cmp    $0x20,%al
    0.00 :	  3516a03ced:   je     3516a04aac <dl_main+0x249c>
    0.00 :	  3516a03cf3:   cmp    $0xa,%al
    0.00 :	  3516a03cf5:   je     3516a04aac <dl_main+0x249c>
    0.00 :	  3516a03cfb:   cmp    $0x3a,%al
    0.00 :	  3516a03cfd:   nopl   (%rax)
    0.00 :	  3516a03d00:   je     3516a04aac <dl_main+0x249c>
    0.00 :	  3516a03d06:   lea    (%rcx,%r14,1),%r14
    0.00 :	  3516a03d0a:   cmp    %rcx,%r14
    0.00 :	  3516a03d0d:   jbe    3516a04a5a <dl_main+0x244a>
    0.00 :	  3516a03d13:   movzbl -0x1(%r14),%eax
    0.00 :	  3516a03d18:   lea    -0x1(%r14),%rdx
    0.00 :	  3516a03d1c:   cmp    $0x20,%al
    0.00 :	  3516a03d1e:   je     3516a04a57 <dl_main+0x2447>
    0.00 :	  3516a03d24:   cmp    $0x9,%al
    0.00 :	  3516a03d26:   je     3516a04a57 <dl_main+0x2447>
    0.00 :	  3516a03d2c:   cmp    $0xa,%al
    0.00 :	  3516a03d2e:   je     3516a04a57 <dl_main+0x2447>
    0.00 :	  3516a03d34:   cmp    $0x3a,%al
    0.00 :	  3516a03d36:   je     3516a04a57 <dl_main+0x2447>
    0.00 :	  3516a03d3c:   mov    %rdx,%r14
    0.00 :	  3516a03d3f:   nop
    0.00 :	  3516a03d40:   jmp    3516a03d0a <dl_main+0x16fa>
    0.00 :	  3516a03d42:   lea    0x180d7(%rip),%rdi        # 3516a1be20 <expected1.10492+0x9bf>
    0.00 :	  3516a03d49:   callq  3516a024a0 <dl_fatal>
    0.00 :	  3516a03d4e:   lea    0x1711b(%rip),%rdi        # 3516a1ae70 <intel_02_known+0x3b0>
    0.00 :	  3516a03d55:   callq  3516a024a0 <dl_fatal>
    0.00 :	  3516a03d5a:   cmpq   $0x0,0x10(%rbx)
    0.00 :	  3516a03d5f:   jne    3516a03d6b <dl_main+0x175b>
    0.00 :	  3516a03d61:   mov    $0x1,%edi
    0.00 :	  3516a03d66:   callq  3516a16fd0 <_Exit>
    0.00 :	  3516a03d6b:   cmp    $0x1,%r13b
    0.00 :	  3516a03d6f:   sbb    %edi,%edi
    0.00 :	  3516a03d71:   and    $0x2,%edi
    0.00 :	  3516a03d74:   callq  3516a16fd0 <_Exit>
    0.00 :	  3516a03d79:   jmpq   3516a02cda <dl_main+0x6ca>
    0.00 :	  3516a03d7e:   movl   $0x1,0x10(%rax)
    0.00 :	  3516a03d85:   mov    0x8(%rax),%rax
    0.00 :	  3516a03d89:   test   %rax,%rax
    0.00 :	  3516a03d8c:   je     3516a03843 <dl_main+0x1233>
    0.00 :	  3516a03d92:   jmp    3516a03d7e <dl_main+0x176e>
    0.00 :	  3516a03d94:   lea    0x8(%rbx),%rax
    0.00 :	  3516a03d98:   addl   $0x1,0x21bfcd(%rip)        # 3516c1fd6c <_dl_skip_args>
    0.00 :	  3516a03d9f:   subl   $0x1,0x21bfc2(%rip)        # 3516c1fd68 <_dl_argc>
    0.00 :	  3516a03da6:   mov    %rax,0x21bddb(%rip)        # 3516c1fb88 <_dl_argv>
    0.00 :	  3516a03dad:   mov    -0xf0(%rbp),%eax
    0.00 :	  3516a03db3:   imul   $0x38,%rax,%rax
    0.00 :	  3516a03db7:   lea    (%r12,%rax,1),%rax
    0.00 :	  3516a03dbb:   cmp    %rax,%r12
    0.00 :	  3516a03dbe:   jb     3516a03dd1 <dl_main+0x17c1>
    0.00 :	  3516a03dc0:   jmp    3516a03de6 <dl_main+0x17d6>
    0.00 :	  3516a03dc2:   nopw   0x0(%rax,%rax,1)
    0.00 :	  3516a03dc8:   add    $0x38,%r12
    0.00 :	  3516a03dcc:   cmp    %rax,%r12
    0.00 :	  3516a03dcf:   jae    3516a03de6 <dl_main+0x17d6>
    0.00 :	  3516a03dd1:   cmpl   $0x6474e551,(%r12)
    0.00 :	  3516a03dd9:   jne    3516a03dc8 <dl_main+0x17b8>
    0.00 :	  3516a03ddb:   mov    0x4(%r12),%eax
    0.00 :	  3516a03de0:   mov    %eax,0x21d132(%rip)        # 3516c20f18 <_rtld_global+0xf18>
    0.00 :	  3516a03de6:   cmpl   $0x2,-0x38(%rbp)
    0.00 :	  3516a03dea:   je     3516a03ebd <dl_main+0x18ad>
    0.00 :	  3516a03df0:   rdtsc  
    0.00 :	  3516a03df2:   mov    0x8(%rbx),%rsi
    0.00 :	  3516a03df6:   mov    %edx,%r12d
    0.00 :	  3516a03df9:   xor    %r9d,%r9d
    0.00 :	  3516a03dfc:   mov    $0x20000000,%r8d
    0.00 :	  3516a03e02:   xor    %ecx,%ecx
    0.00 :	  3516a03e04:   mov    $0x1,%edx
    0.00 :	  3516a03e09:   xor    %edi,%edi
    0.00 :	  3516a03e0b:   mov    %eax,%r14d
    0.00 :	  3516a03e0e:   callq  3516a081d0 <_dl_map_object>
    0.00 :	  3516a03e13:   rdtsc  
    0.00 :	  3516a03e15:   shl    $0x20,%rdx
    0.00 :	  3516a03e19:   mov    %eax,%eax
    0.00 :	  3516a03e1b:   shl    $0x20,%r12
    0.00 :	  3516a03e1f:   mov    %r14d,%r14d
    0.00 :	  3516a03e22:   or     %rax,%rdx
    0.00 :	  3516a03e25:   or     %r14,%r12
    0.00 :	  3516a03e28:   sub    %r12,%rdx
    0.00 :	  3516a03e2b:   mov    %rdx,0x21bf0e(%rip)        # 3516c1fd40 <load_time>
    0.00 :	  3516a03e32:   mov    0x21c1c7(%rip),%rbx        # 3516c20000 <_rtld_global>
    0.00 :	  3516a03e39:   mov    -0x100(%rbp),%rdi
    0.00 :	  3516a03e40:   lea    0x1705d(%rip),%rsi        # 3516a1aea4 <intel_02_known+0x3e4>
    0.00 :	  3516a03e47:   mov    $0x1,%r14d
    0.00 :	  3516a03e4d:   mov    0x2a8(%rbx),%rax
    0.00 :	  3516a03e54:   movzwl 0x2b0(%rbx),%ecx
    0.00 :	  3516a03e5b:   mov    %rdi,%rdx
    0.00 :	  3516a03e5e:   mov    0x2a0(%rbx),%r12
    0.00 :	  3516a03e65:   mov    %rsi,0x8(%rbx)
    0.00 :	  3516a03e69:   mov    %rax,0x0(%r13)
    0.00 :	  3516a03e6d:   mov    (%rdi),%rax
    0.00 :	  3516a03e70:   mov    %ecx,%ecx
    0.00 :	  3516a03e72:   test   %rax,%rax
    0.00 :	  3516a03e75:   jne    3516a03e9c <dl_main+0x188c>
    0.00 :	  3516a03e77:   jmpq   3516a028a5 <dl_main+0x295>
    0.00 :	  3516a03e7c:   nopl   0x0(%rax)
    0.00 :	  3516a03e80:   cmp    $0x9,%rax
    0.00 :	  3516a03e84:   je     3516a03ea8 <dl_main+0x1898>
    0.00 :	  3516a03e86:   cmp    $0x3,%rax
    0.00 :	  3516a03e8a:   jne    3516a03e90 <dl_main+0x1880>
    0.00 :	  3516a03e8c:   mov    %r12,0x8(%rdx)
    0.00 :	  3516a03e90:   add    $0x10,%rdx
    0.00 :	  3516a03e94:   mov    (%rdx),%rax
    0.00 :	  3516a03e97:   test   %rax,%rax
    0.00 :	  3516a03e9a:   je     3516a03eb2 <dl_main+0x18a2>
    0.00 :	  3516a03e9c:   cmp    $0x5,%rax
    0.00 :	  3516a03ea0:   jne    3516a03e80 <dl_main+0x1870>
    0.00 :	  3516a03ea2:   mov    %rcx,0x8(%rdx)
    0.00 :	  3516a03ea6:   jmp    3516a03e90 <dl_main+0x1880>
    0.00 :	  3516a03ea8:   mov    0x0(%r13),%rax
    0.00 :	  3516a03eac:   mov    %rax,0x8(%rdx)
    0.00 :	  3516a03eb0:   jmp    3516a03e90 <dl_main+0x1880>
    0.00 :	  3516a03eb2:   mov    $0x1,%r14d
    0.00 :	  3516a03eb8:   jmpq   3516a028a5 <dl_main+0x295>
    0.00 :	  3516a03ebd:   mov    0x21bcc4(%rip),%rax        # 3516c1fb88 <_dl_argv>
    0.00 :	  3516a03ec4:   movq   $0x0,-0x48(%rbp)
    0.00 :	  3516a03ecc:   lea    -0x31(%rbp),%r8
    0.00 :	  3516a03ed0:   lea    -0x60(%rbp),%r12
    0.00 :	  3516a03ed4:   lea    -0x281b(%rip),%rcx        # 3516a016c0 <map_doit>
    0.00 :	  3516a03edb:   movq   $0x0,-0xd8(%rbp)
    0.00 :	  3516a03ee6:   mov    %r8,-0xf8(%rbp)
    0.00 :	  3516a03eed:   mov    -0xf8(%rbp),%rdx
    0.00 :	  3516a03ef4:   lea    -0xe0(%rbp),%r8
    0.00 :	  3516a03efb:   mov    (%rax),%rax
    0.00 :	  3516a03efe:   mov    %r12,%rdi
    0.00 :	  3516a03f01:   movl   $0x20000000,-0xd0(%rbp)
    0.00 :	  3516a03f0b:   mov    %rax,-0xe0(%rbp)
    0.00 :	  3516a03f12:   lea    -0x48(%rbp),%rax
    0.00 :	  3516a03f16:   mov    %rax,%rsi
    0.00 :	  3516a03f19:   callq  3516a0e130 <_dl_catch_error>
    0.00 :	  3516a03f1e:   cmpq   $0x0,-0x48(%rbp)
    0.00 :	  3516a03f23:   je     3516a03e32 <dl_main+0x1822>
    0.00 :	  3516a03f29:   mov    $0x1,%edi
    0.00 :	  3516a03f2e:   callq  3516a16fd0 <_Exit>
    0.00 :	  3516a03f33:   jmpq   3516a03e32 <dl_main+0x1822>
    0.00 :	  3516a03f38:   mov    0x21bc62(%rip),%eax        # 3516c1fba0 <_rtld_global_ro>
    0.00 :	  3516a03f3e:   xor    %r13d,%r13d
    0.00 :	  3516a03f41:   lea    0x16da6(%rip),%r14        # 3516a1acee <intel_02_known+0x22e>
    0.00 :	  3516a03f48:   mov    %rbx,%r12
    0.00 :	  3516a03f4b:   test   $0x4,%ah
    0.00 :	  3516a03f4e:   jne    3516a04842 <dl_main+0x2232>
    0.00 :	  3516a03f54:   test   $0x1,%ah
    0.00 :	  3516a03f57:   jne    3516a047ea <dl_main+0x21da>
    0.00 :	  3516a03f5d:   cmpq   $0x0,0x48(%rbx)
    0.00 :	  3516a03f62:   je     3516a04052 <dl_main+0x1a42>
    0.00 :	  3516a03f68:   mov    0x18(%rbx),%r12
    0.00 :	  3516a03f6c:   test   %r12,%r12
    0.00 :	  3516a03f6f:   je     3516a0400d <dl_main+0x19fd>
    0.00 :	  3516a03f75:   testb  $0x2,0x315(%r12)
    0.00 :	  3516a03f7e:   jne    3516a03fed <dl_main+0x19dd>
    0.00 :	  3516a03f80:   mov    0x38(%r12),%rax
    0.00 :	  3516a03f85:   mov    0x8(%r12),%r14
    0.00 :	  3516a03f8a:   mov    (%rax),%r13
    0.00 :	  3516a03f8d:   mov    %r14,%rsi
    0.00 :	  3516a03f90:   mov    %r13,%rdi
    0.00 :	  3516a03f93:   callq  3516a17390 <strcmp>
    0.00 :	  3516a03f98:   test   %eax,%eax
    0.00 :	  3516a03f9a:   jne    3516a03fc4 <dl_main+0x19b4>
    0.00 :	  3516a03f9c:   mov    0x340(%r12),%r8
    0.00 :	  3516a03fa4:   lea    0x16f75(%rip),%rsi        # 3516a1af20 <intel_02_known+0x460>
    0.00 :	  3516a03fab:   mov    $0x10,%ecx
    0.00 :	  3516a03fb0:   mov    %r13,%rdx
    0.00 :	  3516a03fb3:   mov    $0x1,%edi
    0.00 :	  3516a03fb8:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a03fbd:   mov    0x18(%r12),%r12
    0.00 :	  3516a03fc2:   jmp    3516a03f6c <dl_main+0x195c>
    0.00 :	  3516a03fc4:   mov    0x340(%r12),%r9
    0.00 :	  3516a03fcc:   lea    0x16f5c(%rip),%rsi        # 3516a1af2f <intel_02_known+0x46f>
    0.00 :	  3516a03fd3:   mov    $0x10,%r8d
    0.00 :	  3516a03fd9:   mov    %r14,%rcx
    0.00 :	  3516a03fdc:   mov    %r13,%rdx
    0.00 :	  3516a03fdf:   mov    $0x1,%edi
    0.00 :	  3516a03fe4:   xor    %eax,%eax
    0.00 :	  3516a03fe6:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a03feb:   jmp    3516a03fbd <dl_main+0x19ad>
    0.00 :	  3516a03fed:   mov    0x38(%r12),%rax
    0.00 :	  3516a03ff2:   lea    0x16eac(%rip),%rsi        # 3516a1aea5 <intel_02_known+0x3e5>
    0.00 :	  3516a03ff9:   mov    $0x1,%edi
    0.00 :	  3516a03ffe:   mov    (%rax),%rdx
    0.00 :	  3516a04001:   xor    %eax,%eax
    0.00 :	  3516a04003:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a04008:   jmp    3516a03fbd <dl_main+0x19ad>
    0.00 :	  3516a0400a:   mov    %r12,%rbx
    0.00 :	  3516a0400d:   cmpl   $0x3,-0x38(%rbp)
    0.00 :	  3516a04011:   jne    3516a048e2 <dl_main+0x22d2>
    0.00 :	  3516a04017:   mov    0x21bbbf(%rip),%eax        # 3516c1fbdc <_rtld_global_ro+0x3c>
    0.00 :	  3516a0401d:   test   %eax,%eax
    0.00 :	  3516a0401f:   js     3516a040dc <dl_main+0x1acc>
    0.00 :	  3516a04025:   cmpl   $0x0,0x21bba8(%rip)        # 3516c1fbd4 <_rtld_global_ro+0x34>
    0.00 :	  3516a0402c:   je     3516a040dc <dl_main+0x1acc>
    0.00 :	  3516a04032:   test   %eax,%eax
    0.00 :	  3516a04034:   mov    %rbx,%r12
    0.00 :	  3516a04037:   setne  %al
    0.00 :	  3516a0403a:   movzbl %al,%eax
    0.00 :	  3516a0403d:   mov    %eax,-0x98(%rbp)
    0.00 :	  3516a04043:   mov    0x18(%r12),%rax
    0.00 :	  3516a04048:   test   %rax,%rax
    0.00 :	  3516a0404b:   je     3516a04067 <dl_main+0x1a57>
    0.00 :	  3516a0404d:   mov    %rax,%r12
    0.00 :	  3516a04050:   jmp    3516a04043 <dl_main+0x1a33>
    0.00 :	  3516a04052:   lea    0x16eb3(%rip),%rsi        # 3516a1af0c <intel_02_known+0x44c>
    0.00 :	  3516a04059:   mov    $0x1,%edi
    0.00 :	  3516a0405e:   xor    %eax,%eax
    0.00 :	  3516a04060:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a04065:   jmp    3516a0400d <dl_main+0x19fd>
    0.00 :	  3516a04067:   lea    -0xa0(%rbp),%r13
    0.00 :	  3516a0406e:   lea    0x21c923(%rip),%rdi        # 3516c20998 <_rtld_global+0x998>
    0.00 :	  3516a04075:   cmp    %rdi,%r12
    0.00 :	  3516a04078:   je     3516a040a2 <dl_main+0x1a92>
    0.00 :	  3516a0407a:   testb  $0x2,0x315(%r12)
    0.00 :	  3516a04083:   jne    3516a040a2 <dl_main+0x1a92>
    0.00 :	  3516a04085:   lea    -0x299c(%rip),%rsi        # 3516a016f0 <relocate_doit>
    0.00 :	  3516a0408c:   lea    -0x2a53(%rip),%rdi        # 3516a01640 <print_unresolved>
    0.00 :	  3516a04093:   mov    %r13,%rdx
    0.00 :	  3516a04096:   mov    %r12,-0xa0(%rbp)
    0.00 :	  3516a0409d:   callq  3516a0e0b0 <_dl_receive_error>
    0.00 :	  3516a040a2:   mov    0x20(%r12),%r12
    0.00 :	  3516a040a7:   test   %r12,%r12
    0.00 :	  3516a040aa:   jne    3516a0406e <dl_main+0x1a5e>
    0.00 :	  3516a040ac:   testb  $0x4,0x21baee(%rip)        # 3516c1fba1 <_rtld_global_ro+0x1>
    0.00 :	  3516a040b3:   je     3516a040dc <dl_main+0x1acc>
    0.00 :	  3516a040b5:   cmpb   $0x0,-0xf0(%rbp)
    0.00 :	  3516a040bc:   je     3516a040dc <dl_main+0x1acc>
    0.00 :	  3516a040be:   andb   $0xfb,0x21cbe7(%rip)        # 3516c20cac <_rtld_global+0xcac>
    0.00 :	  3516a040c5:   lea    0x21c8cc(%rip),%rdi        # 3516c20998 <_rtld_global+0x998>
    0.00 :	  3516a040cc:   xor    %ecx,%ecx
    0.00 :	  3516a040ce:   mov    0x380(%rbx),%rsi
    0.00 :	  3516a040d5:   xor    %edx,%edx
    0.00 :	  3516a040d7:   callq  3516a0b2f0 <_dl_relocate_object>
    0.00 :	  3516a040dc:   cmpl   $0x0,0x21bc7d(%rip)        # 3516c1fd60 <version_info>
    0.00 :	  3516a040e3:   je     3516a042f2 <dl_main+0x1ce2>
    0.00 :	  3516a040e9:   mov    %rbx,%r12
    0.00 :	  3516a040ec:   mov    $0x1,%eax
    0.00 :	  3516a040f1:   mov    %r15,-0x100(%rbp)
    0.00 :	  3516a040f8:   mov    %rbx,-0x108(%rbp)
    0.00 :	  3516a040ff:   test   %r12,%r12
    0.00 :	  3516a04102:   je     3516a042e4 <dl_main+0x1cd4>
    0.00 :	  3516a04108:   mov    0x158(%r12),%rdx
    0.00 :	  3516a04110:   test   %rdx,%rdx
    0.00 :	  3516a04113:   je     3516a042c1 <dl_main+0x1cb1>
    0.00 :	  3516a04119:   mov    0x68(%r12),%rcx
    0.00 :	  3516a0411e:   test   %eax,%eax
    0.00 :	  3516a04120:   mov    (%r12),%rbx
    0.00 :	  3516a04124:   mov    0x8(%rdx),%r13
    0.00 :	  3516a04128:   mov    0x8(%rcx),%r15
    0.00 :	  3516a0412c:   je     3516a04141 <dl_main+0x1b31>
    0.00 :	  3516a0412e:   lea    0x16e0f(%rip),%rsi        # 3516a1af44 <intel_02_known+0x484>
    0.00 :	  3516a04135:   mov    $0x1,%edi
    0.00 :	  3516a0413a:   xor    %eax,%eax
    0.00 :	  3516a0413c:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a04141:   mov    0x8(%r12),%rdx
    0.00 :	  3516a04146:   cmpb   $0x0,(%rdx)
    0.00 :	  3516a04149:   jne    3516a04155 <dl_main+0x1b45>
    0.00 :	  3516a0414b:   mov    0x21ba36(%rip),%rax        # 3516c1fb88 <_dl_argv>
    0.00 :	  3516a04152:   mov    (%rax),%rdx
    0.00 :	  3516a04155:   lea    0x16e00(%rip),%rsi        # 3516a1af5c <intel_02_known+0x49c>
    0.00 :	  3516a0415c:   mov    $0x1,%edi
    0.00 :	  3516a04161:   xor    %eax,%eax
    0.00 :	  3516a04163:   add    %rbx,%r13
    0.00 :	  3516a04166:   mov    %r12,%r14
    0.00 :	  3516a04169:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a0416e:   mov    0x4(%r13),%eax
    0.00 :	  3516a04172:   mov    0x21be87(%rip),%r12        # 3516c20000 <_rtld_global>
    0.00 :	  3516a04179:   mov    0x2c0(%r12),%ebx
    0.00 :	  3516a04181:   lea    (%r15,%rax,1),%rax
    0.00 :	  3516a04185:   mov    %rax,-0xe8(%rbp)
    0.00 :	  3516a0418c:   test   %ebx,%ebx
    0.00 :	  3516a0418e:   je     3516a042cb <dl_main+0x1cbb>
    0.00 :	  3516a04194:   mov    0x2b8(%r12),%rcx
    0.00 :	  3516a0419c:   sub    $0x1,%ebx
    0.00 :	  3516a0419f:   mov    -0xe8(%rbp),%rdi
    0.00 :	  3516a041a6:   mov    %ebx,%eax
    0.00 :	  3516a041a8:   lea    0x0(,%rax,8),%rdx
    0.00 :	  3516a041b0:   mov    (%rcx,%rax,8),%rsi
    0.00 :	  3516a041b4:   mov    %rdx,-0x138(%rbp)
    0.00 :	  3516a041bb:   callq  3516a0ee50 <_dl_name_match_p>
    0.00 :	  3516a041c0:   test   %eax,%eax
    0.00 :	  3516a041c2:   mov    -0x138(%rbp),%rdx
    0.00 :	  3516a041c9:   je     3516a0418c <dl_main+0x1b7c>
    0.00 :	  3516a041cb:   mov    0x2b8(%r12),%rax
    0.00 :	  3516a041d3:   mov    (%rax,%rdx,1),%rbx
    0.00 :	  3516a041d7:   mov    0x8(%r13),%r12d
    0.00 :	  3516a041db:   lea    0x0(%r13,%r12,1),%r12
    0.00 :	  3516a041e0:   test   %rbx,%rbx
    0.00 :	  3516a041e3:   je     3516a042d2 <dl_main+0x1cc2>
    0.00 :	  3516a041e9:   mov    0x68(%rbx),%rax
    0.00 :	  3516a041ed:   mov    0x8(%r12),%r8d
    0.00 :	  3516a041f2:   mov    0x8(%rax),%rax
    0.00 :	  3516a041f6:   lea    (%r15,%r8,1),%rcx
    0.00 :	  3516a041fa:   mov    %rax,-0xe8(%rbp)
    0.00 :	  3516a04201:   mov    0x168(%rbx),%rax
    0.00 :	  3516a04208:   test   %rax,%rax
    0.00 :	  3516a0420b:   je     3516a042d7 <dl_main+0x1cc7>
    0.00 :	  3516a04211:   mov    (%rbx),%rdx
    0.00 :	  3516a04214:   add    0x8(%rax),%rdx
    0.00 :	  3516a04218:   jmp    3516a0422a <dl_main+0x1c1a>
    0.00 :	  3516a0421a:   mov    0x10(%rdx),%eax
    0.00 :	  3516a0421d:   test   %eax,%eax
    0.00 :	  3516a0421f:   je     3516a042d7 <dl_main+0x1cc7>
    0.00 :	  3516a04225:   mov    %eax,%eax
    0.00 :	  3516a04227:   add    %rax,%rdx
    0.00 :	  3516a0422a:   mov    0xc(%rdx),%eax
    0.00 :	  3516a0422d:   mov    %rcx,%rdi
    0.00 :	  3516a04230:   mov    %rdx,-0x138(%rbp)
    0.00 :	  3516a04237:   mov    %rcx,-0x140(%rbp)
    0.00 :	  3516a0423e:   mov    %r8,-0x130(%rbp)
    0.00 :	  3516a04245:   mov    (%rdx,%rax,1),%esi
    0.00 :	  3516a04248:   add    -0xe8(%rbp),%rsi
    0.00 :	  3516a0424f:   callq  3516a17390 <strcmp>
    0.00 :	  3516a04254:   test   %eax,%eax
    0.00 :	  3516a04256:   mov    -0x138(%rbp),%rdx
    0.00 :	  3516a0425d:   mov    -0x140(%rbp),%rcx
    0.00 :	  3516a04264:   mov    -0x130(%rbp),%r8
    0.00 :	  3516a0426b:   jne    3516a0421a <dl_main+0x1c0a>
    0.00 :	  3516a0426d:   mov    0x8(%rbx),%r9
    0.00 :	  3516a04271:   test   %r9,%r9
    0.00 :	  3516a04274:   je     3516a042d7 <dl_main+0x1cc7>
    0.00 :	  3516a04276:   mov    0x4(%r13),%edx
    0.00 :	  3516a0427a:   testb  $0x2,0x4(%r12)
    0.00 :	  3516a04280:   lea    0x16ce5(%rip),%rax        # 3516a1af6c <intel_02_known+0x4ac>
    0.00 :	  3516a04287:   lea    0x16c16(%rip),%r8        # 3516a1aea4 <intel_02_known+0x3e4>
    0.00 :	  3516a0428e:   lea    0x16cdf(%rip),%rsi        # 3516a1af74 <intel_02_known+0x4b4>
    0.00 :	  3516a04295:   mov    $0x1,%edi
    0.00 :	  3516a0429a:   lea    (%r15,%rdx,1),%rdx
    0.00 :	  3516a0429e:   cmovne %rax,%r8
    0.00 :	  3516a042a2:   xor    %eax,%eax
    0.00 :	  3516a042a4:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a042a9:   mov    0xc(%r12),%eax
    0.00 :	  3516a042ae:   test   %eax,%eax
    0.00 :	  3516a042b0:   je     3516a042fe <dl_main+0x1cee>
    0.00 :	  3516a042b2:   mov    %eax,%eax
    0.00 :	  3516a042b4:   add    %rax,%r12
    0.00 :	  3516a042b7:   jmpq   3516a041e0 <dl_main+0x1bd0>
    0.00 :	  3516a042bc:   mov    %r14,%r12
    0.00 :	  3516a042bf:   xor    %eax,%eax
    0.00 :	  3516a042c1:   mov    0x18(%r12),%r12
    0.00 :	  3516a042c6:   jmpq   3516a040ff <dl_main+0x1aef>
    0.00 :	  3516a042cb:   xor    %ebx,%ebx
    0.00 :	  3516a042cd:   jmpq   3516a041d7 <dl_main+0x1bc7>
    0.00 :	  3516a042d2:   mov    0x8(%r12),%r8d
    0.00 :	  3516a042d7:   lea    (%r15,%r8,1),%rcx
    0.00 :	  3516a042db:   lea    0x16c80(%rip),%r9        # 3516a1af62 <intel_02_known+0x4a2>
    0.00 :	  3516a042e2:   jmp    3516a04276 <dl_main+0x1c66>
    0.00 :	  3516a042e4:   mov    -0x100(%rbp),%r15
    0.00 :	  3516a042eb:   mov    -0x108(%rbp),%rbx
    0.00 :	  3516a042f2:   xor    %edi,%edi
    0.00 :	  3516a042f4:   callq  3516a16fd0 <_Exit>
    0.00 :	  3516a042f9:   jmpq   3516a035f8 <dl_main+0xfe8>
    0.00 :	  3516a042fe:   mov    0xc(%r13),%eax
    0.00 :	  3516a04302:   test   %eax,%eax
    0.00 :	  3516a04304:   je     3516a042bc <dl_main+0x1cac>
    0.00 :	  3516a04306:   mov    %eax,%eax
    0.00 :	  3516a04308:   add    %rax,%r13
    0.00 :	  3516a0430b:   jmpq   3516a0416e <dl_main+0x1b5e>
    0.00 :	  3516a04310:   mov    0x8(%rax),%r13
    0.00 :	  3516a04314:   callq  3516a024c0 <init_tls>
    0.00 :	  3516a04319:   mov    0x21bac0(%rip),%rsi        # 3516c1fde0 <_dl_random>
    0.00 :	  3516a04320:   mov    %rax,%r15
    0.00 :	  3516a04323:   test   %rsi,%rsi
    0.00 :	  3516a04326:   je     3516a0466a <dl_main+0x205a>
    0.00 :	  3516a0432c:   mov    (%rsi),%rcx
    0.00 :	  3516a0432f:   mov    %rcx,-0x68(%rbp)
    0.00 :	  3516a04333:   mov    %rcx,%fs:0x28
    0.00 :	  3516a0433c:   cmpl   $0x0,0x21b971(%rip)        # 3516c1fcb4 <_rtld_global_ro+0x114>
    0.00 :	  3516a04343:   je     3516a04366 <dl_main+0x1d56>
    0.00 :	  3516a04345:   test   %rsi,%rsi
    0.00 :	  3516a04348:   je     3516a04709 <dl_main+0x20f9>
    0.00 :	  3516a0434e:   mov    0x8(%rsi),%rdx
    0.00 :	  3516a04352:   mov    %rdx,-0x68(%rbp)
    0.00 :	  3516a04356:   mov    %rdx,%fs:0x30
    0.00 :	  3516a0435f:   mov    %rdx,0x21ba0a(%rip)        # 3516c1fd70 <__pointer_chk_guard_local>
    0.00 :	  3516a04366:   lea    -0x31(%rbp),%rcx
    0.00 :	  3516a0436a:   lea    -0x48(%rbp),%rsi
    0.00 :	  3516a0436e:   lea    -0x80(%rbp),%rdi
    0.00 :	  3516a04372:   lea    -0xc0(%rbp),%r8
    0.00 :	  3516a04379:   lea    -0x60(%rbp),%r12
    0.00 :	  3516a0437d:   mov    %r15,-0x120(%rbp)
    0.00 :	  3516a04384:   movq   $0x0,0x21ba51(%rip)        # 3516c1fde0 <_dl_random>
    0.00 :	  3516a0438f:   movq   $0x0,-0x100(%rbp)
    0.00 :	  3516a0439a:   mov    %rbx,%r15
    0.00 :	  3516a0439d:   mov    %rcx,-0xf8(%rbp)
    0.00 :	  3516a043a4:   mov    %rsi,-0xe8(%rbp)
    0.00 :	  3516a043ab:   mov    %rdi,-0x118(%rbp)
    0.00 :	  3516a043b2:   mov    %r8,-0x110(%rbp)
    0.00 :	  3516a043b9:   mov    0x0(%r13),%rax
    0.00 :	  3516a043bd:   mov    -0x118(%rbp),%r8
    0.00 :	  3516a043c4:   lea    -0x37db(%rip),%rcx        # 3516a00bf0 <dlmopen_doit>
    0.00 :	  3516a043cb:   mov    -0xf8(%rbp),%rdx
    0.00 :	  3516a043d2:   mov    -0xe8(%rbp),%rdi
    0.00 :	  3516a043d9:   mov    %r12,%rsi
    0.00 :	  3516a043dc:   mov    0x21cb3d(%rip),%rbx        # 3516c20f20 <_rtld_global+0xf20>
    0.00 :	  3516a043e3:   movq   $0x0,-0x78(%rbp)
    0.00 :	  3516a043eb:   mov    %rax,-0x80(%rbp)
    0.00 :	  3516a043ef:   movq   $0x0,-0x60(%rbp)
    0.00 :	  3516a043f7:   callq  3516a0e130 <_dl_catch_error>
    0.00 :	  3516a043fc:   mov    -0x60(%rbp),%rcx
    0.00 :	  3516a04400:   test   %rcx,%rcx
    0.00 :	  3516a04403:   jne    3516a04464 <dl_main+0x1e54>
    0.00 :	  3516a04405:   lea    0x16a7b(%rip),%rax        # 3516a1ae87 <intel_02_known+0x3c7>
    0.00 :	  3516a0440c:   mov    -0x110(%rbp),%r8
    0.00 :	  3516a04413:   mov    -0xf8(%rbp),%rdx
    0.00 :	  3516a0441a:   mov    -0xe8(%rbp),%rdi
    0.00 :	  3516a04421:   lea    -0x38a8(%rip),%rcx        # 3516a00b80 <lookup_doit>
    0.00 :	  3516a04428:   mov    %r12,%rsi
    0.00 :	  3516a0442b:   mov    %rax,-0xc0(%rbp)
    0.00 :	  3516a04432:   mov    -0x78(%rbp),%rax
    0.00 :	  3516a04436:   mov    %rax,-0xb8(%rbp)
    0.00 :	  3516a0443d:   callq  3516a0e130 <_dl_catch_error>
    0.00 :	  3516a04442:   cmpq   $0x0,-0x60(%rbp)
    0.00 :	  3516a04447:   je     3516a0457a <dl_main+0x1f6a>
    0.00 :	  3516a0444d:   mov    -0x78(%rbp),%rdi
    0.00 :	  3516a04451:   movslq %ebx,%rbx
    0.00 :	  3516a04454:   callq  3516a14600 <_dl_close>
    0.00 :	  3516a04459:   mov    -0x60(%rbp),%rcx
    0.00 :	  3516a0445d:   mov    %rbx,0x21cabc(%rip)        # 3516c20f20 <_rtld_global+0xf20>
    0.00 :	  3516a04464:   mov    0x0(%r13),%rdx
    0.00 :	  3516a04468:   lea    0x179d9(%rip),%rsi        # 3516a1be48 <expected1.10492+0x9e7>
    0.00 :	  3516a0446f:   xor    %eax,%eax
    0.00 :	  3516a04471:   mov    $0x2,%edi
    0.00 :	  3516a04476:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a0447b:   cmpb   $0x0,-0x31(%rbp)
    0.00 :	  3516a0447f:   je     3516a0448a <dl_main+0x1e7a>
    0.00 :	  3516a04481:   mov    -0x60(%rbp),%rdi
    0.00 :	  3516a04485:   callq  3516a00af0 <free@plt>
    0.00 :	  3516a0448a:   mov    0x21cb4f(%rip),%rax        # 3516c20fe0 <audit_list>
    0.00 :	  3516a04491:   mov    0x8(%r13),%r13
    0.00 :	  3516a04495:   cmp    %r13,0x8(%rax)
    0.00 :	  3516a04499:   jne    3516a043b9 <dl_main+0x1da9>
    0.00 :	  3516a0449f:   mov    0x21b80b(%rip),%eax        # 3516c1fcb0 <_rtld_global_ro+0x110>
    0.00 :	  3516a044a5:   mov    %r15,%rbx
    0.00 :	  3516a044a8:   mov    -0x120(%rbp),%r15
    0.00 :	  3516a044af:   test   %eax,%eax
    0.00 :	  3516a044b1:   je     3516a03254 <dl_main+0xc44>
    0.00 :	  3516a044b7:   lea    -0x90(%rbp),%r12
    0.00 :	  3516a044be:   lea    0x21c4d3(%rip),%rdi        # 3516c20998 <_rtld_global+0x998>
    0.00 :	  3516a044c5:   mov    %rbx,-0x90(%rbp)
    0.00 :	  3516a044cc:   mov    %r15,%rcx
    0.00 :	  3516a044cf:   lea    0x10(%r12),%r8
    0.00 :	  3516a044d4:   mov    %rdi,-0x88(%rbp)
    0.00 :	  3516a044db:   mov    %r8,-0xe8(%rbp)
    0.00 :	  3516a044e2:   mov    %rbx,%r8
    0.00 :	  3516a044e5:   mov    0x21b7bc(%rip),%rbx        # 3516c1fca8 <_rtld_global_ro+0x108>
    0.00 :	  3516a044ec:   xor    %r14d,%r14d
    0.00 :	  3516a044ef:   cmp    %eax,%r14d
    0.00 :	  3516a044f2:   jae    3516a046ed <dl_main+0x20dd>
    0.00 :	  3516a044f8:   mov    0x10(%rbx),%rax
    0.00 :	  3516a044fc:   test   %rax,%rax
    0.00 :	  3516a044ff:   je     3516a04567 <dl_main+0x1f57>
    0.00 :	  3516a04501:   mov    (%r12),%r13
    0.00 :	  3516a04505:   mov    %r14d,%r15d
    0.00 :	  3516a04508:   xor    %esi,%esi
    0.00 :	  3516a0450a:   add    $0x46,%r15
    0.00 :	  3516a0450e:   mov    %rcx,-0x140(%rbp)
    0.00 :	  3516a04515:   mov    %r8,-0x130(%rbp)
    0.00 :	  3516a0451c:   shl    $0x4,%r15
    0.00 :	  3516a04520:   lea    0x8(%r13,%r15,1),%rdx
    0.00 :	  3516a04525:   mov    %r13,%rdi
    0.00 :	  3516a04528:   callq  *%rax
    0.00 :	  3516a0452a:   mov    %eax,0x10(%r15,%r13,1)
    0.00 :	  3516a0452f:   movzbl 0x315(%r13),%edi
    0.00 :	  3516a04537:   test   %eax,%eax
    0.00 :	  3516a04539:   setne  %al
    0.00 :	  3516a0453c:   mov    %edi,%edx
    0.00 :	  3516a0453e:   shr    $0x4,%dl
    0.00 :	  3516a04541:   mov    %edx,%esi
    0.00 :	  3516a04543:   mov    %edi,%edx
    0.00 :	  3516a04545:   and    $0x1,%esi
    0.00 :	  3516a04548:   and    $0xffffffffffffffef,%edx
    0.00 :	  3516a0454b:   or     %esi,%eax
    0.00 :	  3516a0454d:   shl    $0x4,%eax
    0.00 :	  3516a04550:   or     %eax,%edx
    0.00 :	  3516a04552:   mov    %dl,0x315(%r13)
    0.00 :	  3516a04559:   mov    -0x130(%rbp),%r8
    0.00 :	  3516a04560:   mov    -0x140(%rbp),%rcx
    0.00 :	  3516a04567:   mov    0x40(%rbx),%rbx
    0.00 :	  3516a0456b:   add    $0x1,%r14d
    0.00 :	  3516a0456f:   mov    0x21b73b(%rip),%eax        # 3516c1fcb0 <_rtld_global_ro+0x110>
    0.00 :	  3516a04575:   jmpq   3516a044ef <dl_main+0x1edf>
    0.00 :	  3516a0457a:   mov    -0xb0(%rbp),%rax
    0.00 :	  3516a04581:   test   %rax,%rax
    0.00 :	  3516a04584:   je     3516a0444d <dl_main+0x1e3d>
    0.00 :	  3516a0458a:   mov    $0x1,%edi
    0.00 :	  3516a0458f:   callq  *%rax
    0.00 :	  3516a04591:   test   %eax,%eax
    0.00 :	  3516a04593:   je     3516a0444d <dl_main+0x1e3d>
    0.00 :	  3516a04599:   cmp    $0x1,%eax
    0.00 :	  3516a0459c:   ja     3516a0444d <dl_main+0x1e3d>
    0.00 :	  3516a045a2:   mov    $0x48,%edi
    0.00 :	  3516a045a7:   xor    %r14d,%r14d
    0.00 :	  3516a045aa:   callq  3516a00ab0 <malloc@plt>
    0.00 :	  3516a045af:   lea    0x1584a(%rip),%r9        # 3516a19e00 <audit_iface_names.12950>
    0.00 :	  3516a045b6:   mov    %r13,-0x128(%rbp)
    0.00 :	  3516a045bd:   mov    %rax,%rbx
    0.00 :	  3516a045c0:   mov    %r12,%r13
    0.00 :	  3516a045c3:   mov    %r9,%r12
    0.00 :	  3516a045c6:   mov    -0x110(%rbp),%r8
    0.00 :	  3516a045cd:   mov    -0xf8(%rbp),%rdx
    0.00 :	  3516a045d4:   lea    -0x3a5b(%rip),%rcx        # 3516a00b80 <lookup_doit>
    0.00 :	  3516a045db:   mov    -0xe8(%rbp),%rdi
    0.00 :	  3516a045e2:   mov    %r13,%rsi
    0.00 :	  3516a045e5:   mov    %r12,-0xc0(%rbp)
    0.00 :	  3516a045ec:   callq  3516a0e130 <_dl_catch_error>
    0.00 :	  3516a045f1:   cmpq   $0x0,-0x60(%rbp)
    0.00 :	  3516a045f6:   je     3516a046b5 <dl_main+0x20a5>
    0.00 :	  3516a045fc:   mov    %r14d,%eax
    0.00 :	  3516a045ff:   movq   $0x0,(%rbx,%rax,8)
    0.00 :	  3516a04607:   xor    %esi,%esi
    0.00 :	  3516a04609:   mov    %r12,%rdi
    0.00 :	  3516a0460c:   callq  3516a18ba0 <__rawmemchr>
    0.00 :	  3516a04611:   cmpb   $0x0,0x1(%rax)
    0.00 :	  3516a04615:   lea    0x1(%rax),%r12
    0.00 :	  3516a04619:   je     3516a04621 <dl_main+0x2011>
    0.00 :	  3516a0461b:   add    $0x1,%r14d
    0.00 :	  3516a0461f:   jmp    3516a045c6 <dl_main+0x1fb6>
    0.00 :	  3516a04621:   mov    %r13,%r12
    0.00 :	  3516a04624:   mov    -0x128(%rbp),%r13
    0.00 :	  3516a0462b:   movq   $0x0,0x40(%rbx)
    0.00 :	  3516a04633:   cmpq   $0x0,-0x100(%rbp)
    0.00 :	  3516a0463b:   je     3516a04720 <dl_main+0x2110>
    0.00 :	  3516a04641:   mov    -0x100(%rbp),%rsi
    0.00 :	  3516a04648:   mov    %rbx,0x40(%rsi)
    0.00 :	  3516a0464c:   mov    -0x78(%rbp),%rax
    0.00 :	  3516a04650:   addl   $0x1,0x21b659(%rip)        # 3516c1fcb0 <_rtld_global_ro+0x110>
    0.00 :	  3516a04657:   orb    $0x8,0x315(%rax)
    0.00 :	  3516a0465e:   mov    %rbx,-0x100(%rbp)
    0.00 :	  3516a04665:   jmpq   3516a0448a <dl_main+0x1e7a>
    0.00 :	  3516a0466a:   movq   $0x0,-0x68(%rbp)
    0.00 :	  3516a04672:   lea    -0x68(%rbp),%rcx
    0.00 :	  3516a04676:   movb   $0xff,-0x61(%rbp)
    0.00 :	  3516a0467a:   movb   $0xa,-0x62(%rbp)
    0.00 :	  3516a0467e:   rdtsc  
    0.00 :	  3516a04680:   lea    0x21cabd(%rip),%rdx        # 3516c21144 <rtld_errno>
    0.00 :	  3516a04687:   movzwl %ax,%eax
    0.00 :	  3516a0468a:   and    $0x7ffff0,%ecx
    0.00 :	  3516a04690:   and    $0x7fff00,%edx
    0.00 :	  3516a04696:   shl    $0x8,%rax
    0.00 :	  3516a0469a:   shl    $0x29,%rcx
    0.00 :	  3516a0469e:   shl    $0x23,%rdx
    0.00 :	  3516a046a2:   xor    %rdx,%rcx
    0.00 :	  3516a046a5:   xor    -0x68(%rbp),%rcx
    0.00 :	  3516a046a9:   xor    %rax,%rcx
    0.00 :	  3516a046ac:   mov    %rcx,-0x68(%rbp)
    0.00 :	  3516a046b0:   jmpq   3516a04333 <dl_main+0x1d23>
    0.00 :	  3516a046b5:   mov    -0xb0(%rbp),%rdx
    0.00 :	  3516a046bc:   test   %rdx,%rdx
    0.00 :	  3516a046bf:   je     3516a045fc <dl_main+0x1fec>
    0.00 :	  3516a046c5:   mov    %r14d,%eax
    0.00 :	  3516a046c8:   lea    0x21c2c9(%rip),%rcx        # 3516c20998 <_rtld_global+0x998>
    0.00 :	  3516a046cf:   mov    %rdx,(%rbx,%rax,8)
    0.00 :	  3516a046d3:   add    $0xdf,%rax
    0.00 :	  3516a046d9:   lea    0x21b930(%rip),%rdx        # 3516c20010 <_rtld_global+0x10>
    0.00 :	  3516a046e0:   shl    $0x4,%rax
    0.00 :	  3516a046e4:   mov    %rcx,(%rax,%rdx,1)
    0.00 :	  3516a046e8:   jmpq   3516a04607 <dl_main+0x1ff7>
    0.00 :	  3516a046ed:   add    $0x8,%r12
    0.00 :	  3516a046f1:   cmp    -0xe8(%rbp),%r12
    0.00 :	  3516a046f8:   jne    3516a044e5 <dl_main+0x1ed5>
    0.00 :	  3516a046fe:   mov    %rcx,%r15
    0.00 :	  3516a04701:   mov    %r8,%rbx
    0.00 :	  3516a04704:   jmpq   3516a03254 <dl_main+0xc44>
    0.00 :	  3516a04709:   rdtsc  
    0.00 :	  3516a0470b:   shl    $0x20,%rdx
    0.00 :	  3516a0470f:   mov    %eax,%eax
    0.00 :	  3516a04711:   or     %rax,%rdx
    0.00 :	  3516a04714:   xor    %rcx,%rdx
    0.00 :	  3516a04717:   mov    %rdx,-0x68(%rbp)
    0.00 :	  3516a0471b:   jmpq   3516a04356 <dl_main+0x1d46>
    0.00 :	  3516a04720:   mov    %rbx,0x21b581(%rip)        # 3516c1fca8 <_rtld_global_ro+0x108>
    0.00 :	  3516a04727:   jmpq   3516a0464c <dl_main+0x203c>
    0.00 :	  3516a0472c:   cmp    %rax,%rcx
    0.00 :	  3516a0472f:   je     3516a03524 <dl_main+0xf14>
    0.00 :	  3516a04735:   mov    %rax,0x21c27c(%rip)        # 3516c209b8 <_rtld_global+0x9b8>
    0.00 :	  3516a0473c:   jmpq   3516a03527 <dl_main+0xf17>
    0.00 :	  3516a04741:   callq  3516a024c0 <init_tls>
    0.00 :	  3516a04746:   mov    %rax,%r15
    0.00 :	  3516a04749:   jmpq   3516a0358f <dl_main+0xf7f>
    0.00 :	  3516a0474e:   movq   $0x0,-0x68(%rbp)
    0.00 :	  3516a04756:   lea    -0x68(%rbp),%rcx
    0.00 :	  3516a0475a:   movb   $0xff,-0x61(%rbp)
    0.00 :	  3516a0475e:   movb   $0xa,-0x62(%rbp)
    0.00 :	  3516a04762:   rdtsc  
    0.00 :	  3516a04764:   lea    0x21c9d9(%rip),%rdx        # 3516c21144 <rtld_errno>
    0.00 :	  3516a0476b:   movzwl %ax,%eax
    0.00 :	  3516a0476e:   and    $0x7ffff0,%ecx
    0.00 :	  3516a04774:   and    $0x7fff00,%edx
    0.00 :	  3516a0477a:   shl    $0x8,%rax
    0.00 :	  3516a0477e:   shl    $0x29,%rcx
    0.00 :	  3516a04782:   shl    $0x23,%rdx
    0.00 :	  3516a04786:   xor    %rdx,%rcx
    0.00 :	  3516a04789:   xor    -0x68(%rbp),%rcx
    0.00 :	  3516a0478d:   xor    %rax,%rcx
    0.00 :	  3516a04790:   mov    %rcx,-0x68(%rbp)
    0.00 :	  3516a04794:   jmpq   3516a035b0 <dl_main+0xfa0>
    0.00 :	  3516a04799:   mov    0x21b860(%rip),%r13        # 3516c20000 <_rtld_global>
    0.00 :	  3516a047a0:   testb  $0x8,0x315(%r13)
    0.00 :	  3516a047a8:   jne    3516a03931 <dl_main+0x1321>
    0.00 :	  3516a047ae:   mov    0x21b4f3(%rip),%r12        # 3516c1fca8 <_rtld_global_ro+0x108>
    0.00 :	  3516a047b5:   xor    %ebx,%ebx
    0.00 :	  3516a047b7:   cmp    %eax,%ebx
    0.00 :	  3516a047b9:   jae    3516a03931 <dl_main+0x1321>
    0.00 :	  3516a047bf:   mov    (%r12),%rax
    0.00 :	  3516a047c3:   test   %rax,%rax
    0.00 :	  3516a047c6:   je     3516a047da <dl_main+0x21ca>
    0.00 :	  3516a047c8:   mov    %ebx,%edx
    0.00 :	  3516a047ca:   xor    %esi,%esi
    0.00 :	  3516a047cc:   shl    $0x4,%rdx
    0.00 :	  3516a047d0:   lea    0x468(%r13,%rdx,1),%rdi
    0.00 :	  3516a047d8:   callq  *%rax
    0.00 :	  3516a047da:   mov    0x40(%r12),%r12
    0.00 :	  3516a047df:   add    $0x1,%ebx
    0.00 :	  3516a047e2:   mov    0x21b4c8(%rip),%eax        # 3516c1fcb0 <_rtld_global_ro+0x110>
    0.00 :	  3516a047e8:   jmp    3516a047b7 <dl_main+0x21a7>
    0.00 :	  3516a047ea:   xor    %eax,%eax
    0.00 :	  3516a047ec:   cmpl   $0x0,0x21b3e9(%rip)        # 3516c1fbdc <_rtld_global_ro+0x3c>
    0.00 :	  3516a047f3:   lea    -0xa0(%rbp),%rdx
    0.00 :	  3516a047fa:   lea    -0x3111(%rip),%rsi        # 3516a016f0 <relocate_doit>
    0.00 :	  3516a04801:   lea    -0x31c8(%rip),%rdi        # 3516a01640 <print_unresolved>
    0.00 :	  3516a04808:   mov    %rbx,-0xa0(%rbp)
    0.00 :	  3516a0480f:   mov    %rbx,%r12
    0.00 :	  3516a04812:   setne  %al
    0.00 :	  3516a04815:   mov    %eax,-0x98(%rbp)
    0.00 :	  3516a0481b:   callq  3516a0e0b0 <_dl_receive_error>
    0.00 :	  3516a04820:   mov    0x10(%rbx),%r13
    0.00 :	  3516a04824:   mov    $0x1,%eax
    0.00 :	  3516a04829:   mov    0x0(%r13),%rdx
    0.00 :	  3516a0482d:   test   %rdx,%rdx
    0.00 :	  3516a04830:   je     3516a048d2 <dl_main+0x22c2>
    0.00 :	  3516a04836:   cmp    $0x1,%rdx
    0.00 :	  3516a0483a:   je     3516a0488c <dl_main+0x227c>
    0.00 :	  3516a0483c:   add    $0x10,%r13
    0.00 :	  3516a04840:   jmp    3516a04829 <dl_main+0x2219>
    0.00 :	  3516a04842:   cmp    0x2c0(%r12),%r13d
    0.00 :	  3516a0484a:   jae    3516a0400a <dl_main+0x19fa>
    0.00 :	  3516a04850:   mov    0x2b8(%r12),%rax
    0.00 :	  3516a04858:   mov    %r13d,%edx
    0.00 :	  3516a0485b:   mov    (%rax,%rdx,8),%rbx
    0.00 :	  3516a0485f:   testb  $0x2,0x315(%rbx)
    0.00 :	  3516a04866:   je     3516a04982 <dl_main+0x2372>
    0.00 :	  3516a0486c:   mov    0x38(%rbx),%rax
    0.00 :	  3516a04870:   lea    0x1662e(%rip),%rsi        # 3516a1aea5 <intel_02_known+0x3e5>
    0.00 :	  3516a04877:   mov    $0x1,%edi
    0.00 :	  3516a0487c:   mov    (%rax),%rdx
    0.00 :	  3516a0487f:   xor    %eax,%eax
    0.00 :	  3516a04881:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a04886:   add    $0x1,%r13d
    0.00 :	  3516a0488a:   jmp    3516a04842 <dl_main+0x2232>
    0.00 :	  3516a0488c:   mov    0x18(%r12),%r12
    0.00 :	  3516a04891:   cmpl   $0x0,0x3cc(%r12)
    0.00 :	  3516a0489a:   jne    3516a0483c <dl_main+0x222c>
    0.00 :	  3516a0489c:   test   %al,%al
    0.00 :	  3516a0489e:   je     3516a048b3 <dl_main+0x22a3>
    0.00 :	  3516a048a0:   lea    0x16643(%rip),%rsi        # 3516a1aeea <intel_02_known+0x42a>
    0.00 :	  3516a048a7:   mov    $0x1,%edi
    0.00 :	  3516a048ac:   xor    %eax,%eax
    0.00 :	  3516a048ae:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a048b3:   mov    0x8(%r12),%rdx
    0.00 :	  3516a048b8:   lea    0x16648(%rip),%rsi        # 3516a1af07 <intel_02_known+0x447>
    0.00 :	  3516a048bf:   xor    %eax,%eax
    0.00 :	  3516a048c1:   mov    $0x1,%edi
    0.00 :	  3516a048c6:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a048cb:   xor    %eax,%eax
    0.00 :	  3516a048cd:   jmpq   3516a0483c <dl_main+0x222c>
    0.00 :	  3516a048d2:   xor    $0x1,%eax
    0.00 :	  3516a048d5:   movzbl %al,%edi
    0.00 :	  3516a048d8:   callq  3516a16fd0 <_Exit>
    0.00 :	  3516a048dd:   jmpq   3516a0400d <dl_main+0x19fd>
    0.00 :	  3516a048e2:   lea    -0x58(%rbp),%r14
    0.00 :	  3516a048e6:   mov    $0x1,%r12d
    0.00 :	  3516a048ec:   cmp    0x21b475(%rip),%r12d        # 3516c1fd68 <_dl_argc>
    0.00 :	  3516a048f3:   jae    3516a042f2 <dl_main+0x1ce2>
    0.00 :	  3516a048f9:   mov    0x21b288(%rip),%rax        # 3516c1fb88 <_dl_argv>
    0.00 :	  3516a04900:   mov    %r12d,%r13d
    0.00 :	  3516a04903:   mov    0x380(%rbx),%rcx
    0.00 :	  3516a0490a:   xor    %r8d,%r8d
    0.00 :	  3516a0490d:   mov    $0x1,%r9d
    0.00 :	  3516a04913:   mov    %r14,%rdx
    0.00 :	  3516a04916:   mov    %rbx,%rsi
    0.00 :	  3516a04919:   movq   $0x0,-0x58(%rbp)
    0.00 :	  3516a04921:   mov    (%rax,%r13,8),%rdi
    0.00 :	  3516a04925:   movq   $0x0,0x8(%rsp)
    0.00 :	  3516a0492e:   movl   $0x1,(%rsp)
    0.00 :	  3516a04935:   callq  3516a09cf0 <_dl_lookup_symbol_x>
    0.00 :	  3516a0493a:   xor    %ecx,%ecx
    0.00 :	  3516a0493c:   test   %rax,%rax
    0.00 :	  3516a0493f:   je     3516a04944 <dl_main+0x2334>
    0.00 :	  3516a04941:   mov    (%rax),%rcx
    0.00 :	  3516a04944:   mov    -0x58(%rbp),%rax
    0.00 :	  3516a04948:   lea    0x17549(%rip),%rsi        # 3516a1be98 <expected1.10492+0xa37>
    0.00 :	  3516a0494f:   mov    $0x10,%r9d
    0.00 :	  3516a04955:   mov    $0x1,%edi
    0.00 :	  3516a0495a:   add    $0x1,%r12d
    0.00 :	  3516a0495e:   mov    0x8(%rax),%r8
    0.00 :	  3516a04962:   mov    0x21b21f(%rip),%rax        # 3516c1fb88 <_dl_argv>
    0.00 :	  3516a04969:   mov    (%rax,%r13,8),%rdx
    0.00 :	  3516a0496d:   mov    %rcx,(%rsp)
    0.00 :	  3516a04971:   xor    %eax,%eax
    0.00 :	  3516a04973:   mov    $0x10,%ecx
    0.00 :	  3516a04978:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a0497d:   jmpq   3516a048ec <dl_main+0x22dc>
    0.00 :	  3516a04982:   mov    0x21b29f(%rip),%rdi        # 3516c1fc28 <_rtld_global_ro+0x88>
    0.00 :	  3516a04989:   mov    %rbx,%rsi
    0.00 :	  3516a0498c:   callq  3516a0ee50 <_dl_name_match_p>
    0.00 :	  3516a04991:   test   %eax,%eax
    0.00 :	  3516a04993:   je     3516a0499c <dl_main+0x238c>
    0.00 :	  3516a04995:   mov    %rbx,0x21b294(%rip)        # 3516c1fc30 <_rtld_global_ro+0x90>
    0.00 :	  3516a0499c:   mov    0x8(%rbx),%rcx
    0.00 :	  3516a049a0:   mov    (%rbx),%rax
    0.00 :	  3516a049a3:   mov    0x340(%rbx),%r9
    0.00 :	  3516a049aa:   cmpb   $0x0,(%rcx)
    0.00 :	  3516a049ad:   jne    3516a049c0 <dl_main+0x23b0>
    0.00 :	  3516a049af:   mov    0x21b1d2(%rip),%rdx        # 3516c1fb88 <_dl_argv>
    0.00 :	  3516a049b6:   mov    (%rdx),%rcx
    0.00 :	  3516a049b9:   test   %rcx,%rcx
    0.00 :	  3516a049bc:   cmove  %r14,%rcx
    0.00 :	  3516a049c0:   mov    0x38(%rbx),%rdx
    0.00 :	  3516a049c4:   mov    (%rdx),%rdx
    0.00 :	  3516a049c7:   cmpb   $0x0,(%rdx)
    0.00 :	  3516a049ca:   jne    3516a049dd <dl_main+0x23cd>
    0.00 :	  3516a049cc:   mov    0x21b1b5(%rip),%rdx        # 3516c1fb88 <_dl_argv>
    0.00 :	  3516a049d3:   mov    (%rdx),%rdx
    0.00 :	  3516a049d6:   test   %rdx,%rdx
    0.00 :	  3516a049d9:   cmove  %r14,%rdx
    0.00 :	  3516a049dd:   lea    0x164d3(%rip),%rsi        # 3516a1aeb7 <intel_02_known+0x3f7>
    0.00 :	  3516a049e4:   mov    %rax,0x8(%rsp)
    0.00 :	  3516a049e9:   mov    $0x10,%r8d
    0.00 :	  3516a049ef:   xor    %eax,%eax
    0.00 :	  3516a049f1:   mov    $0x1,%edi
    0.00 :	  3516a049f6:   movl   $0x10,(%rsp)
    0.00 :	  3516a049fd:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a04a02:   mov    0x448(%rbx),%rdx
    0.00 :	  3516a04a09:   test   %rdx,%rdx
    0.00 :	  3516a04a0c:   je     3516a04a32 <dl_main+0x2422>
    0.00 :	  3516a04a0e:   mov    0x440(%rbx),%r8
    0.00 :	  3516a04a15:   lea    0x164b8(%rip),%rsi        # 3516a1aed4 <intel_02_known+0x414>
    0.00 :	  3516a04a1c:   mov    $0x10,%ecx
    0.00 :	  3516a04a21:   mov    $0x1,%edi
    0.00 :	  3516a04a26:   xor    %eax,%eax
    0.00 :	  3516a04a28:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a04a2d:   jmpq   3516a04886 <dl_main+0x2276>
    0.00 :	  3516a04a32:   lea    0x1646a(%rip),%rsi        # 3516a1aea3 <intel_02_known+0x3e3>
    0.00 :	  3516a04a39:   mov    $0x1,%edi
    0.00 :	  3516a04a3e:   xor    %eax,%eax
    0.00 :	  3516a04a40:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a04a45:   jmpq   3516a04886 <dl_main+0x2276>
    0.00 :	  3516a04a4a:   cmp    %eax,%edx
    0.00 :	  3516a04a4c:   jbe    3516a03153 <dl_main+0xb43>
    0.00 :	  3516a04a52:   jmpq   3516a0314d <dl_main+0xb3d>
    0.00 :	  3516a04a57:   movb   $0x0,(%rdx)
    0.00 :	  3516a04a5a:   rdtsc  
    0.00 :	  3516a04a5c:   cmp    %r14,%rcx
    0.00 :	  3516a04a5f:   mov    %edx,-0xe8(%rbp)
    0.00 :	  3516a04a65:   mov    %eax,-0xf0(%rbp)
    0.00 :	  3516a04a6b:   je     3516a04abb <dl_main+0x24ab>
    0.00 :	  3516a04a6d:   lea    -0x60(%rbp),%r12
    0.00 :	  3516a04a71:   mov    %rcx,-0x60(%rbp)
    0.00 :	  3516a04a75:   mov    %rcx,-0xf8(%rbp)
    0.00 :	  3516a04a7c:   lea    0x1641d(%rip),%rsi        # 3516a1aea0 <intel_02_known+0x3e0>
    0.00 :	  3516a04a83:   mov    %r12,%rdi
    0.00 :	  3516a04a86:   callq  3516a15d60 <__strsep>
    0.00 :	  3516a04a8b:   test   %rax,%rax
    0.00 :	  3516a04a8e:   je     3516a04ab4 <dl_main+0x24a4>
    0.00 :	  3516a04a90:   cmpb   $0x0,(%rax)
    0.00 :	  3516a04a93:   je     3516a04a7c <dl_main+0x246c>
    0.00 :	  3516a04a95:   lea    0x18064(%rip),%rdx        # 3516a1cb00 <preload_file.12989>
    0.00 :	  3516a04a9c:   mov    %rbx,%rsi
    0.00 :	  3516a04a9f:   mov    %rax,%rdi
    0.00 :	  3516a04aa2:   callq  3516a015a0 <do_preload>
    0.00 :	  3516a04aa7:   add    %eax,%r13d
    0.00 :	  3516a04aaa:   jmp    3516a04a7c <dl_main+0x246c>
    0.00 :	  3516a04aac:   movb   $0x0,(%rdx)
    0.00 :	  3516a04aaf:   xor    %r14d,%r14d
    0.00 :	  3516a04ab2:   jmp    3516a04a5a <dl_main+0x244a>
    0.00 :	  3516a04ab4:   mov    -0xf8(%rbp),%rcx
    0.00 :	  3516a04abb:   test   %r14,%r14
    0.00 :	  3516a04abe:   je     3516a04b18 <dl_main+0x2508>
    0.00 :	  3516a04ac0:   mov    %rcx,%rsi
    0.00 :	  3516a04ac3:   mov    %r14,%rdi
    0.00 :	  3516a04ac6:   mov    %rcx,-0x140(%rbp)
    0.00 :	  3516a04acd:   sub    %r14,%rsi
    0.00 :	  3516a04ad0:   add    -0x40(%rbp),%rsi
    0.00 :	  3516a04ad4:   callq  3516a17590 <__strnlen>
    0.00 :	  3516a04ad9:   lea    0x1f(%rax),%rdx
    0.00 :	  3516a04add:   mov    %r14,%rsi
    0.00 :	  3516a04ae0:   and    $0xfffffffffffffff0,%rdx
    0.00 :	  3516a04ae4:   sub    %rdx,%rsp
    0.00 :	  3516a04ae7:   mov    %rax,%rdx
    0.00 :	  3516a04aea:   lea    0x1f(%rsp),%rdi
    0.00 :	  3516a04aef:   and    $0xfffffffffffffff0,%rdi
    0.00 :	  3516a04af3:   movb   $0x0,(%rdi,%rax,1)
    0.00 :	  3516a04af7:   callq  3516a184b0 <memcpy>
    0.00 :	  3516a04afc:   lea    0x17ffd(%rip),%rdx        # 3516a1cb00 <preload_file.12989>
    0.00 :	  3516a04b03:   mov    %rbx,%rsi
    0.00 :	  3516a04b06:   mov    %rax,%rdi
    0.00 :	  3516a04b09:   callq  3516a015a0 <do_preload>
    0.00 :	  3516a04b0e:   mov    -0x140(%rbp),%rcx
    0.00 :	  3516a04b15:   add    %eax,%r13d
    0.00 :	  3516a04b18:   rdtsc  
    0.00 :	  3516a04b1a:   mov    -0xf0(%rbp),%esi
    0.00 :	  3516a04b20:   mov    -0xe8(%rbp),%edi
    0.00 :	  3516a04b26:   shl    $0x20,%rdx
    0.00 :	  3516a04b2a:   mov    %eax,%eax
    0.00 :	  3516a04b2c:   or     %rax,%rdx
    0.00 :	  3516a04b2f:   shl    $0x20,%rdi
    0.00 :	  3516a04b33:   or     %rsi,%rdi
    0.00 :	  3516a04b36:   mov    0x21b203(%rip),%rsi        # 3516c1fd40 <load_time>
    0.00 :	  3516a04b3d:   sub    %rdi,%rsi
    0.00 :	  3516a04b40:   mov    %rcx,%rdi
    0.00 :	  3516a04b43:   lea    (%rsi,%rdx,1),%rdx
    0.00 :	  3516a04b47:   mov    -0x40(%rbp),%rsi
    0.00 :	  3516a04b4b:   mov    %rdx,0x21b1ee(%rip)        # 3516c1fd40 <load_time>
    0.00 :	  3516a04b52:   callq  3516a16f10 <__munmap>
    0.00 :	  3516a04b57:   jmpq   3516a032d0 <dl_main+0xcc0>
    0.00 :	  3516a04b5c:   lea    0x1642b(%rip),%rax        # 3516a1af8e <intel_02_known+0x4ce>
    0.00 :	  3516a04b63:   lea    0x1641d(%rip),%rsi        # 3516a1af87 <intel_02_known+0x4c7>
    0.00 :	  3516a04b6a:   test   %r12b,%r12b
    0.00 :	  3516a04b6d:   lea    0x1641d(%rip),%rdi        # 3516a1af91 <intel_02_known+0x4d1>
    0.00 :	  3516a04b74:   cmovne %rax,%rsi
    0.00 :	  3516a04b78:   xor    %eax,%eax
    0.00 :	  3516a04b7a:   callq  3516a0f5c0 <_dl_debug_printf>
    0.00 :	  3516a04b7f:   jmpq   3516a0370a <dl_main+0x10fa>
    0.00 :	  3516a04b84:   mov    0x21b11d(%rip),%r13        # 3516c1fca8 <_rtld_global_ro+0x108>
    0.00 :	  3516a04b8b:   xor    %r12d,%r12d
    0.00 :	  3516a04b8e:   cmp    %eax,%r12d
    0.00 :	  3516a04b91:   jae    3516a032a4 <dl_main+0xc94>
    0.00 :	  3516a04b97:   mov    0x0(%r13),%rax
    0.00 :	  3516a04b9b:   test   %rax,%rax
    0.00 :	  3516a04b9e:   je     3516a04bb6 <dl_main+0x25a6>
    0.00 :	  3516a04ba0:   mov    %r12d,%edx
    0.00 :	  3516a04ba3:   mov    $0x1,%esi
    0.00 :	  3516a04ba8:   shl    $0x4,%rdx
    0.00 :	  3516a04bac:   lea    0x468(%rbx,%rdx,1),%rdi
    0.00 :	  3516a04bb4:   callq  *%rax
    0.00 :	  3516a04bb6:   mov    0x40(%r13),%r13
    0.00 :	  3516a04bba:   add    $0x1,%r12d
    0.00 :	  3516a04bbe:   mov    0x21b0ec(%rip),%eax        # 3516c1fcb0 <_rtld_global_ro+0x110>
    0.00 :	  3516a04bc4:   jmp    3516a04b8e <dl_main+0x257e>
 Percent |	Source code & Disassembly of ld-2.12.so for cycles
------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0000003516a09360 <do_lookup_x>:
    0.00 :	  3516a09360:   push   %r15
    0.00 :	  3516a09362:   mov    %rdx,%r15
    0.00 :	  3516a09365:   push   %r14
    0.00 :	  3516a09367:   push   %r13
    0.00 :	  3516a09369:   mov    %rsi,%r13
    0.00 :	  3516a0936c:   push   %r12
    0.00 :	  3516a0936e:   push   %rbp
    0.00 :	  3516a0936f:   push   %rbx
    0.00 :	  3516a09370:   sub    $0xc8,%rsp
    0.00 :	  3516a09377:   mov    0x8(%r9),%ebp
    0.00 :	  3516a0937b:   mov    0x108(%rsp),%rax
    0.00 :	  3516a09383:   mov    %r8,0x28(%rsp)
    0.00 :	  3516a09388:   mov    0x100(%rsp),%rbx
    0.00 :	  3516a09390:   mov    0x118(%rsp),%r14
    0.00 :	  3516a09398:   mov    %rdi,0x90(%rsp)
    0.00 :	  3516a093a0:   mov    %rcx,0xa0(%rsp)
    0.00 :	  3516a093a8:   mov    %rax,0x80(%rsp)
    0.00 :	  3516a093b0:   mov    0x110(%rsp),%eax
    0.00 :	  3516a093b7:   mov    %eax,0xac(%rsp)
    0.00 :	  3516a093be:   mov    0x120(%rsp),%eax
    0.00 :	  3516a093c5:   mov    %eax,0xb4(%rsp)
    0.00 :	  3516a093cc:   mov    0x128(%rsp),%rax
    0.00 :	  3516a093d4:   mov    %rax,0x70(%rsp)
    0.00 :	  3516a093d9:   mov    (%r9),%r12
    0.00 :	  3516a093dc:   mov    %rsi,%r8
    0.00 :	  3516a093df:   mov    %esi,%r9d
    0.00 :	  3516a093e2:   lea    0x70(%rsp),%r11
    0.00 :	  3516a093e7:   shr    $0x6,%r8
    0.00 :	  3516a093eb:   and    $0x3f,%r9d
    0.00 :	  3516a093ef:   mov    (%r12,%rbx,8),%rax
    0.00 :	  3516a093f3:   movl   $0x0,0xa8(%rsp)
    0.00 :	  3516a093fe:   movq   $0x0,0x78(%rsp)
    0.00 :	  3516a09407:   mov    0x28(%rax),%rax
    0.00 :	  3516a0940b:   cmp    %r14,%rax
    0.00 :	  3516a0940e:   mov    %rax,0x88(%rsp)
    0.00 :	  3516a09416:   je     3516a094f8 <do_lookup_x+0x198>
    0.00 :	  3516a0941c:   testb  $0x2,0xb4(%rsp)
    0.00 :	  3516a09424:   je     3516a09433 <do_lookup_x+0xd3>
    0.00 :	  3516a09426:   testb  $0x3,0x314(%rax)
    0.00 :	  3516a0942d:   je     3516a094f8 <do_lookup_x+0x198>
    0.00 :	  3516a09433:   testb  $0x20,0x315(%rax)
    0.00 :	  3516a0943a:   jne    3516a094f8 <do_lookup_x+0x198>
    0.00 :	  3516a09440:   testb  $0x8,0x216759(%rip)        # 3516c1fba0 <_rtld_global_ro>
    0.00 :	  3516a09447:   jne    3516a09ab4 <do_lookup_x+0x754>
    0.00 :	  3516a0944d:   mov    0x2ec(%rax),%ecx
    0.00 :	  3516a09453:   test   %ecx,%ecx
    0.00 :	  3516a09455:   je     3516a094f8 <do_lookup_x+0x198>
    0.00 :	  3516a0945b:   mov    0x70(%rax),%rdx
    0.00 :	  3516a0945f:   mov    0x68(%rax),%rax
    0.00 :	  3516a09463:   mov    0x88(%rsp),%rsi
    0.00 :	  3516a0946b:   mov    0x8(%rdx),%rdx
    0.00 :	  3516a0946f:   mov    %rdx,0x30(%rsp)
    0.00 :	  3516a09474:   mov    0x8(%rax),%rax
    0.00 :	  3516a09478:   mov    %rax,0x98(%rsp)
    0.00 :	  3516a09480:   mov    0x2f8(%rsi),%rax
    0.00 :	  3516a09487:   test   %rax,%rax
    0.00 :	  3516a0948a:   je     3516a09a10 <do_lookup_x+0x6b0>
    0.00 :	  3516a09490:   mov    0x2f0(%rsi),%edx
    0.00 :	  3516a09496:   mov    0x2f4(%rsi),%ecx
    0.00 :	  3516a0949c:   and    %r8d,%edx
    0.00 :	  3516a0949f:   mov    (%rax,%rdx,8),%rdx
    0.00 :	  3516a094a3:   mov    %r13,%rax
    0.00 :	  3516a094a6:   shr    %cl,%rax
    0.00 :	  3516a094a9:   mov    %rax,%rcx
    0.00 :	  3516a094ac:   and    $0x3f,%ecx
    0.00 :	  3516a094af:   mov    %rdx,%rax
    0.00 :	  3516a094b2:   shr    %cl,%rax
    0.00 :	  3516a094b5:   mov    %r9d,%ecx
    0.00 :	  3516a094b8:   shr    %cl,%rdx
    0.00 :	  3516a094bb:   and    %rdx,%rax
    0.00 :	  3516a094be:   test   $0x1,%al
    0.00 :	  3516a094c0:   jne    3516a09b0c <do_lookup_x+0x7ac>
    0.00 :	  3516a094c6:   movl   $0x0,0xb0(%rsp)
    0.00 :	  3516a094d1:   cmpl   $0x1,0xa8(%rsp)
    0.00 :	  3516a094d9:   je     3516a09520 <do_lookup_x+0x1c0>
    0.00 :	  3516a094db:   mov    0x80(%rsp),%rax
    0.00 :	  3516a094e3:   test   %rax,%rax
    0.00 :	  3516a094e6:   je     3516a094f8 <do_lookup_x+0x198>
    0.00 :	  3516a094e8:   mov    0x10(%rax),%rdi
    0.00 :	  3516a094ec:   test   %rdi,%rdi
    0.00 :	  3516a094ef:   jne    3516a097c9 <do_lookup_x+0x469>
    0.00 :	  3516a094f5:   nopl   (%rax)
    0.00 :	  3516a094f8:   add    $0x1,%rbx
    0.00 :	  3516a094fc:   cmp    %rbx,%rbp
    0.00 :	  3516a094ff:   ja     3516a093ef <do_lookup_x+0x8f>
    0.00 :	  3516a09505:   xor    %eax,%eax
    0.00 :	  3516a09507:   add    $0xc8,%rsp
    0.00 :	  3516a0950e:   pop    %rbx
    0.00 :	  3516a0950f:   pop    %rbp
    0.00 :	  3516a09510:   pop    %r12
    0.00 :	  3516a09512:   pop    %r13
    0.00 :	  3516a09514:   pop    %r14
    0.00 :	  3516a09516:   pop    %r15
    0.00 :	  3516a09518:   retq   
    0.00 :	  3516a09519:   nopl   0x0(%rax)
    0.00 :	  3516a09520:   mov    0x78(%rsp),%rax
    0.00 :	  3516a09525:   test   %rax,%rax
    0.00 :	  3516a09528:   je     3516a094db <do_lookup_x+0x17b>
    0.00 :	  3516a0952a:   movzbl 0x4(%rax),%edx
    0.00 :	  3516a0952e:   shr    $0x4,%dl
    0.00 :	  3516a09531:   cmp    $0x2,%dl
    0.00 :	  3516a09534:   je     3516a09560 <do_lookup_x+0x200>
    0.00 :	  3516a09536:   cmp    $0xa,%dl
    0.00 :	  3516a09539:   je     3516a095a0 <do_lookup_x+0x240>
    0.00 :	  3516a0953b:   cmp    $0x1,%dl
    0.00 :	  3516a0953e:   je     3516a0956e <do_lookup_x+0x20e>
    0.00 :	  3516a09540:   mov    0xb0(%rsp),%eax
    0.00 :	  3516a09547:   test   %eax,%eax
    0.00 :	  3516a09549:   je     3516a094db <do_lookup_x+0x17b>
    0.00 :	  3516a0954b:   add    $0x1,%rbx
    0.00 :	  3516a0954f:   cmp    %rbx,%rbp
    0.00 :	  3516a09552:   ja     3516a093ef <do_lookup_x+0x8f>
    0.00 :	  3516a09558:   jmp    3516a09505 <do_lookup_x+0x1a5>
    0.00 :	  3516a0955a:   nopw   0x0(%rax,%rax,1)
    0.00 :	  3516a09560:   mov    0x21667e(%rip),%edx        # 3516c1fbe4 <_rtld_global_ro+0x44>
    0.00 :	  3516a09566:   test   %edx,%edx
    0.00 :	  3516a09568:   jne    3516a09bee <do_lookup_x+0x88e>
    0.00 :	  3516a0956e:   mov    %rax,0x38(%rsp)
    0.00 :	  3516a09573:   mov    %rax,%rdx
    0.00 :	  3516a09576:   mov    0x28(%rsp),%rax
    0.00 :	  3516a0957b:   mov    0x28(%rsp),%rcx
    0.00 :	  3516a09580:   mov    %rdx,(%rax)
    0.00 :	  3516a09583:   mov    0x88(%rsp),%rax
    0.00 :	  3516a0958b:   mov    %rax,0x8(%rcx)
    0.00 :	  3516a0958f:   mov    $0x1,%eax
    0.00 :	  3516a09594:   jmpq   3516a09507 <do_lookup_x+0x1a7>
    0.00 :	  3516a09599:   nopl   0x0(%rax)
    0.00 :	  3516a095a0:   mov    %rax,0x38(%rsp)
    0.00 :	  3516a095a5:   mov    0x88(%rsp),%rax
    0.00 :	  3516a095ad:   lea    0x216a4c(%rip),%rsi        # 3516c20000 <_rtld_global>
    0.00 :	  3516a095b4:   lea    0x216a4d(%rip),%r14        # 3516c20008 <_rtld_global+0x8>
    0.00 :	  3516a095bb:   mov    0x30(%rax),%rax
    0.00 :	  3516a095bf:   lea    (%rax,%rax,8),%r12
    0.00 :	  3516a095c3:   mov    %rax,0x40(%rsp)
    0.00 :	  3516a095c8:   shl    $0x4,%r12
    0.00 :	  3516a095cc:   lea    0x20(%rsi,%r12,1),%rsi
    0.00 :	  3516a095d1:   add    %r12,%r14
    0.00 :	  3516a095d4:   mov    %rsi,0x50(%rsp)
    0.00 :	  3516a095d9:   mov    %rsi,%rdi
    0.00 :	  3516a095dc:   callq  *0x21791e(%rip)        # 3516c20f00 <_rtld_global+0xf00>
    0.00 :	  3516a095e2:   mov    0x40(%r14),%rbp
    0.00 :	  3516a095e6:   lea    0x216a13(%rip),%rax        # 3516c20000 <_rtld_global>
    0.00 :	  3516a095ed:   lea    (%rax,%r12,1),%r12
    0.00 :	  3516a095f1:   test   %rbp,%rbp
    0.00 :	  3516a095f4:   mov    0x50(%r12),%rbx
    0.00 :	  3516a095f9:   je     3516a099b4 <do_lookup_x+0x654>
    0.00 :	  3516a095ff:   mov    %r13,%rax
    0.00 :	  3516a09602:   xor    %edx,%edx
    0.00 :	  3516a09604:   lea    -0x2(%rbx),%rcx
    0.00 :	  3516a09608:   div    %rbx
    0.00 :	  3516a0960b:   mov    %r13,%rax
    0.00 :	  3516a0960e:   mov    %rcx,0x30(%rsp)
    0.00 :	  3516a09613:   mov    %rbp,0x48(%rsp)
    0.00 :	  3516a09618:   mov    %rbx,%rbp
    0.00 :	  3516a0961b:   mov    %rdx,%r12
    0.00 :	  3516a0961e:   xor    %edx,%edx
    0.00 :	  3516a09620:   div    %rcx
    0.00 :	  3516a09623:   lea    0x1(%rdx),%rcx
    0.00 :	  3516a09627:   mov    %rcx,%r8
    0.00 :	  3516a0962a:   mov    %rcx,%rbx
    0.00 :	  3516a0962d:   shl    $0x5,%r8
    0.00 :	  3516a09631:   lea    (%rbx,%r12,1),%r14
    0.00 :	  3516a09635:   shl    $0x5,%r12
    0.00 :	  3516a09639:   add    0x48(%rsp),%r12
    0.00 :	  3516a0963e:   jmp    3516a09659 <do_lookup_x+0x2f9>
    0.00 :	  3516a09640:   mov    0x8(%r12),%r15
    0.00 :	  3516a09645:   test   %r15,%r15
    0.00 :	  3516a09648:   je     3516a096c0 <do_lookup_x+0x360>
    0.00 :	  3516a0964a:   add    %r8,%r12
    0.00 :	  3516a0964d:   cmp    %rbp,%r14
    0.00 :	  3516a09650:   lea    (%r14,%rbx,1),%rax
    0.00 :	  3516a09654:   jae    3516a096b0 <do_lookup_x+0x350>
    0.00 :	  3516a09656:   mov    %rax,%r14
    0.00 :	  3516a09659:   mov    (%r12),%eax
    0.00 :	  3516a0965d:   cmp    %r13,%rax
    0.00 :	  3516a09660:   jne    3516a09640 <do_lookup_x+0x2e0>
    0.00 :	  3516a09662:   mov    0x8(%r12),%r15
    0.00 :	  3516a09667:   mov    0x90(%rsp),%rsi
    0.00 :	  3516a0966f:   mov    %r8,0x8(%rsp)
    0.00 :	  3516a09674:   mov    %r15,%rdi
    0.00 :	  3516a09677:   callq  3516a17390 <strcmp>
    0.00 :	  3516a0967c:   test   %eax,%eax
    0.00 :	  3516a0967e:   mov    0x8(%rsp),%r8
    0.00 :	  3516a09683:   jne    3516a09645 <do_lookup_x+0x2e5>
    0.00 :	  3516a09685:   mov    0x10(%r12),%rax
    0.00 :	  3516a0968a:   mov    0x28(%rsp),%rsi
    0.00 :	  3516a0968f:   mov    0x50(%rsp),%rdi
    0.00 :	  3516a09694:   mov    %rax,(%rsi)
    0.00 :	  3516a09697:   mov    0x18(%r12),%rax
    0.00 :	  3516a0969c:   mov    %rax,0x8(%rsi)
    0.00 :	  3516a096a0:   callq  *0x217862(%rip)        # 3516c20f08 <_rtld_global+0xf08>
    0.00 :	  3516a096a6:   mov    $0x1,%eax
    0.00 :	  3516a096ab:   jmpq   3516a09507 <do_lookup_x+0x1a7>
    0.00 :	  3516a096b0:   mov    %r14,%r12
    0.00 :	  3516a096b3:   sub    %rbp,%r12
    0.00 :	  3516a096b6:   jmpq   3516a09631 <do_lookup_x+0x2d1>
    0.00 :	  3516a096bb:   nopl   0x0(%rax,%rax,1)
    0.00 :	  3516a096c0:   mov    0x40(%rsp),%rcx
    0.00 :	  3516a096c5:   lea    0x21693c(%rip),%rsi        # 3516c20008 <_rtld_global+0x8>
    0.00 :	  3516a096cc:   mov    %rbp,%rbx
    0.00 :	  3516a096cf:   lea    (%rbx,%rbx,2),%rdx
    0.00 :	  3516a096d3:   mov    0x48(%rsp),%rbp
    0.00 :	  3516a096d8:   lea    (%rcx,%rcx,8),%rax
    0.00 :	  3516a096dc:   shl    $0x4,%rax
    0.00 :	  3516a096e0:   mov    0x50(%rsi,%rax,1),%rax
    0.00 :	  3516a096e5:   shl    $0x2,%rax
    0.00 :	  3516a096e9:   cmp    %rax,%rdx
    0.00 :	  3516a096ec:   jbe    3516a09822 <do_lookup_x+0x4c2>
    0.00 :	  3516a096f2:   mov    0x38(%rsp),%rax
    0.00 :	  3516a096f7:   mov    %r13d,%esi
    0.00 :	  3516a096fa:   xor    %edx,%edx
    0.00 :	  3516a096fc:   mov    0x98(%rsp),%r9
    0.00 :	  3516a09704:   mov    0x88(%rsp),%rdi
    0.00 :	  3516a0970c:   mov    (%rax),%r8d
    0.00 :	  3516a0970f:   mov    %rsi,%rax
    0.00 :	  3516a09712:   div    %rbx
    0.00 :	  3516a09715:   mov    %rsi,%rax
    0.00 :	  3516a09718:   mov    %rdx,%rcx
    0.00 :	  3516a0971b:   xor    %edx,%edx
    0.00 :	  3516a0971d:   divq   0x30(%rsp)
    0.00 :	  3516a09722:   add    $0x1,%rdx
    0.00 :	  3516a09726:   mov    %rdx,%rsi
    0.00 :	  3516a09729:   shl    $0x5,%rsi
    0.00 :	  3516a0972d:   lea    (%rcx,%rdx,1),%rax
    0.00 :	  3516a09731:   shl    $0x5,%rcx
    0.00 :	  3516a09735:   lea    0x0(%rbp,%rcx,1),%rcx
    0.00 :	  3516a0973a:   jmp    3516a09743 <do_lookup_x+0x3e3>
    0.00 :	  3516a0973c:   nopl   0x0(%rax)
    0.00 :	  3516a09740:   mov    %r10,%rax
    0.00 :	  3516a09743:   cmpq   $0x0,0x8(%rcx)
    0.00 :	  3516a09748:   je     3516a09760 <do_lookup_x+0x400>
    0.00 :	  3516a0974a:   add    %rsi,%rcx
    0.00 :	  3516a0974d:   cmp    %rbx,%rax
    0.00 :	  3516a09750:   lea    (%rax,%rdx,1),%r10
    0.00 :	  3516a09754:   jb     3516a09740 <do_lookup_x+0x3e0>
    0.00 :	  3516a09756:   mov    %rax,%rcx
    0.00 :	  3516a09759:   sub    %rbx,%rcx
    0.00 :	  3516a0975c:   jmp    3516a0972d <do_lookup_x+0x3cd>
    0.00 :	  3516a0975e:   xchg   %ax,%ax
    0.00 :	  3516a09760:   mov    %r8d,%r8d
    0.00 :	  3516a09763:   mov    %r13d,(%rcx)
    0.00 :	  3516a09766:   add    %r8,%r9
    0.00 :	  3516a09769:   testb  $0x2,0xb4(%rsp)
    0.00 :	  3516a09771:   mov    %r9,0x8(%rcx)
    0.00 :	  3516a09775:   jne    3516a09808 <do_lookup_x+0x4a8>
    0.00 :	  3516a0977b:   mov    0x38(%rsp),%rsi
    0.00 :	  3516a09780:   mov    %rdi,0x18(%rcx)
    0.00 :	  3516a09784:   mov    %rsi,0x10(%rcx)
    0.00 :	  3516a09788:   movzbl 0x314(%rdi),%eax
    0.00 :	  3516a0978f:   and    $0x3,%eax
    0.00 :	  3516a09792:   cmp    $0x2,%al
    0.00 :	  3516a09794:   je     3516a09a04 <do_lookup_x+0x6a4>
    0.00 :	  3516a0979a:   mov    0x40(%rsp),%rdx
    0.00 :	  3516a0979f:   lea    0x216862(%rip),%rcx        # 3516c20008 <_rtld_global+0x8>
    0.00 :	  3516a097a6:   lea    (%rdx,%rdx,8),%rax
    0.00 :	  3516a097aa:   shl    $0x4,%rax
    0.00 :	  3516a097ae:   addq   $0x1,0x50(%rcx,%rax,1)
    0.00 :	  3516a097b4:   mov    0x50(%rsp),%rdi
    0.00 :	  3516a097b9:   callq  *0x217749(%rip)        # 3516c20f08 <_rtld_global+0xf08>
    0.00 :	  3516a097bf:   mov    0x38(%rsp),%rdx
    0.00 :	  3516a097c4:   jmpq   3516a09576 <do_lookup_x+0x216>
    0.00 :	  3516a097c9:   mov    0x88(%rsp),%rsi
    0.00 :	  3516a097d1:   mov    %r8,0x8(%rsp)
    0.00 :	  3516a097d6:   mov    %r9d,0x10(%rsp)
    0.00 :	  3516a097db:   mov    %r11,0x20(%rsp)
    0.00 :	  3516a097e0:   callq  3516a0ee50 <_dl_name_match_p>
    0.00 :	  3516a097e5:   test   %eax,%eax
    0.00 :	  3516a097e7:   mov    0x8(%rsp),%r8
    0.00 :	  3516a097ec:   mov    0x10(%rsp),%r9d
    0.00 :	  3516a097f1:   mov    0x20(%rsp),%r11
    0.00 :	  3516a097f6:   je     3516a094f8 <do_lookup_x+0x198>
    0.00 :	  3516a097fc:   or     $0xffffffffffffffff,%eax
    0.00 :	  3516a097ff:   jmpq   3516a09507 <do_lookup_x+0x1a7>
    0.00 :	  3516a09804:   nopl   0x0(%rax)
    0.00 :	  3516a09808:   mov    0xa0(%rsp),%rax
    0.00 :	  3516a09810:   mov    %rax,0x10(%rcx)
    0.00 :	  3516a09814:   mov    0x70(%rsp),%rax
    0.00 :	  3516a09819:   mov    %rax,0x18(%rcx)
    0.00 :	  3516a0981d:   jmpq   3516a0979a <do_lookup_x+0x43a>
    0.00 :	  3516a09822:   lea    0x1(%rbx),%rdi
    0.00 :	  3516a09826:   callq  3516a0edd0 <_dl_higher_prime_number>
    0.00 :	  3516a0982b:   mov    $0x20,%edi
    0.00 :	  3516a09830:   mov    %rax,%rsi
    0.00 :	  3516a09833:   mov    %rax,%r12
    0.00 :	  3516a09836:   callq  3516a00ad0 <calloc@plt>
    0.00 :	  3516a0983b:   test   %rax,%rax
    0.00 :	  3516a0983e:   mov    %rax,%r14
    0.00 :	  3516a09841:   je     3516a09c16 <do_lookup_x+0x8b6>
    0.00 :	  3516a09847:   lea    -0x2(%r12),%rax
    0.00 :	  3516a0984c:   test   %rbx,%rbx
    0.00 :	  3516a0984f:   mov    %rax,0x30(%rsp)
    0.00 :	  3516a09854:   je     3516a0995b <do_lookup_x+0x5fb>
    0.00 :	  3516a0985a:   lea    -0x2(%r12),%rdx
    0.00 :	  3516a0985f:   mov    0x70(%rsp),%rsi
    0.00 :	  3516a09864:   mov    0xa0(%rsp),%rcx
    0.00 :	  3516a0986c:   mov    %r13,0x68(%rsp)
    0.00 :	  3516a09871:   xor    %r10d,%r10d
    0.00 :	  3516a09874:   mov    %rbp,0x60(%rsp)
    0.00 :	  3516a09879:   mov    %rdx,0x30(%rsp)
    0.00 :	  3516a0987e:   mov    0xb4(%rsp),%edx
    0.00 :	  3516a09885:   mov    %rsi,0x58(%rsp)
    0.00 :	  3516a0988a:   mov    %rcx,0x48(%rsp)
    0.00 :	  3516a0988f:   mov    %rbp,%rsi
    0.00 :	  3516a09892:   and    $0x2,%edx
    0.00 :	  3516a09895:   mov    %edx,%r13d
    0.00 :	  3516a09898:   nopl   0x0(%rax,%rax,1)
    0.00 :	  3516a098a0:   mov    0x8(%rsi),%rbp
    0.00 :	  3516a098a4:   test   %rbp,%rbp
    0.00 :	  3516a098a7:   je     3516a09940 <do_lookup_x+0x5e0>
    0.00 :	  3516a098ad:   mov    (%rsi),%r8d
    0.00 :	  3516a098b0:   xor    %edx,%edx
    0.00 :	  3516a098b2:   mov    0x18(%rsi),%r9
    0.00 :	  3516a098b6:   mov    0x10(%rsi),%r11
    0.00 :	  3516a098ba:   mov    %r8d,%edi
    0.00 :	  3516a098bd:   mov    %rdi,%rax
    0.00 :	  3516a098c0:   div    %r12
    0.00 :	  3516a098c3:   mov    %rdi,%rax
    0.00 :	  3516a098c6:   mov    %rdx,%rcx
    0.00 :	  3516a098c9:   xor    %edx,%edx
    0.00 :	  3516a098cb:   divq   0x30(%rsp)
    0.00 :	  3516a098d0:   add    $0x1,%rdx
    0.00 :	  3516a098d4:   mov    %rdx,%rdi
    0.00 :	  3516a098d7:   shl    $0x5,%rdi
    0.00 :	  3516a098db:   lea    (%rcx,%rdx,1),%rax
    0.00 :	  3516a098df:   shl    $0x5,%rcx
    0.00 :	  3516a098e3:   lea    (%r14,%rcx,1),%rcx
    0.00 :	  3516a098e7:   jmp    3516a098f3 <do_lookup_x+0x593>
    0.00 :	  3516a098e9:   nopl   0x0(%rax)
    0.00 :	  3516a098f0:   mov    %r15,%rax
    0.00 :	  3516a098f3:   cmpq   $0x0,0x8(%rcx)
    0.00 :	  3516a098f8:   je     3516a09910 <do_lookup_x+0x5b0>
    0.00 :	  3516a098fa:   add    %rdi,%rcx
    0.00 :	  3516a098fd:   cmp    %r12,%rax
    0.00 :	  3516a09900:   lea    (%rax,%rdx,1),%r15
    0.00 :	  3516a09904:   jb     3516a098f0 <do_lookup_x+0x590>
    0.00 :	  3516a09906:   mov    %rax,%rcx
    0.00 :	  3516a09909:   sub    %r12,%rcx
    0.00 :	  3516a0990c:   jmp    3516a098db <do_lookup_x+0x57b>
    0.00 :	  3516a0990e:   xchg   %ax,%ax
    0.00 :	  3516a09910:   test   %r13d,%r13d
    0.00 :	  3516a09913:   mov    %r8d,(%rcx)
    0.00 :	  3516a09916:   mov    %rbp,0x8(%rcx)
    0.00 :	  3516a0991a:   jne    3516a099a0 <do_lookup_x+0x640>
    0.00 :	  3516a09920:   mov    %r11,0x10(%rcx)
    0.00 :	  3516a09924:   mov    %r9,0x18(%rcx)
    0.00 :	  3516a09928:   movzbl 0x314(%r9),%eax
    0.00 :	  3516a09930:   and    $0x3,%eax
    0.00 :	  3516a09933:   cmp    $0x2,%al
    0.00 :	  3516a09935:   jne    3516a09940 <do_lookup_x+0x5e0>
    0.00 :	  3516a09937:   orl    $0x8,0x3d4(%r9)
    0.00 :	  3516a0993f:   nop
    0.00 :	  3516a09940:   add    $0x1,%r10
    0.00 :	  3516a09944:   add    $0x20,%rsi
    0.00 :	  3516a09948:   cmp    %r10,%rbx
    0.00 :	  3516a0994b:   ja     3516a098a0 <do_lookup_x+0x540>
    0.00 :	  3516a09951:   mov    0x60(%rsp),%rbp
    0.00 :	  3516a09956:   mov    0x68(%rsp),%r13
    0.00 :	  3516a0995b:   mov    0x40(%rsp),%rcx
    0.00 :	  3516a09960:   lea    0x216699(%rip),%r15        # 3516c20000 <_rtld_global>
    0.00 :	  3516a09967:   mov    %rbp,%rdi
    0.00 :	  3516a0996a:   mov    %r14,%rbp
    0.00 :	  3516a0996d:   lea    (%rcx,%rcx,8),%rbx
    0.00 :	  3516a09971:   shl    $0x4,%rbx
    0.00 :	  3516a09975:   add    %rbx,%r15
    0.00 :	  3516a09978:   callq  *0x60(%r15)
    0.00 :	  3516a0997c:   mov    0x21665d(%rip),%rax        # 3516c1ffe0 <_GLOBAL_OFFSET_TABLE_+0x60>
    0.00 :	  3516a09983:   lea    0x21667e(%rip),%rsi        # 3516c20008 <_rtld_global+0x8>
    0.00 :	  3516a0998a:   mov    %r12,0x50(%r15)
    0.00 :	  3516a0998e:   mov    %r14,0x40(%rsi,%rbx,1)
    0.00 :	  3516a09993:   mov    %r12,%rbx
    0.00 :	  3516a09996:   mov    %rax,0x60(%r15)
    0.00 :	  3516a0999a:   jmpq   3516a096f2 <do_lookup_x+0x392>
    0.00 :	  3516a0999f:   nop
    0.00 :	  3516a099a0:   mov    0x48(%rsp),%rax
    0.00 :	  3516a099a5:   mov    0x58(%rsp),%rdx
    0.00 :	  3516a099aa:   mov    %rax,0x10(%rcx)
    0.00 :	  3516a099ae:   mov    %rdx,0x18(%rcx)
    0.00 :	  3516a099b2:   jmp    3516a09940 <do_lookup_x+0x5e0>
    0.00 :	  3516a099b4:   test   %rbx,%rbx
    0.00 :	  3516a099b7:   jne    3516a097b4 <do_lookup_x+0x454>
    0.00 :	  3516a099bd:   mov    $0x1f,%esi
    0.00 :	  3516a099c2:   mov    $0x20,%edi
    0.00 :	  3516a099c7:   callq  3516a00ad0 <calloc@plt>
    0.00 :	  3516a099cc:   test   %rax,%rax
    0.00 :	  3516a099cf:   mov    %rax,%rbp
    0.00 :	  3516a099d2:   je     3516a09c16 <do_lookup_x+0x8b6>
    0.00 :	  3516a099d8:   mov    %rax,0x40(%r14)
    0.00 :	  3516a099dc:   mov    0x2165fd(%rip),%rax        # 3516c1ffe0 <_GLOBAL_OFFSET_TABLE_+0x60>
    0.00 :	  3516a099e3:   mov    $0x1f,%ebx
    0.00 :	  3516a099e8:   movq   $0x1f,0x50(%r12)
    0.00 :	  3516a099f1:   movq   $0x1d,0x30(%rsp)
    0.00 :	  3516a099fa:   mov    %rax,0x60(%r12)
    0.00 :	  3516a099ff:   jmpq   3516a096f2 <do_lookup_x+0x392>
    0.00 :	  3516a09a04:   orl    $0x8,0x3d4(%rdi)
    0.00 :	  3516a09a0b:   jmpq   3516a0979a <do_lookup_x+0x43a>
    0.00 :	  3516a09a10:   mov    (%r15),%rax
    0.00 :	  3516a09a13:   mov    $0xffffffff,%edx
    0.00 :	  3516a09a18:   cmp    %rdx,%rax
    0.00 :	  3516a09a1b:   je     3516a09c3e <do_lookup_x+0x8de>
    0.00 :	  3516a09a21:   mov    0x2ec(%rsi),%ecx
    0.00 :	  3516a09a27:   xor    %edx,%edx
    0.00 :	  3516a09a29:   div    %rcx
    0.00 :	  3516a09a2c:   mov    0x308(%rsi),%rax
    0.00 :	  3516a09a33:   mov    (%rax,%rdx,4),%eax
    0.00 :	  3516a09a36:   mov    %r14,%rdx
    0.00 :	  3516a09a39:   mov    %rbx,%r14
    0.00 :	  3516a09a3c:   mov    %r11,%rbx
    0.00 :	  3516a09a3f:   mov    %eax,0xb0(%rsp)
    0.00 :	  3516a09a46:   jmp    3516a09aa2 <do_lookup_x+0x742>
    0.00 :	  3516a09a48:   mov    %eax,%eax
    0.00 :	  3516a09a4a:   mov    %rbx,%r10
    0.00 :	  3516a09a4d:   mov    %rdx,0x18(%rsp)
    0.00 :	  3516a09a52:   imul   $0x18,%rax,%rdi
    0.00 :	  3516a09a56:   mov    %r8,0x8(%rsp)
    0.00 :	  3516a09a5b:   mov    %r9d,0x10(%rsp)
    0.00 :	  3516a09a60:   add    0x30(%rsp),%rdi
    0.00 :	  3516a09a65:   callq  3516a091f0 <check_match.12442>
    0.00 :	  3516a09a6a:   test   %rax,%rax
    0.00 :	  3516a09a6d:   mov    0x18(%rsp),%rdx
    0.00 :	  3516a09a72:   mov    0x8(%rsp),%r8
    0.00 :	  3516a09a77:   mov    0x10(%rsp),%r9d
    0.00 :	  3516a09a7c:   jne    3516a09bc4 <do_lookup_x+0x864>
    0.00 :	  3516a09a82:   mov    0x88(%rsp),%rax
    0.00 :	  3516a09a8a:   mov    0xb0(%rsp),%ecx
    0.00 :	  3516a09a91:   mov    0x300(%rax),%rax
    0.00 :	  3516a09a98:   mov    (%rax,%rcx,4),%eax
    0.00 :	  3516a09a9b:   mov    %eax,0xb0(%rsp)
    0.00 :	  3516a09aa2:   test   %eax,%eax
    0.00 :	  3516a09aa4:   jne    3516a09a48 <do_lookup_x+0x6e8>
    0.00 :	  3516a09aa6:   mov    %rbx,%r11
    0.00 :	  3516a09aa9:   mov    %r14,%rbx
    0.00 :	  3516a09aac:   mov    %rdx,%r14
    0.00 :	  3516a09aaf:   jmpq   3516a094d1 <do_lookup_x+0x171>
    0.00 :	  3516a09ab4:   mov    0x8(%rax),%rdx
    0.00 :	  3516a09ab8:   mov    0x30(%rax),%rcx
    0.00 :	  3516a09abc:   cmpb   $0x0,(%rdx)
    0.00 :	  3516a09abf:   jne    3516a09acb <do_lookup_x+0x76b>
    0.00 :	  3516a09ac1:   mov    0x2160c0(%rip),%rax        # 3516c1fb88 <_dl_argv>
    0.00 :	  3516a09ac8:   mov    (%rax),%rdx
    0.00 :	  3516a09acb:   mov    0x90(%rsp),%rsi
    0.00 :	  3516a09ad3:   lea    0x1286e(%rip),%rdi        # 3516a1c348 <expected1.10492+0xee7>
    0.00 :	  3516a09ada:   xor    %eax,%eax
    0.00 :	  3516a09adc:   mov    %r8,0x8(%rsp)
    0.00 :	  3516a09ae1:   mov    %r9d,0x10(%rsp)
    0.00 :	  3516a09ae6:   mov    %r11,0x20(%rsp)
    0.00 :	  3516a09aeb:   callq  3516a0f5c0 <_dl_debug_printf>
    0.00 :	  3516a09af0:   mov    0x88(%rsp),%rax
    0.00 :	  3516a09af8:   mov    0x20(%rsp),%r11
    0.00 :	  3516a09afd:   mov    0x10(%rsp),%r9d
    0.00 :	  3516a09b02:   mov    0x8(%rsp),%r8
    0.00 :	  3516a09b07:   jmpq   3516a0944d <do_lookup_x+0xed>
    0.00 :	  3516a09b0c:   mov    0x2ec(%rsi),%ecx
    0.00 :	  3516a09b12:   xor    %edx,%edx
    0.00 :	  3516a09b14:   mov    %r13,%rax
    0.00 :	  3516a09b17:   div    %rcx
  100.00 :	  3516a09b1a:   mov    0x300(%rsi),%rax
    0.00 :	  3516a09b21:   mov    (%rax,%rdx,4),%eax
    0.00 :	  3516a09b24:   test   %eax,%eax
    0.00 :	  3516a09b26:   je     3516a094c6 <do_lookup_x+0x166>
    0.00 :	  3516a09b2c:   mov    %eax,%eax
    0.00 :	  3516a09b2e:   mov    %r14,%rcx
    0.00 :	  3516a09b31:   mov    %rbx,%r14
    0.00 :	  3516a09b34:   lea    0x0(,%rax,4),%rdx
    0.00 :	  3516a09b3c:   mov    %r11,%rbx
    0.00 :	  3516a09b3f:   add    0x308(%rsi),%rdx
    0.00 :	  3516a09b46:   jmp    3516a09b54 <do_lookup_x+0x7f4>
    0.00 :	  3516a09b48:   test   $0x1,%al
    0.00 :	  3516a09b4a:   jne    3516a09bd2 <do_lookup_x+0x872>
    0.00 :	  3516a09b50:   add    $0x4,%rdx
    0.00 :	  3516a09b54:   mov    (%rdx),%eax
    0.00 :	  3516a09b56:   mov    %eax,%esi
    0.00 :	  3516a09b58:   xor    %r13,%rsi
    0.00 :	  3516a09b5b:   shr    %rsi
    0.00 :	  3516a09b5e:   jne    3516a09b48 <do_lookup_x+0x7e8>
    0.00 :	  3516a09b60:   mov    0x88(%rsp),%rax
    0.00 :	  3516a09b68:   mov    %rdx,%rsi
    0.00 :	  3516a09b6b:   mov    %rbx,%r10
    0.00 :	  3516a09b6e:   sub    0x308(%rax),%rsi
    0.00 :	  3516a09b75:   mov    %rdx,0x18(%rsp)
    0.00 :	  3516a09b7a:   mov    %rcx,0x20(%rsp)
    0.00 :	  3516a09b7f:   mov    %r8,0x8(%rsp)
    0.00 :	  3516a09b84:   mov    %r9d,0x10(%rsp)
    0.00 :	  3516a09b89:   mov    %rsi,%rax
    0.00 :	  3516a09b8c:   sar    $0x2,%rax
    0.00 :	  3516a09b90:   mov    %eax,0xb0(%rsp)
    0.00 :	  3516a09b97:   mov    %eax,%eax
    0.00 :	  3516a09b99:   imul   $0x18,%rax,%rdi
    0.00 :	  3516a09b9d:   add    0x30(%rsp),%rdi
    0.00 :	  3516a09ba2:   callq  3516a091f0 <check_match.12442>
    0.00 :	  3516a09ba7:   test   %rax,%rax
    0.00 :	  3516a09baa:   mov    0x18(%rsp),%rdx
    0.00 :	  3516a09baf:   mov    0x20(%rsp),%rcx
    0.00 :	  3516a09bb4:   mov    0x8(%rsp),%r8
    0.00 :	  3516a09bb9:   mov    0x10(%rsp),%r9d
    0.00 :	  3516a09bbe:   jne    3516a09be0 <do_lookup_x+0x880>
    0.00 :	  3516a09bc0:   mov    (%rdx),%eax
    0.00 :	  3516a09bc2:   jmp    3516a09b48 <do_lookup_x+0x7e8>
    0.00 :	  3516a09bc4:   mov    %rbx,%r11
    0.00 :	  3516a09bc7:   mov    %r14,%rbx
    0.00 :	  3516a09bca:   mov    %rdx,%r14
    0.00 :	  3516a09bcd:   jmpq   3516a0952a <do_lookup_x+0x1ca>
    0.00 :	  3516a09bd2:   mov    %rbx,%r11
    0.00 :	  3516a09bd5:   mov    %r14,%rbx
    0.00 :	  3516a09bd8:   mov    %rcx,%r14
    0.00 :	  3516a09bdb:   jmpq   3516a094c6 <do_lookup_x+0x166>
    0.00 :	  3516a09be0:   mov    %rbx,%r11
    0.00 :	  3516a09be3:   mov    %r14,%rbx
    0.00 :	  3516a09be6:   mov    %rcx,%r14
    0.00 :	  3516a09be9:   jmpq   3516a0952a <do_lookup_x+0x1ca>
    0.00 :	  3516a09bee:   mov    0x28(%rsp),%rcx
    0.00 :	  3516a09bf3:   cmpq   $0x0,(%rcx)
    0.00 :	  3516a09bf7:   jne    3516a09540 <do_lookup_x+0x1e0>
    0.00 :	  3516a09bfd:   mov    0x28(%rsp),%rsi
    0.00 :	  3516a09c02:   mov    %rax,(%rsi)
    0.00 :	  3516a09c05:   mov    0x88(%rsp),%rax
    0.00 :	  3516a09c0d:   mov    %rax,0x8(%rsi)
    0.00 :	  3516a09c11:   jmpq   3516a09540 <do_lookup_x+0x1e0>
    0.00 :	  3516a09c16:   mov    0x50(%rsp),%rdi
    0.00 :	  3516a09c1b:   callq  *0x2172e7(%rip)        # 3516c20f08 <_rtld_global+0xf08>
    0.00 :	  3516a09c21:   lea    0x11239(%rip),%rsi        # 3516a1ae61 <intel_02_known+0x3a1>
    0.00 :	  3516a09c28:   mov    $0x2,%edi
    0.00 :	  3516a09c2d:   xor    %eax,%eax
    0.00 :	  3516a09c2f:   callq  3516a0f470 <_dl_dprintf>
    0.00 :	  3516a09c34:   mov    $0x7f,%edi
    0.00 :	  3516a09c39:   callq  3516a16fd0 <_Exit>
    0.00 :	  3516a09c3e:   mov    0x90(%rsp),%rdx
    0.00 :	  3516a09c46:   xor    %eax,%eax
    0.00 :	  3516a09c48:   movzbl (%rdx),%edi
    0.00 :	  3516a09c4b:   test   %dil,%dil
    0.00 :	  3516a09c4e:   je     3516a09cda <do_lookup_x+0x97a>
    0.00 :	  3516a09c54:   movzbl 0x1(%rdx),%ecx
    0.00 :	  3516a09c58:   movzbl %dil,%edi
    0.00 :	  3516a09c5c:   mov    %edi,%eax
    0.00 :	  3516a09c5e:   test   %cl,%cl
    0.00 :	  3516a09c60:   je     3516a09cda <do_lookup_x+0x97a>
    0.00 :	  3516a09c62:   shl    $0x4,%rdi
    0.00 :	  3516a09c66:   movzbl %cl,%ecx
    0.00 :	  3516a09c69:   lea    (%rcx,%rdi,1),%rdi
    0.00 :	  3516a09c6d:   movzbl 0x2(%rdx),%ecx
    0.00 :	  3516a09c71:   mov    %edi,%eax
    0.00 :	  3516a09c73:   test   %cl,%cl
    0.00 :	  3516a09c75:   je     3516a09cda <do_lookup_x+0x97a>
    0.00 :	  3516a09c77:   shl    $0x4,%rdi
    0.00 :	  3516a09c7b:   movzbl %cl,%ecx
    0.00 :	  3516a09c7e:   add    %rcx,%rdi
    0.00 :	  3516a09c81:   movzbl 0x3(%rdx),%ecx
    0.00 :	  3516a09c85:   mov    %edi,%eax
    0.00 :	  3516a09c87:   test   %cl,%cl
    0.00 :	  3516a09c89:   je     3516a09cda <do_lookup_x+0x97a>
    0.00 :	  3516a09c8b:   shl    $0x4,%rdi
    0.00 :	  3516a09c8f:   movzbl %cl,%ecx
    0.00 :	  3516a09c92:   add    %rcx,%rdi
    0.00 :	  3516a09c95:   movzbl 0x4(%rdx),%ecx
    0.00 :	  3516a09c99:   mov    %edi,%eax
    0.00 :	  3516a09c9b:   test   %cl,%cl
    0.00 :	  3516a09c9d:   je     3516a09cda <do_lookup_x+0x97a>
    0.00 :	  3516a09c9f:   shl    $0x4,%rdi
    0.00 :	  3516a09ca3:   movzbl %cl,%eax
    0.00 :	  3516a09ca6:   add    $0x5,%rdx
    0.00 :	  3516a09caa:   lea    (%rdi,%rax,1),%rax
    0.00 :	  3516a09cae:   movzbl (%rdx),%ecx
    0.00 :	  3516a09cb1:   test   %cl,%cl
    0.00 :	  3516a09cb3:   je     3516a09cd8 <do_lookup_x+0x978>
    0.00 :	  3516a09cb5:   movzbl %cl,%ecx
    0.00 :	  3516a09cb8:   shl    $0x4,%rax
    0.00 :	  3516a09cbc:   add    $0x1,%rdx
    0.00 :	  3516a09cc0:   add    %rcx,%rax
    0.00 :	  3516a09cc3:   mov    %rax,%rcx
    0.00 :	  3516a09cc6:   and    $0xf0000000,%ecx
    0.00 :	  3516a09ccc:   xor    %rcx,%rax
    0.00 :	  3516a09ccf:   shr    $0x18,%rcx
    0.00 :	  3516a09cd3:   xor    %rcx,%rax
    0.00 :	  3516a09cd6:   jmp    3516a09cae <do_lookup_x+0x94e>
    0.00 :	  3516a09cd8:   mov    %eax,%eax
    0.00 :	  3516a09cda:   mov    %rax,(%r15)
    0.00 :	  3516a09cdd:   jmpq   3516a09a21 <do_lookup_x+0x6c1>
 Percent |	Source code & Disassembly of libc-2.12.so for cycles
--------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0000003516f256f0 <_dl_addr>:
    0.00 :	  3516f256f0:   push   %r15
    0.00 :	  3516f256f2:   push   %r14
    0.00 :	  3516f256f4:   push   %r13
    0.00 :	  3516f256f6:   push   %r12
    0.00 :	  3516f256f8:   push   %rbp
    0.00 :	  3516f256f9:   mov    %rsi,%rbp
    0.00 :	  3516f256fc:   push   %rbx
    0.00 :	  3516f256fd:   mov    %rdi,%rbx
    0.00 :	  3516f25700:   sub    $0x28,%rsp
    0.00 :	  3516f25704:   mov    0x267885(%rip),%r12        # 351718cf90 <_DYNAMIC+0x450>
    0.00 :	  3516f2570b:   mov    %rdx,0x8(%rsp)
    0.00 :	  3516f25710:   mov    %rcx,0x10(%rsp)
    0.00 :	  3516f25715:   lea    0x908(%r12),%rdi
    0.00 :	  3516f2571d:   callq  *0xf00(%r12)
    0.00 :	  3516f25725:   mov    0x900(%r12),%r11
    0.00 :	  3516f2572d:   test   %r11,%r11
    0.00 :	  3516f25730:   je     3516f25931 <_dl_addr+0x241>
    0.00 :	  3516f25736:   mov    %r12,%r9
    0.00 :	  3516f25739:   xor    %r10d,%r10d
    0.00 :	  3516f2573c:   mov    (%r9),%rax
    0.00 :	  3516f2573f:   test   %rax,%rax
    0.00 :	  3516f25742:   je     3516f2591d <_dl_addr+0x22d>
    0.00 :	  3516f25748:   nopl   0x0(%rax,%rax,1)
    0.00 :	  3516f25750:   cmp    0x340(%rax),%rbx
    0.00 :	  3516f25757:   jb     3516f25910 <_dl_addr+0x220>
    0.00 :	  3516f2575d:   cmp    0x348(%rax),%rbx
    0.00 :	  3516f25764:   jae    3516f25910 <_dl_addr+0x220>
    0.00 :	  3516f2576a:   testb  $0x40,0x315(%rax)
    0.00 :	  3516f25771:   jne    3516f257cc <_dl_addr+0xdc>
    0.00 :	  3516f25773:   movzwl 0x2b0(%rax),%ecx
    0.00 :	  3516f2577a:   mov    %rbx,%r8
    0.00 :	  3516f2577d:   sub    (%rax),%r8
    0.00 :	  3516f25780:   lea    0x0(,%rcx,8),%rsi
    0.00 :	  3516f25788:   movzwl %cx,%edx
    0.00 :	  3516f2578b:   shl    $0x6,%rcx
    0.00 :	  3516f2578f:   sub    %rsi,%rcx
    0.00 :	  3516f25792:   sub    $0x38,%rcx
    0.00 :	  3516f25796:   jmp    3516f257a4 <_dl_addr+0xb4>
    0.00 :	  3516f25798:   nopl   0x0(%rax,%rax,1)
    0.00 :	  3516f257a0:   sub    $0x38,%rcx
    0.00 :	  3516f257a4:   sub    $0x1,%edx
    0.00 :	  3516f257a7:   cmp    $0xffffffffffffffff,%edx
    0.00 :	  3516f257aa:   je     3516f25910 <_dl_addr+0x220>
    0.00 :	  3516f257b0:   mov    %rcx,%rsi
    0.00 :	  3516f257b3:   add    0x2a0(%rax),%rsi
    0.00 :	  3516f257ba:   cmpl   $0x1,(%rsi)
    0.00 :	  3516f257bd:   jne    3516f257a0 <_dl_addr+0xb0>
    0.00 :	  3516f257bf:   mov    %r8,%rdi
    0.00 :	  3516f257c2:   sub    0x10(%rsi),%rdi
    0.00 :	  3516f257c6:   cmp    0x28(%rsi),%rdi
    0.00 :	  3516f257ca:   jae    3516f257a0 <_dl_addr+0xb0>
    0.00 :	  3516f257cc:   mov    0x8(%rax),%rdx
    0.00 :	  3516f257d0:   mov    %rdx,0x0(%rbp)
    0.00 :	  3516f257d4:   mov    0x340(%rax),%rdx
    0.00 :	  3516f257db:   mov    %rdx,0x8(%rbp)
    0.00 :	  3516f257df:   mov    0x8(%rax),%rdx
    0.00 :	  3516f257e3:   cmpb   $0x0,(%rdx)
    0.00 :	  3516f257e6:   je     3516f25a7d <_dl_addr+0x38d>
    0.00 :	  3516f257ec:   mov    0x70(%rax),%rdx
    0.00 :	  3516f257f0:   cmpq   $0x0,0x298(%rax)
    0.00 :	  3516f257f8:   mov    0x8(%rdx),%r10
    0.00 :	  3516f257fc:   mov    0x68(%rax),%rdx
    0.00 :	  3516f25800:   mov    0x8(%rdx),%rdx
    0.00 :	  3516f25804:   mov    %rdx,0x18(%rsp)
    0.00 :	  3516f25809:   mov    0x90(%rax),%rdx
    0.00 :	  3516f25810:   mov    0x8(%rdx),%edx
    0.00 :	  3516f25813:   mov    %edx,0x4(%rsp)
    0.00 :	  3516f25817:   je     3516f2599d <_dl_addr+0x2ad>
    0.00 :	  3516f2581d:   mov    0x2ec(%rax),%edx
    0.00 :	  3516f25823:   test   %edx,%edx
    0.00 :	  3516f25825:   je     3516f25a76 <_dl_addr+0x386>
    0.00 :	  3516f2582b:   sub    $0x1,%edx
    0.00 :	  3516f2582e:   mov    0x300(%rax),%r15
    0.00 :	  3516f25835:   xor    %r13d,%r13d
    0.00 :	  3516f25838:   lea    0x4(,%rdx,4),%r14
    0.00 :	  3516f25840:   xor    %edi,%edi
    0.00 :	  3516f25842:   nopw   0x0(%rax,%rax,1)
    0.00 :	  3516f25848:   mov    (%r15,%r13,1),%ecx
    0.00 :	  3516f2584c:   mov    %rdi,%rdx
    0.00 :	  3516f2584f:   test   %ecx,%ecx
    0.00 :	  3516f25851:   je     3516f258fc <_dl_addr+0x20c>
    0.00 :	  3516f25857:   mov    %ecx,%edx
    0.00 :	  3516f25859:   lea    0x0(,%rdx,4),%rsi
    0.00 :	  3516f25861:   add    0x308(%rax),%rsi
    0.00 :	  3516f25868:   jmp    3516f2587c <_dl_addr+0x18c>
    0.00 :	  3516f2586a:   nopw   0x0(%rax,%rax,1)
    0.00 :	  3516f25870:   add    $0x1,%ecx
    0.00 :	  3516f25873:   mov    %rdx,%rdi
    0.00 :	  3516f25876:   add    $0x4,%rsi
    0.00 :	  3516f2587a:   mov    %ecx,%edx
    0.00 :	  3516f2587c:   lea    (%rdx,%rdx,2),%rdx
    0.00 :	  3516f25880:   lea    (%r10,%rdx,8),%rdx
    0.00 :	  3516f25884:   movzwl 0x6(%rdx),%r8d
    0.00 :	  3516f25889:   test   %r8w,%r8w
    0.00 :	  3516f2588d:   jne    3516f25896 <_dl_addr+0x1a6>
    0.00 :	  3516f2588f:   cmpq   $0x0,0x8(%rdx)
    0.00 :	  3516f25894:   je     3516f258f0 <_dl_addr+0x200>
    0.00 :	  3516f25896:   movzbl 0x4(%rdx),%r9d
    0.00 :	  3516f2589b:   and    $0xf,%r9d
    0.00 :	  3516f2589f:   cmp    $0x6,%r9d
    0.00 :	  3516f258a3:   je     3516f258f0 <_dl_addr+0x200>
    0.00 :	  3516f258a5:   mov    0x8(%rdx),%r11
    0.00 :	  3516f258a9:   mov    %r11,%r9
    0.00 :	  3516f258ac:   add    (%rax),%r9
    0.00 :	  3516f258af:   cmp    %r9,%rbx
    0.00 :	  3516f258b2:   jb     3516f258f0 <_dl_addr+0x200>
    0.00 :	  3516f258b4:   test   %r8w,%r8w
    0.00 :	  3516f258b8:   je     3516f258c3 <_dl_addr+0x1d3>
    0.00 :	  3516f258ba:   mov    0x10(%rdx),%r8
    0.00 :	  3516f258be:   test   %r8,%r8
    0.00 :	  3516f258c1:   jne    3516f258cc <_dl_addr+0x1dc>
    0.00 :	  3516f258c3:   cmp    %r9,%rbx
    0.00 :	  3516f258c6:   je     3516f258d4 <_dl_addr+0x1e4>
    0.00 :	  3516f258c8:   mov    0x10(%rdx),%r8
    0.00 :	  3516f258cc:   add    %r9,%r8
    0.00 :	  3516f258cf:   cmp    %r8,%rbx
    0.00 :	  3516f258d2:   jae    3516f258f0 <_dl_addr+0x200>
    0.00 :	  3516f258d4:   test   %rdi,%rdi
    0.00 :	  3516f258d7:   je     3516f258df <_dl_addr+0x1ef>
    0.00 :	  3516f258d9:   cmp    0x8(%rdi),%r11
    0.00 :	  3516f258dd:   jbe    3516f258f0 <_dl_addr+0x200>
    0.00 :	  3516f258df:   mov    0x4(%rsp),%r8d
    0.00 :	  3516f258e4:   cmp    (%rdx),%r8d
    0.00 :	  3516f258e7:   ja     3516f258f3 <_dl_addr+0x203>
    0.00 :	  3516f258e9:   nopl   0x0(%rax)
    0.00 :	  3516f258f0:   mov    %rdi,%rdx
    0.00 :	  3516f258f3:   testb  $0x1,(%rsi)
    0.00 :	  3516f258f6:   je     3516f25870 <_dl_addr+0x180>
  100.00 :	  3516f258fc:   add    $0x4,%r13
    0.00 :	  3516f25900:   cmp    %r14,%r13
    0.00 :	  3516f25903:   je     3516f25938 <_dl_addr+0x248>
    0.00 :	  3516f25905:   mov    %rdx,%rdi
    0.00 :	  3516f25908:   jmpq   3516f25848 <_dl_addr+0x158>
    0.00 :	  3516f2590d:   nopl   (%rax)
    0.00 :	  3516f25910:   mov    0x18(%rax),%rax
    0.00 :	  3516f25914:   test   %rax,%rax
    0.00 :	  3516f25917:   jne    3516f25750 <_dl_addr+0x60>
    0.00 :	  3516f2591d:   add    $0x1,%r10
    0.00 :	  3516f25921:   add    $0x90,%r9
    0.00 :	  3516f25928:   cmp    %r10,%r11
    0.00 :	  3516f2592b:   ja     3516f2573c <_dl_addr+0x4c>
    0.00 :	  3516f25931:   xor    %ebx,%ebx
    0.00 :	  3516f25933:   jmp    3516f2597c <_dl_addr+0x28c>
    0.00 :	  3516f25935:   mov    %r9,%rax
    0.00 :	  3516f25938:   cmpq   $0x0,0x8(%rsp)
    0.00 :	  3516f2593e:   je     3516f25948 <_dl_addr+0x258>
    0.00 :	  3516f25940:   mov    0x8(%rsp),%r8
    0.00 :	  3516f25945:   mov    %rax,(%r8)
    0.00 :	  3516f25948:   cmpq   $0x0,0x10(%rsp)
    0.00 :	  3516f2594e:   je     3516f25958 <_dl_addr+0x268>
    0.00 :	  3516f25950:   mov    0x10(%rsp),%rcx
    0.00 :	  3516f25955:   mov    %rdx,(%rcx)
    0.00 :	  3516f25958:   test   %rdx,%rdx
    0.00 :	  3516f2595b:   je     3516f25a5c <_dl_addr+0x36c>
    0.00 :	  3516f25961:   mov    (%rdx),%ecx
    0.00 :	  3516f25963:   mov    0x8(%rdx),%rdx
    0.00 :	  3516f25967:   mov    $0x1,%ebx
    0.00 :	  3516f2596c:   add    0x18(%rsp),%rcx
    0.00 :	  3516f25971:   add    (%rax),%rdx
    0.00 :	  3516f25974:   mov    %rcx,0x10(%rbp)
    0.00 :	  3516f25978:   mov    %rdx,0x18(%rbp)
    0.00 :	  3516f2597c:   lea    0x908(%r12),%rdi
    0.00 :	  3516f25984:   callq  *0xf08(%r12)
    0.00 :	  3516f2598c:   add    $0x28,%rsp
    0.00 :	  3516f25990:   mov    %ebx,%eax
    0.00 :	  3516f25992:   pop    %rbx
    0.00 :	  3516f25993:   pop    %rbp
    0.00 :	  3516f25994:   pop    %r12
    0.00 :	  3516f25996:   pop    %r13
    0.00 :	  3516f25998:   pop    %r14
    0.00 :	  3516f2599a:   pop    %r15
    0.00 :	  3516f2599c:   retq   
    0.00 :	  3516f2599d:   mov    0x60(%rax),%rdx
    0.00 :	  3516f259a1:   mov    0x18(%rsp),%rdi
    0.00 :	  3516f259a6:   test   %rdx,%rdx
    0.00 :	  3516f259a9:   je     3516f259ba <_dl_addr+0x2ca>
    0.00 :	  3516f259ab:   mov    0x8(%rdx),%rdx
    0.00 :	  3516f259af:   mov    0x4(%rdx),%edi
    0.00 :	  3516f259b2:   imul   $0x18,%rdi,%rdi
    0.00 :	  3516f259b6:   lea    (%r10,%rdi,1),%rdi
    0.00 :	  3516f259ba:   xor    %edx,%edx
    0.00 :	  3516f259bc:   cmp    %rdi,%r10
    0.00 :	  3516f259bf:   jae    3516f25a76 <_dl_addr+0x386>
    0.00 :	  3516f259c5:   mov    %rax,%r9
    0.00 :	  3516f259c8:   jmp    3516f259dd <_dl_addr+0x2ed>
    0.00 :	  3516f259ca:   nopw   0x0(%rax,%rax,1)
    0.00 :	  3516f259d0:   add    $0x18,%r10
    0.00 :	  3516f259d4:   cmp    %rdi,%r10
    0.00 :	  3516f259d7:   jae    3516f25935 <_dl_addr+0x245>
    0.00 :	  3516f259dd:   movzbl 0x4(%r10),%ecx
    0.00 :	  3516f259e2:   mov    %ecx,%eax
    0.00 :	  3516f259e4:   shr    $0x4,%al
    0.00 :	  3516f259e7:   mov    %eax,%esi
    0.00 :	  3516f259e9:   sub    $0x1,%esi
    0.00 :	  3516f259ec:   cmp    $0x1,%sil
    0.00 :	  3516f259f0:   ja     3516f259d0 <_dl_addr+0x2e0>
    0.00 :	  3516f259f2:   and    $0xf,%ecx
    0.00 :	  3516f259f5:   cmp    $0x6,%ecx
    0.00 :	  3516f259f8:   je     3516f259d0 <_dl_addr+0x2e0>
    0.00 :	  3516f259fa:   movzwl 0x6(%r10),%r8d
    0.00 :	  3516f259ff:   test   %r8w,%r8w
    0.00 :	  3516f25a03:   je     3516f25a4d <_dl_addr+0x35d>
    0.00 :	  3516f25a05:   mov    0x8(%r10),%rcx
    0.00 :	  3516f25a09:   mov    %rcx,%rsi
    0.00 :	  3516f25a0c:   add    (%r9),%rsi
    0.00 :	  3516f25a0f:   cmp    %rsi,%rbx
    0.00 :	  3516f25a12:   jb     3516f259d0 <_dl_addr+0x2e0>
    0.00 :	  3516f25a14:   test   %r8w,%r8w
    0.00 :	  3516f25a18:   je     3516f25a23 <_dl_addr+0x333>
    0.00 :	  3516f25a1a:   mov    0x10(%r10),%r8
    0.00 :	  3516f25a1e:   test   %r8,%r8
    0.00 :	  3516f25a21:   jne    3516f25a2c <_dl_addr+0x33c>
    0.00 :	  3516f25a23:   cmp    %rsi,%rbx
    0.00 :	  3516f25a26:   je     3516f25a35 <_dl_addr+0x345>
    0.00 :	  3516f25a28:   mov    0x10(%r10),%r8
    0.00 :	  3516f25a2c:   lea    (%r8,%rsi,1),%rsi
    0.00 :	  3516f25a30:   cmp    %rsi,%rbx
    0.00 :	  3516f25a33:   jae    3516f259d0 <_dl_addr+0x2e0>
    0.00 :	  3516f25a35:   test   %rdx,%rdx
    0.00 :	  3516f25a38:   je     3516f25a40 <_dl_addr+0x350>
    0.00 :	  3516f25a3a:   cmp    %rcx,0x8(%rdx)
    0.00 :	  3516f25a3e:   jae    3516f259d0 <_dl_addr+0x2e0>
    0.00 :	  3516f25a40:   mov    0x4(%rsp),%ecx
    0.00 :	  3516f25a44:   cmp    (%r10),%ecx
    0.00 :	  3516f25a47:   cmova  %r10,%rdx
    0.00 :	  3516f25a4b:   jmp    3516f259d0 <_dl_addr+0x2e0>
    0.00 :	  3516f25a4d:   mov    0x8(%r10),%rcx
    0.00 :	  3516f25a51:   test   %rcx,%rcx
    0.00 :	  3516f25a54:   je     3516f259d0 <_dl_addr+0x2e0>
    0.00 :	  3516f25a5a:   jmp    3516f25a09 <_dl_addr+0x319>
    0.00 :	  3516f25a5c:   movq   $0x0,0x10(%rbp)
    0.00 :	  3516f25a64:   movq   $0x0,0x18(%rbp)
    0.00 :	  3516f25a6c:   mov    $0x1,%ebx
    0.00 :	  3516f25a71:   jmpq   3516f2597c <_dl_addr+0x28c>
    0.00 :	  3516f25a76:   xor    %edx,%edx
    0.00 :	  3516f25a78:   jmpq   3516f25938 <_dl_addr+0x248>
    0.00 :	  3516f25a7d:   testb  $0x3,0x314(%rax)
    0.00 :	  3516f25a84:   jne    3516f257ec <_dl_addr+0xfc>
    0.00 :	  3516f25a8a:   mov    0x26744f(%rip),%rdx        # 351718cee0 <_DYNAMIC+0x3a0>
    0.00 :	  3516f25a91:   mov    (%rdx),%rdx
    0.00 :	  3516f25a94:   mov    (%rdx),%rdx
    0.00 :	  3516f25a97:   mov    %rdx,0x0(%rbp)
    0.00 :	  3516f25a9b:   jmpq   3516f257ec <_dl_addr+0xfc>
